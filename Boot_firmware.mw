{{Header}}
{{#seo:
|description=todo
}}
{{boot_firmware}}
{{intro|
todo
}}
= Introduction =
{{stub}}

= {{project_name_short}} BIOS Boot Compatibility =
{{project_name_short}} is compatible with BIOS. Switching to EFI is optional.

= {{project_name_short}} EFI Boot Compatibility =
{{project_name_short}} is compatible with EFI. Disabling EFI is optional. However, if the user keeps EFI enabled, then DKMS key enrollment is recommended, which is documented on the [[Secure Boot]] wiki page.

= {{project_name_short}} coreboot Compatibility =
[[Untested]]. But if coreboot is compatible with Debian on the motherboard, then {{project_name_short}} should also be functional.

= BIOS vs EFI =
Some motherboards only support BIOS and do not yet have EFI support. Others support only EFI and no longer have BIOS support.

Some motherboards support both, BIOS and EFI. The user can choose either in the firmware setup.

What should be preferred? If only one option is available, use whatever is available.

What if the user can select BIOS versus EFI?

EFI (Extensible Firmware Interface) is significantly more complex than BIOS (Basic Input/Output System). One key difference is EFI's reliance on NVRAM (Non-Volatile Random-Access Memory), which functions similarly to a hard drive but is actually a chip integrated into the computer's motherboard.

In BIOS-based systems, all information required to boot the system could be stored on an external device, such as a USB hard drive. EFI, however, operates differently. It typically writes part of the essential boot information to the NVRAM, which is specific to each motherboard.

This architectural difference has important implications for system migration. When a user wants to transfer their hard drive from one computer to another (due to hardware issues or upgrades, for example), they may encounter problems. Unlike with BIOS systems, an EFI-based hard drive will likely be unbootable on the new hardware because it lacks the specific NVRAM data from the original motherboard.

[[ISO|{{project_name_short}}'s ISO installer]] (based on Calamares) attempts to mitigate this issue. <ref>
[https://github.com/Kicksecure/live-config-dist/blob/master/etc/calamares/modules/bootloader.conf.dist <code>/etc/calamares/modules/bootloader.conf</code>] setting {{CodeSelect|inline=true|code=
installEFIFallback: true
}}.
</ref>

EFI comes with a lot more challenges for Linux distributions. See footnote for details. <ref>
* https://github.com/Kicksecure/live-config-dist/commit/9cb8ecd174e3c0002a28056776c9e91d54a1a2b7
* [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1036019 EFI inside VirtualBox breaks Debian Installer (the traditional one, not Calamares)]
* [[Dev/image_creation|Development of System Image Creation and Bootstrapping Tools]]
</ref> Among these challenges is Secure Boot. See [[Secure Boot|Secure Boot user documentation]] and [[Dev/Secure Boot|Complexities and security concerns of Secure Boot in the context of Linux distributions]].

forum discussion: [https://forums.whonix.org/t/bios-vs-efi-vs-coreboot-vs-libreboot/4513 BIOS vs EFI vs coreboot vs libreboot]

payload SeaBios or TianoCore

https://docs.dasharo.com/unified-test-documentation/dasharo-security/206-secure-boot/

= See Also =
{{boot_firmware}}

= Footnotes=
<references/>
{{Footer}}
[[Category: Documentation]]