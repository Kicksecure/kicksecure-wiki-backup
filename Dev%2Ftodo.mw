{{Header}}
{{title|title=
ToDo for Developers
}}
{{#seo:
|description=TODO
}}
{{devwiki}}
{{intro|
TODO
}}
= TODO DEV =
== trixie port - port to Wayland ==
* LXQt - maybe:
** {{Github_link|repo=kicksecure-meta-packages|path=/pull/2}}
** Avoidable?
* Xfce:
** Preferable?
** https://alexxcons.github.io/blogpost_14.html
** https://forums.whonix.org/t/whonix-xfce-development/6213/106

== three finger salute ==
* https://forums.kicksecure.com/t/ctrl-alt-del-three-finger-salute-action/1197
* the three finger salute should so something useful similar to what it does on Windows
** lock screen (Qubes does that)
** start task manager
** emergency shutdown button
* Open a sysmaint (or root) shell?
** This feature can be deferred.
** SAK alike?
*** Can a compromised Wayland swallow the three finger salute and mount a login spoofing attack?
**** Aaron: No, because the salute is read by the handler via evdev, which is provided directly by the kernel. It could receive the keypress despite emerg-shutdown or similar seeing it too, but emerg-shutdown would SIGSTOP the compositor before running the actual Ctrl+Alt+Delete handler.
*** Perhaps we should use the real SAK, but reconfigure its action, if that is at all possible?
**** Aaron: Does not appear to be possible, see https://www.kernel.org/doc/html/v6.0/security/sak.html
** research SIGSTOP
*** Aaron: Looks like it works reliably, even when a stuck kernel thread is involved
** research locked up kernel threads and their abuse potential
*** Aaron: It appears the worst they can do is prevent processes from fully exiting, which isn't a problem for us. They also seem to be very hard to create, unless you have root access. See https://chrisdown.name/2024/02/05/reliably-creating-d-state-processes-on-demand.html
** anti-phishing code
*** static
*** TOTP - perhaps at a later time

== trixie port - dracut - hostonly yes versus no ==
* after Dracut fixes... should Kicksecure images (in trixie) use a different hostonly mode?
* Yes, we should switch to hostonly sloppy mode, which is now being substantially improved to be a lot more generic upstream.

== trixie port - GRUB_DEVICE vs dracut vs initramfs-tools ==
* The following is required for initramfs-tools only:
<pre>
GRUB_DEVICE="/dev/disk/by-uuid/${GRUB_DEVICE_UUID}"
unset GRUB_DEVICE_UUID
</pre>

* grep the source code for this and move it below the following condition because it is not required by dracut:

<pre>
if pkg_installed initramfs-tools ; then?
</pre>

* related: [[dracut]]

== trixie port - deprecate initramfs-tools support - consider making dracut a dependency ==
* todo
* hard depend on dracut?
* if so, must also hard depend on systemd-cryptsetup
* do this during release-upgrade
* related: [[dracut]]

== trixie port - polish default browser handling ==
* open-link-confirmation should be the canonical default browser in all instances
* merge the functionality of tb-default-browser into open-link-confirmation
* (maybe?) configure all browsers offered by Browser Choice to not request to be made the default browser, since the typical default browser controls will override open-link-confirmation and reduce security
* Whonix: open-link-confirmation should only consider torbrowser
* uninstall tb-default-browser inside release-upgrade (if useful)

== trixie port - update derivative signing key derivative.asc ==
* plan how to use a new signing key

== trixie port - meta packages ==
* implement [[Dev/Metapackages]] when porting to trixie
* make sure xscreensaver no longer gets installed by default in Qubes VMs

== trixie port - USB Guard ==
* {{Github_link|repo=security-misc|path=/pull/166}}
* merge locally
* apply fixes on top

== trixie port - desktop theme improvements ==
* suggestions from https://forums.whonix.org/t/xfce-theming-a-few-suggestions/7205/82 valid?
* useful to change the desktop theme?
* Might be useful to postpone after port to trixie. After the first trixie based release. Because by that time, desktop environment choice (Xfce vs LXqt) and wayland should be settled. No point in improving Xfce based style in case of porting to LXQt.
* Provided suggestions for improving Xfce theming and attempted to port the theming to LXQt. Should defer to Trixie.
* Can be postponed after the first trixie based release.

== stardict - investigate ==
* debian policy appliable?
* https://www.kicksecure.com/wiki/Dev/Debian#startdict

== live-hardener vs efi bug ==
<pre>
Aug 10 08:30:55 host live-hardener[767]: mount: /boot/efi: wrong fs type, bad option, bad superblock on overlay, missing codepage or helper program, or other error.
</pre>

== emergency-shutdown - bug - breaks Calamares installer ==
* todo
* Patrick: Still an issue? Duplicate of [[Dev/todo#Kicksecure_installer_versus_live-hardener_bug|Kicksecure installer versus live-hardener bug]]?
** might have been fixed in: https://github.com/Kicksecure/security-misc/commit/c59a3b233bd8893d466c020a2e2695ab545c6e60
** KVM affected?

== emerg-shutdown - delayed shutdown ==
* emerg-shutdown may be triggered by accident, users should have an opportunity to cancel unless the root device has vanished entirely
* for delayed shutdowns, show a warning of some sort and provide clear instructions on how to cancel the shutdown
** switch to a TTY and display a red screen with warning text on it?
*** may conflict with agetty, investigate how to suppress it (or switch to a TTY that isn't in use and that agetty isn't configured to spawn on)
* some users may need instant shutdown without warning, allow configuring the shutdown timeout, including making it 0

== emerg-shutdown - bugs ==
* Qubes:
** Should probably not run in Qubes at all? Disable using systemd unit file conditional?

<pre>
Aug 10 06:10:23 host emerg-shutdown[635]: Failed to find any input device supporting panic keys!
Aug 10 06:10:23 host systemd[1]: emerg-shutdown.service: Main process exited, code=exited, status=1/FAILURE
Aug 10 06:10:23 host systemd[1]: emerg-shutdown.service: Failed with result 'exit-code'.
Aug 10 06:10:35 host memlockd[677]: Mapped file /lib/x86_64-linux-gnu/libgpg-error.so.0
</pre>

* Non-Qubes:
** So far only observed in non-Qubes.

<pre>
Aug 11 08:27:57 localhost memlockd[1006]: Error mmaping /etc/resolv.conf: Invalid argument
</pre>

== emergency-shutdown - debugging improvements ==
* add more debug output:
** every relevant code path should be written to journal
** trigger needs to be recorded
** action needs to be recorded
** purpose: in case of bugs (such as above), it should be able to debug this at least with a (virtual) serial console

== timesync developer wiki page improvements ==
* https://www.whonix.org/wiki/Dev/TimeSync
* [[anondate]]
* https://www.kicksecure.com/wiki/Dev/sdwdate
* please study, improve
* take note of Tor consensus and replay attacks
* in preparation for follow-up tasks

== sdwdate refactoring and improvements ==
* study sdwdate source code
* lightweight refactoring (such as no longer using classes because these are used inconsistently)
* separate into sdwdate-daemon and sdwdate-time-fetcher?
** Aaron: sdwdate-daemon is a very interesting idea, most likely useful for the ClockVM idea, however it is only feasible in situations where one either has multiple networked physical machines or multiple connected virtual machines (i.e. VBox with one Whonix-Gateway and many Whonix-Workstations, or Qubes OS). This is because the daemon has to be able to change the system's time as it sees fit in order to get Tor working (i.e. first get consensus to work by using certificate lifetime if possible, then get circuits to work using consensus, then get real time from three separate servers which are now accessible since circuits work). There is no way to isolate CLOCK_REALTIME changes from the rest of the system, Linux has time namespaces but they don't virtualize CLOCK_REALTIME. Thus sdwdate-daemon would have to be able to modify the system time freely in its mission to find the right time.
** In theory, this could be avoided if time changes could be communicated to the Tor daemon without modifying the system's wall clock. I do not know if this is possible, I suspect it isn't. Even though it is technically feasible, it would potentially be immensely complicated to implement.
** Perhaps implement sdwdate-daemon as a process that only returns whatever the next time step is, and also indicate whether there are further steps? Then sdwdate-time-fetcher could either ignore the date if the daemon indicates more steps are still to come, or accept it. The ClockVM itself would unconditionally accept sdwdate-daemon's reported time values in order to assist it in finding the correct time, then client VMs would only update their clock once the "final step" was reached.
* sdwdate oneshot feature (pick the median time from the 3 pools, output to console, then exit) if considered useful for the next bullet point
* add support for sdwdate to be used as a [https://forums.whonix.org/t/qubes-whonix-gateway-as-clockvm/19015 Qubes-Whonix-Gateway as ClockVM]
* note: sdwdate can already fix the clock if it is very slow (with the help of Tor consensus and anondate)
** Aaron: If the clock is very very slow, this seems to not work. Might be possible to use Tor certificates to get within a year of the correct date, then attempt to brute-force a month that will allow Tor consensus to work. As long as the Tor network itself will not work if the clock is too far off, we don't have to worry too much about replay attacks, untrusted data, etc. - the worst an attacker could do is denial of service, we'll only get working connectivity if we get very close to the correct time (or an adversary controls so many of the servers we're using it can trick us into thinking our time is correct, which is statistically unlikely...? is it actually statistically unlikely?)
* add feature to sdwdate to allow it fixing the clock if it is very fast too
** it may not be possible to implement such a feature securely (setting the clock forward has no security risk but setting the clock backwards makes already expired keys valid again). perhaps should just be a manual action? in theory, by setting the clock backwards very far into the past, sdwdate should be able to fix it. Perhaps we could try once to set the clock backwards just a few hours (not years) based on Tor consensus / anondate? Or perhaps this should only be possible by manual user action?
* use chrony - time setting only - not time fetching - as a replacement for sclockadj as per [[Dev/sdwdate]]
** or if easier, saner, port sclockadj from clock_settime to adjtimex?
** Aaron: Probably easier to port sclockadj, chrony looks a bit dangerous to me.
** please research, consider various options

== kicksecure - update torification improvements ==
* only shipped-by-default apt repositories go through Tor
* ideally, newly added apt repositories should go through Tor as well, as should flatpak installation and updates
** Flatpaks can be made to go through Tor by enabling an HTTPTunnelPort in Tor, then setting http_proxy and https_proxy to http://localhost:9080 (assuming your port number is 9080) when running Flatpak. There doesn't appear to be a way to set a proxy in Flatpak's configuration, thus this would probably require a wrapper.

== flatpak update integration ==
* users are given the ability to easily install flatpaks via browser-choice, but aren't given any easy way to update them
* add code to upgrade-nonroot that also updates flatpaks
* Aaron: Implemented: https://github.com/ArrayBolt3/usability-misc/tree/arraybolt3/flatpak-update
* Patrick: should be deferred until update torification has been improved

== investigate Debian Rolling ==
* investigate why Debian Rolling initiative failed
** From initial research:
*** Lots of disagreement about how exactly to implement it, although https://lists.debian.org/debian-devel/2011/05/msg00275.html had a very large amount of positive feedback compared to other proposals
**** See also DEP-10 (https://dep-team.pages.debian.net/deps/dep10/) which is somewhat orthogonal but related
*** Limited manpower, no one appears to have tried to actually do it
*** Need to cope with the activity occurring in Debian's unstable and testing repositories, which have some turbulence and can cause issues if one isn't careful
*** Likely worth trying to resurrect
* contact people involved previously, if that makes sense
* suggest prospective developers
* Started to write tooling for this: https://github.com/ArrayBolt3/drk Very incomplete, nowhere near usable. Will keep developing this.

== repository-dist - improvements ==
* {{Github_link|repo=repository-dist
* GUI: detect stable, stable-proposed-updates, testers, developers setting in GUI. I.e. if re-running the tool, keep the former setting. Should this depend on previous choice in the GUI (status files, probably easier) or actual status on the disk (might be manually modified by the user)|path=?}}
* add support for switching back and forth between clearnet and onion

== Tool to onionize all APT sources ==
* https://forums.whonix.org/t/tool-to-onionize-all-apt-sources/13367
* Should it be part of repository-dist or a standalone tool?

== verified boot implementation ==
* assume firmware can extend trust to kernel via Sovereign Boot
* create a system for extending trust from kernel to initramfs and userland
* possibly investigate immutable images?
* Implementation idea notes:
** A system running with Verified Boot enabled must have the root partition in live mode (read only with tmpfs overlay). Therefore something similar to live mode will be needed when running in "verified mode"
** dm-verify is what Google uses, there seems to be no compelling reason for us to avoid it.
** Kernel modifications are not permitted, Kicksecure will be signing Debian's shim meaning only vanilla Debian kernels will be bootable. Rely on alternative ways of storing the dm-verify root hash in a secure immutable fashion, such as:
*** TPM / Measured Boot? Highly desirable if security issues don't result, as this avoids the need for user interaction unless something goes wrong.
**** Would require some way of authenticating that the TPM has not been reset (similar to Heads TOTP/HOTP codes)
*** User providing the hash on an external drive?
*** Verification passphrase similar to LUKS passphrase?
** Patrick: TPM is unavailable inside VMs? In this case, verified boot support is still desirable.
* Patrick
** Whonix-Gateway: either no verified boot initially or install user-sysmaint-split by default
** persistent mode, verified boot should still allow for logs persistent
** [[Verified_Boot#When_the_verification_is_over.3F|When the verification is over?]]:
*** "verification is a continuous process happening as data is loaded into memory"
*** "This means if malware manages to modify the /usr/bin/mv program despite immutability, then dm-verity would notice this the next time the user or system is attempting to execute that command."
*** This security gained from this feature is somewhat reduced if the attacker can use ephermal overlays.
** consider [[Sysmaint#enable_sudo_access_in_USER_session|enable sudo access in USER session]] (developer debug mode): disable verified boot + write to disk + regenerate verified boot hash tree (this is to ease debugging issues only happening in user session but not in sysmaint session)
* prefer Debian on true read-only filesystem without ephemeral overlay to benefit from kernel verified continuous verification after boot feature
** [[Verified_Boot#Challenges_with_Immutable_Filesystems|Challenges with Immutable Filesystems]]
*** As-needed ephemeral overlays
*** Use alternate software that doesn't require root to be writable
*** as feasible, up for discussion

== permission-hardener - live bug ==
* got a bug report by e-mail

<pre>
sudo apt install network-manager-openvpn-gnome
</pre>

<pre>
security-misc (3:44.4-1)  ...
INFO: triggered security-misc: 'security-misc' security-misc DPKG_MAINTSCRIPT_
NAME: 'postinst' $\*: 'triggered /usr' 2: '/usr'
/usr/libexec/security-misc/mmap-rnd-bits: INFO: Successfully written ASLR map
config file:
/etc/sysctl.d/30_security-misc_aslr-mmap.conf
Running SUID Disabler and Permission Hardener... See also:
https://www.kicksecure.com/wiki/SUID_Disabler_and_Permission_Hardener
/var/lib/dpkg/info/security-misc.postinst: INFO: running: permission-hardener
enable
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root shadow 744 /usr/lib/live/mount/rootfs/filesystem/usr/sbin/unix_chkpwd
dpkg-statoverride: : `/usr/lib/live/mount/rootfs/filesystem/usr/sbin/unix_chkpwd'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root shadow 744 /usr/lib/live/mount/rootfs/filesystem/usr/sbin/unix_chkpwd' failed with exit code '2'! calling functio
n name: 'commit_policy'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root shadow 744 /usr/lib/live/mount/rootfs/filesystem/usr/sbin/unix_chkp
wd
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/pkexec
dpkg-statoverride: : `/usr/lib/live/mount/rootfs/filesystem/usr/bin/pkexec'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/pkexec' failed with exit code '2'! calling function name:
'commit_policy'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/pkexec
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/sudo
dpkg-statoverride: : `/usr/lib/live/mount/rootfs/filesystem/usr/bin/sudo'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/sudo' failed with exit code '2'! calling function name: 'c
ommit_policy'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root root 744 /usr/lib/live/mount/rootfs/filesystem/usr/bin/sudo
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root shadow 744 /usr/lib/live/mount/medium/usr/sbin/unix_chkpwd
dpkg-statoverride: : `/usr/lib/live/mount/medium/usr/sbin/unix_chkpwd'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root shadow 744 /usr/lib/live/mount/medium/usr/sbin/unix_chkpwd' failed with exit code '2'! calling function name: 'co
mmit_policy'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root shadow 744 /usr/lib/live/mount/medium/usr/sbin/unix_chkpwd
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/medium/usr/bin/pkexec
dpkg-statoverride: : `/usr/lib/live/mount/medium/usr/bin/pkexec'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/medium/usr/bin/pkexec' failed with exit code '2'! calling function name: 'commit_pol
icy'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root root 744 /usr/lib/live/mount/medium/usr/bin/pkexec
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/medium/usr/bin/sudo
dpkg-statoverride: : `/usr/lib/live/mount/medium/usr/bin/sudo'
permission-hardener: [ERROR]: Command 'dpkg-statoverride --add --update root root 744 /usr/lib/live/mount/medium/usr/bin/sudo' failed with exit code '2'! calling function name: 'commit_polic
y'
permission-hardener: [NOTICE]: Executing: dpkg-statoverride --admindir /var/lib/permission-hardener-v2/new_mode --add root root 744 /usr/lib/live/mount/medium/usr/bin/sudo
permission-hardener: [NOTICE]: To compare the current and previous permission modes, install 'meld' (or preferred diff tool) for comparison of file mode changes:
sudo apt install --no-install-recommends meld
meld /var/lib/permission-hardener-v2/existing_mode/statoverride /var/lib/permission-hardener-v2/new_mode/statoverride
permission-hardener: [ERROR]: Exiting with non-zero exit code: '203'
/var/lib/dpkg/info/security-misc.postinst: ERROR: Permission hardening failed.
</pre>

* random guess: Could there be issues with non-latin language settings?
* Why is it /usr/lib/live/mount/rootfs/filesystem?
* Could it be that the user booted into live mode?
* Maybe a case of low RAM where no further writes to RAM were possible?
* Booting into live mode and using APT should be supported as much as feasible.
* In case of insufficient information, could you please add debug code to provide more information in the future?
* Unsure if further information can be requested form the reporter, but I could try.
* Useful to add:

<pre>
test -w "${file_name_from_stat}"
</pre>

* permission hardener might not be the cause of this issue. However, ideally it would show a better error message pointing out the issue.
* Aaron: Cannot reproduce on ISO or in LIVE mode USER.
** The /usr/lib/live/mount path suggests that the issue is the result of attempting to distribution-morph a vanilla Debian Live session. This, IMO, is not something we should support, because:
*** All changes will be lost on reboot, meaning someone who uses this in production will be downloading a lot of Kicksecure packages from our infra every time they start the system.
*** We already offer a live Kicksecure ISO.
*** None of the kernel hardening options will be enabled, and they can't be enabled, because that would require a reboot which will discard everything.
*** And of course, permission-hardener doesn't expect anything under /usr to be read-only.
** Would suggest adding a warning to the distribution morphing documentation that a live Debian ISO session can't be morphed, and that one should download a live Kicksecure ISO if they need a Kicksecure-enhanced live system.
* Patrick: Done. Documented.
* Could you please add better error handling in this case?

== audio ==
=== audio generally ===
* https://forums.whonix.org/t/port-from-pulseaudio-to-pipewire-for-audio-support/16879/40
* please read, comment if something useful to share

=== VirtualBox Intel HD Audio and PipeWire Incompatibility / Audio broken after increasing ram to 5 GB / No sound after latest updates - PipeWire Bug? ===
* https://forums.whonix.org/t/virtualbox-intel-hd-audio-and-pipewire-incompatibility-audio-broken-after-increasing-ram-to-5-gb-no-sound-after-latest-updates-pipewire-bug/18211
* https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1081965
* please investigate if doable with reasonable effort
* Tried switching between Pulseaudio and Pipewire on a booted VM, discovered I could "initialize" the speakers with Pulseaudio and then Pipewire would work thereafter
* Virtually certain this is an upstream bug, was able to reproduce with both Ubuntu 24.04 and Arch Linux.
* Suggest switching to AC97 audio (even Arch Linux defaults to this under Virtualbox).
* Need to investigate upstream code
* Could not get any meaningful hints from pipewire, wireplumber, and pipewire-pulse logs. Pulseaudio shows an "alsa woke us up to write new data to the device but there was actually nothing to write" error in its logs. At this point this is likely to be a bug in VirtualBox or the snd-hda-intel kernel driver.

== live-build - test lb config --dm-verity ==
* Does the ISO still function if build with <code>lb config --dm-verity</code>?
* Does it break apt-get install pkg-name? It might not break it due to overlayfs.
* Lacks live-build support when used with dracut:
** <code>lb config</code> won't even run if you try to enable verity and dracut at the same time, unless you override live-build by commenting that sanity check out
** The ISO won't build initially because the dm-verity building code is trying to find the live filesystem in the wrong location
** dracut isn't configured to include systemd-veritysetup-generator, needed for verifying the root FS in the first place
** No kernel command line options are added to the ISO for verity setup

== package refactoring - kicksecure-meta-packages vs qubes-whonix - #2 ==
* TODO: Reduce packages in https://github.com/Whonix/qubes-whonix/blob/master/debian/control thanks to the improved Qubes support by kicksecure-meta-packages, if applicable.
** https://github.com/ArrayBolt3/qubes-whonix/tree/arraybolt3/kicksecure-qubes-merge
** https://github.com/ArrayBolt3/kicksecure-meta-packages/tree/arraybolt3/kicksecure-qubes-merge
* Patrick: merged, tested and reverted
* Gateway:

<pre>
sudo apt dist-upgrade --no-install-recommends
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
The following package was automatically installed and is no longer required:
  qubes-core-agent-passwordless-root
Use 'sudo apt autoremove' to remove it.
The following NEW packages will be installed:
  codecrypt cython3 diceware dmeventd dosfstools extrepo fuse3 geoip-database kicksecure-cli kicksecure-default-applications-cli
  kicksecure-qubes-cli libaio1 libbytes-random-secure-perl libclone-perl libcrypt-passwdmd5-perl libcrypt-random-seed-perl
  libcrypto++8 libcryptx-perl libdevmapper-event1.02.1 libfftw3-double3 libfile-listing-perl libfuse3-3 libgeoip1 libhtml-parser-perl
  libhtml-tagset-perl libhtml-tree-perl libhttp-cookies-perl libhttp-date-perl libhttp-message-perl libhttp-negotiate-perl
  libio-html-perl libio-socket-ssl-perl liblvm2cmd2.03 liblwp-mediatypes-perl liblwp-protocol-https-perl libmath-random-isaac-perl
  libnet-http-perl libnet-ssleay-perl libntfs-3g89 libsnappy1v5 libtry-tiny-perl libwww-perl libwww-robotrules-perl
  libyaml-libyaml-perl lvm2 magic-wormhole makepasswd ntfs-3g perl-openssl-defaults pwgen python3-attr python3-autobahn
  python3-automat python3-base58 python3-bcrypt python3-cbor python3-click python3-colorama python3-constantly python3-cryptography
  python3-ecdsa python3-flatbuffers python3-geoip python3-hamcrest python3-hkdf python3-humanize python3-hyperlink
  python3-incremental python3-lz4 python3-mnemonic python3-msgpack python3-nacl python3-openssl python3-packaging python3-passlib
  python3-pyasn1 python3-pyasn1-modules python3-pyqrcode python3-service-identity python3-setuptools python3-snappy
  python3-sortedcontainers python3-spake2 python3-tqdm python3-trie python3-twisted python3-txaio python3-txtorcon python3-u-msgpack
  python3-ubjson python3-ujson python3-wsaccel python3-zope.interface
</pre>

* Workstation:

<pre>
sudo apt dist-upgrade --no-install-recommends
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
The following package was automatically installed and is no longer required:
  qubes-core-agent-passwordless-root
Use 'sudo apt autoremove' to remove it.
The following NEW packages will be installed:
  dmeventd dosfstools firefox-esr kicksecure-cli kicksecure-desktop-applications-recommended kicksecure-qubes-cli kicksecure-qubes-gui libaio1 libdevmapper-event1.02.1 libgarcon-1-0
  libgarcon-common liblvm2cmd2.03 libntfs-3g89 libupower-glib3 libxklavier16 lvm2 ntfs-3g xfce4-helpers xfce4-settings
</pre>

== trixie port - split the security-misc into security-misc-shared, security-misc-desktop and security-misc-server ==
* {{Github_link|repo=security-misc|path=/issues/187}}
* This is in preparation for the next task.
* Discussion on how best to do this posted at https://forums.kicksecure.com/t/splitting-security-misc-into-shared-desktop-and-server-packages/674
* keep {{Github_link|repo=security-misc|path=/issues/184}} in mind

== Kicksecure Firewall ==
https://forums.kicksecure.com/t/kicksecure-firewall/378/10

== Meta Packages, Kicksecure, Whonix - Desktop versus Server ==
https://forums.kicksecure.com/t/meta-packages-kicksecure-desktop-versus-kicksecure-server/415

== wipe video RAM ==
* add wipe video RAM support to [[ram-wipe]]
* maybe based on https://wiki.archlinux.org/title/Swap_on_video_RAM
* maybe also based on https://github.com/divestedcg/Brace/blob/master/brace/etc/profile.d/brace-env-overrides.sh
<pre>
# zero video RAM to prevent leakage
# see (CC BY-SA 4.0): https://www.adlerweb.info/blog/2012/06/20/nvidia-x-org-video-ram-information-leak
export R600_DEBUG=zerovram;
export AMD_DEBUG=zerovram;
export RADV_DEBUG=zerovram;
</pre>
* if doable with reasonable effort

== Tor 0.4.8.9 broken in combination with vanguards ==
* https://gitlab.torproject.org/tpo/core/tor/-/issues/40892
* write a script to use git bisect to auto test which commit introduced this issue maybe based on https://forums.whonix.org/t/vanguards-additional-protections-for-tor-onion-services/8064/64
* if not done by upstream yet
* if doable with reasonable effort
* Aaron: vanguards has been removed from Debian Trixie, still worth doing?

== VirtualBox serial console ==
* {{CodeSelect|inline=true|code=
sudo apt install serial-console-enable
}}
* [[Recovery#Serial_Console|Serial Console]]
* causes bug (spam of journal)
* https://forums.whonix.org/t/serial-console-in-virtualbox/8021/13
* fixable? upstream bug report?
* would installation by default be sane or a security issue?

== KVM related ==
=== KVM - 3D Graphics Acceleration - SPICE - Testing - drm ===

* please test: https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_drm
* please mention your configuration (still using SPICE), quote Patrick and report here: https://forums.whonix.org/t/how-to-enable-3d-acceleration-in-kvm/16501/22
* test if DRM (direct rendering manager) is enabled as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_drm
* test performance as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_Performance

=== KVM - 3D Graphics Acceleration - Performance Test - Display SDL ===

* https://forums.whonix.org/t/how-to-enable-3d-acceleration-in-kvm/16501/22
* test SDL
* test if DRM (direct rendering manager) is enabled as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_drm
* test performance as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_Performance

=== KVM - 3D Graphics Acceleration - Performance Test - Display GDK ===

* https://forums.whonix.org/t/how-to-enable-3d-acceleration-in-kvm/16501/22
* test GTK
* test if DRM (direct rendering manager) is enabled as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_drm
* test performance as per https://www.whonix.org/wiki/KVM#3D_Graphics_Acceleration_-_Testing_-_Performance

=== KVM - verify AppArmor sVirt confinement operation ===
* https://forums.whonix.org/t/help-welcome-kvm-development-staying-the-course/166/593

=== KVM - use rootless ===
* https://forums.whonix.org/t/rootless-virtual-machines-with-kvm-and-qemu/20952
* port documentation (and XML files, if needed) to <code>qemu:///session</code>, if sane
* search Kicksecure; and Whonix wiki - using [[Special:ReplaceText]]
* re-check if sVirt is still functional

=== KVM - port to unix domain socket based internal networking for Whonix-Gateway to Whonix-Workstation connections ===
* https://forums.whonix.org/t/help-welcome-kvm-development-staying-the-course/166/594
* update documentation
** https://www.whonix.org/wiki/Multiple_Whonix-Workstation#How-to:_Use_more_than_One_Whonix-Workstation_-_Easy
** https://www.whonix.org/wiki/KVM#Creating_Multiple_Internal_Networks
** https://www.whonix.org/wiki/Multiple_Whonix-Gateway#KVM

== machine-id research ==
* in preparation for the next task
* please read prior discussions
* https://www.whonix.org/wiki/Protocol-Leak-Protection_and_Fingerprinting-Protection#Identifiers_Design_Goals
* https://forums.whonix.org/t/revisit-handling-of-var-lib-dbus-machine-id/18827
* https://forums.whonix.org/t/anonymize-etc-machine-id/7721
* https://gitlab.tails.boum.org/tails/tails/-/issues/7100
* nowadays implemented in dist-base-files
** ./packages/kicksecure/dist-base-files/var/lib/dbus/machine-id
** ./packages/kicksecure/dist-base-files/etc/machine-id
* but maybe needs to be moved back to anon-base-files when porting to Debian trixie? (hard to migrate within the same release codename)
* The machine-id files should not be shipped by a package. They are intended to be generated, not hardcoded, thus Debian's code is probably not going to cope well when a package ships these files. Case in point, live-build deleting them to avoid machines with duplicate IDs in the wild, when we want machines with duplicate IDs in the wild.
* Calamares is designed to write the machine-id files at instalation time. It has a dedicated module for this purpose. However, it does not permit specifying a hardcoded machine-id other than a literal "uninitialized" value or an empty file. So we will have to resort to using a shellprocess for Whonix-Host that will detect when Whonix is in use, and overwrite the machine-id files with a static machine-id. Calamares is the proper location to do this at IMO, since it's designed for this, systemd's docs suggest using the installer for this, and I fear we could run into problems trying to do this on first boot with a systemd unit.
** Patrick: Please implement.
** Patrick: Note, Whonix VMs are built using grml-debootstrap. While using a package to handle these files might be the wrong way. Whonix VMs still need these.

== Polkit - run only in sysmaint mode ==
* [[Polkit]]
* todo: discuss
* find solutions on how to have functional shutdown/restart/etc. buttons

== per-app UID sandboxing ==
* todo: discuss
* related to the following tasks

== stackable wrappers ==
* in preparation for the next two tasks
* https://forums.whonix.org/t/stackable-wrappers/7944
* {{Github_link|repo=proposals|path=/blob/master/634-stackable-wrappers.txt}}
* https://forums.whonix.org/t/write-draft-for-stackable-wrappers-on-debian-devel/18776
* https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=822693
* review, comment, pull request where applicable
* draft and/or open a discussion on debian-devel
* use cases:
** automatically sandbox applications (such as when typing "browser-name")
** warn user against starting certain applications inside sysmaint mode such as browsers

== check out bubblejail ==
* https://github.com/igo95862/bubblejail
* in preparation for next task

== sandbox-app-launcher ==
* [[sandbox-app-launcher]]
* review
* promising? worth bringing back to life, polishing?
* at odds with apparmor.d?
* better using bubblejail?

== automated test suite - cli version ==
* todo: discuss

== apparmor.d review ==
* https://github.com/roddhjav/apparmor.d
* https://forums.whonix.org/t/apparmor-d-full-set-of-apparmor-profiles-1500-profiles/17389
** review
* https://github.com/roddhjav/apparmor.d/issues?q=is%3Aissue+author%3Aadrelanos
** check ticket status
* lightweight security review
** conceivable or too much effort?

== improved server support ==
* documentation
** rebrand wiki CLI for server
* Linux account passwords?
* cloudinit?
* vm-config-dist versus autologin CLI vs GUI vs server

== hidepid ==
* general information: https://www.kicksecure.com/wiki/Security-misc#hidepid
* enable by default for users of user-sysmaint-split?
* hidepid seems to make most sense if using user-sysmaint-split, because then account "user" cannot use sudo/pkexec anyhow
* test and implement https://github.com/systemd/systemd/issues/29893#issuecomment-2757436101 if sane

== research shred ==
* research if shred is still useful nowadays
* if not, should be replaced by safe-rm

= WAITING ON =
== remove unnecessary dependencies from arc-theme ==
* https://github.com/UbuntuBudgie/arc-theme/pull/2
* since upstream is unlikely to react, could you please send a patch to Debian instead if that seems possible/useful?
* or perhaps a different, better theme? separate ticket: [[#desktop theme improvements]]
* Aaron: Pinged Ubuntu Budgie upstream via Matrix, got a response, waiting to see how (or if) that develops. Debian is likely not the right place to override this unless we absolutely have to do that. In either event, the dependencies won't be removed until Forky at best.

== investigate Tor Browser metadata signing and expiration ==
* in context of: https://github.com/QubesOS/qubes-issues/issues/9983#issuecomment-3028994433
* Tor Browser does not appear to sign metadata. Even metadata used by Tor Browser's internal updater might be relying on unsigned metadata.
* Important to explain: Not only signed metadata is required, also fresh metadata is required. Therefore periodic re-signing is required.
* Compare with Firefox: Does Firefox's internal updater even have this feature? If Firefox has it, making the argument for Tor Browser to enable it might be much easier. If not, it might be better to request this feature from Mozilla as well.
* goal of this ticket: The only goal of this ticket is to post feature requests / bug reports on Tor Project (and Mozilla issue tracker if applicable) and to properly communicate this.
* <u>non</u>-goal: implementation
* info:
** Tor Browser uses json files: https://aus1.torproject.org/torbrowser/update_3/release/download-linux-x86_64.json
** Firefox uses xml as per https://firefox-source-docs.mozilla.org/toolkit/mozapps/update/docs/InAppUpdateProcess.html
* draft:

<blockquote>
'''Rollback Attacks Definition:'''

The Update Framework (TUF) defines `rollback attacks` [x]

> An attacker presents files to a software update system that are older than those the client has already seen. With no way to tell it is an obsolete version that may contain vulnerabilities, the user installs the software. Later on, the vulnerabilities can be exploited by attackers.

'''Rollback Attack Protection and Valid-Until Field'''

Rollback attacks attempt to trick the updater into applying an outdated (and potentially vulnerable) version of the software. One widely recommended mitigation against rollback attacks is using a "Valid-Until" field or equivalent freshness period in the signed metadata, after which a given update should no longer be accepted.

Firefox's internal updater does not publicly mention using a "Valid-Until" field (or explicit expiration on update metadata) to guarantee update freshness or safeguard against replay/rollback attacks in the same way as systems like The Update Framework (TUF) or Debian's APT

'''Non-solutions:'''

TLS might mitigate this attack but higher security than what TLS can offer should be provided in case TLS or server compromise.

'''Solution:'''

Server side:
Sign, automatically periodically re-sign update metadata.

Client side:
Accept only metadata signed up to a certain age.

'''Resources:'''

Mozilla has blogged about rollback attacks in the past. [x]

[x] https://theupdateframework.io/docs/security/

[x] https://blog.mozilla.org/attack-and-defense/2020/10/12/guest-blog-post-rollback-attack/
</blockquote>

* Aaron: Filed issue against Tor Browser: https://gitlab.torproject.org/tpo/applications/tor-browser/-/issues/44039 Also requested a Tor Project Gitlab account, which I now have.
** I did not file a report against Mozilla Firefox, because their update mechanism involves automatically generated XML created by a backend server, whereas The Tor Project's update metadata seems to be static and not nearly as complicated.

== grml-debootstrap bootloader installation failure in Docker ==
* https://github.com/grml/grml-debootstrap/issues/348#issuecomment-3017083278
* please use discretion on how worthwhile it is to spend time on this. as in, if you think it's doable without huge effort and you like docker, please implement. Otherwise, please only provide instructions for reproduction and leave it to upstream or tableseeker to fix.
** Aaron: Ran into complications trying to fix this myself, handed off to tabletseeker for further investigation.

== sysmaint panel items ==
* https://forums.kicksecure.com/t/panel-items-missing-feedback/1108/
* please reply
* please implement, if sane
* could also defer to Debian trixie if/when we port to Wayland / LXQt
* Power manager applet issue fixed:
** desktop-config-dist: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/power-manager
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/systray
* Clock applet awaiting input from Patrick.
** Patrick: Clock applet: Can be done when porting to Debian 13 / trixie or Wayland. Preferably not inventing a clock/date widget.
*** Aaron: Moved to "WAITING ON" since the clock is the last part of this that needs implemented, and we don't intend on doing that until the Trixie port is done.

== kicksecure Qubes Template - sdwdate qrexec Denied message ==
* [https://github.com/QubesOS/qubes-issues/issues/7447 Kicksecure inside Debian Template sdwdate qrexec Denied message]
* Rewrote sdwdate-gui to function better under Qubes. '''NOT READY FOR MERGE, REQUIRES CHANGES ON THE QUBES OS SIDE ALSO.'''
** sdwdate-gui: https://github.com/ArrayBolt3/sdwdate-gui/tree/arraybolt3/qubes-redesign
** anon-gw-base-files: https://github.com/ArrayBolt3/anon-gw-base-files/tree/arraybolt3/sdwdate-gui
** kicksecure-base-files: https://github.com/ArrayBolt3/kicksecure-base-files/tree/arraybolt3/sdwdate-gui
* Qubes side:
** https://github.com/QubesOS/qubes-issues/issues/10020
** https://github.com/QubesOS/qubes-core-admin-addon-whonix/pull/21
* pending questions by Patrick on migration path
** Aaron: Absent <code>rm_conffile</code> commands were an oversight. Corrected now.
* Qubes OS side changes merged, waiting to merge sdwdate-gui changes until Trixie port.

== RPi GRUB - contribute to Debian ==
* Start a discussion and contribute to https://raspi.debian.net/ if accepted by upstream.
* This and the above ticket might result in implementation feedback, such as for options in config.txt.
* Combined this and the debian-arm notification ticket into a single email.
* https://lists.debian.org/debian-arm/2025/04/msg00012.html
* Found:
** https://salsa.debian.org/raspi-team
** https://salsa.debian.org/raspi-team
** Seems active as per: https://salsa.debian.org/raspi-team/image-specs/-/issues/74
** https://salsa.debian.org/raspi-team/image-specs/-/issues
*** Please consider posting a feature request there for RPi GRUB support, if that is sensible. Draft:

<pre>
add support for GRUB as bootloader for RPi
</pre>

<pre>
I've recently succeeded in converting an existing Debian Trixie RPi image to boot using GRUB on the RPi 4B and extensively documented how to do that. [1] I also posted about this on the debian-arm mailing list. [2]

Booting in this way has several substantial advantages over the current Raspberry Pi boot process:

* The kernel command line can be modified via /etc/default/grub and files under /etc/default/grub.d. Some software requires or benefits from such modifications and leverages this mechanism in GRUB to make non-invasive changes to the command line. With direct kernel boot, these changes are silently ignored, while with U-Boot + GRUB, they are correctly applied.
* In the event of a bad kernel update, users can easily boot into older kernels as they would on a typical desktop system.
* Recovering from a broken boot without a secondary system becomes much easier, as users can use the GRUB and U-Boot consoles to debug and manually boot the system.
* Multiboot installations on the Pi become possible.

Is this a feature for which you would welcome a merge request here, either as an option or even as the default?

Obviously, at this point, RPi GRUB support could only be added to Forky and later.

(I've also recently submitted a pull request to `grml-debootstrap` (a Debian bootable image builder tool) [3] [4] implementing "basic" RPi support.)

* [1] https://www.kicksecure.com/wiki/Dev/boot#Booting_Debian_Trixie_with_GRUB_+_u-boot_on_Raspberry_Pi_4
* [2] https://lists.debian.org/debian-arm/2025/04/msg00012.html
* [3] http://packages.debian.org/grml-debootstrap
* [4] https://github.com/grml/grml-debootstrap/pull/335
</pre>

* Aaron: Filed issue upstream using template: [https://salsa.debian.org/raspi-team/image-specs/-/issues/78 Support U-Boot + grub-efi boot flow]
** Also filed a bug report against raspi-firmware: [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1102607 Add support for U-Boot + grub-arm64-efi boot flow]

== RPi grml-debootstrap ==
* https://github.com/grml/grml-debootstrap/issues/114
* Draft PR at https://github.com/grml/grml-debootstrap/pull/335, needs more testing and work
* Tested and polished PR and marked it as ready for review.
* Added question about future support for U-Boot + grub-efi-arm64.

== qubes boot modes - in-vm kernel support ==
* todo
* Submitted to Qubes: https://github.com/QubesOS/qubes-linux-pvgrub2/pull/16
* Submitted to FSF: https://lists.gnu.org/archive/html/grub-devel/2025-04/msg00050.html
** Attempt to get attention for the patch again on April 11, try to smooth out some of the possible issues with the patch before sending if at all possible.
** If a second attempt at submitting the patch results in complete silence, return to Qubes and explain that attempts to upstream the patch weren't acknowledged.

== grml-debootstrap - EFI partition size ==
* https://github.com/grml/grml-debootstrap/issues/221
* zeha currently does not want to implement this until systemd-boot "happens" (I'm guessing this means until it is supported by grml-debootstrap).

== GRUB - Debian packages grub-pc and grub-efi co-install-ability ==
* please submit a patch to Debian to make grub-pc and grub-efi co-installable
* [https://bugs-devel.debian.org/cgi-bin/bugreport.cgi?bug=904062 Allow concurrent installation of grub-pc and grub-efi-amd64]
* Submitted and awaiting review: [https://salsa.debian.org/grub-team/grub/-/merge_requests/76#note_590495 Remove ucf conffile conflict between grub-pc and grub-efi-{amd64,ia32}]
* Unfortunately this is not going to be able to make it into Trixie, it will have to wait for Forky before it makes it into Debian Stable.

== ISO - GRUB - silence cosmetic errors in live ISO GRUB ==
* Earlier attempts to fix cosmetic errors in GRUB failed, since they introduced bugs into the live-build-provided boot screen.
* Investigate how to fix this, potentially make an upstream feature request or patch if needed
* Errors include loadfont issues, Secure Boot loading issues
* Sent email to grub-devel mailing list to investigate this

== ISO - memtest86+ ==
<pre>
error: bad shim signature
</pre>

* Fixable?
* Apparently requires a security review: [https://github.com/rhboot/shim-review/issues/314 Meta: Signing memtest86+ v6.10]
* [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1032375 memtest86+: fails to work with Secure Boot enabled]
* Asked about what contributions would allow this to move forward on the debian-efi mailing list: [https://lists.debian.org/debian-efi/2024/12/msg00021.html Memtest86+ Secure Boot signing]

== test SysRq keys under LXQt Wayland ==
* ensure SysRq+unraw, SysRq+k behave as expected in context of [[Login spoofing]]
* Has issues, wlroots bug reported at https://gitlab.freedesktop.org/wlroots/wlroots/-/issues/3930

== ISO - changed files issues ==
(annoted)

<pre>
+ debsums --silent
debsums: changed file /usr/sbin/sources-media (from calamares-settings-debian package) - issue for future verified boot
debsums: missing file /var/lib/dbus/machine-id (from dist-base-files package) - issue for Whonix-Host, non-ideal for Kicksecure but not a blocker
</pre>

<pre>
+ debsums --config --silent
debsums: changed file /etc/calamares/modules/unpackfs.conf (from calamares-settings-debian package) - issue for future verified boot
debsums: changed file /etc/cryptsetup-initramfs/conf-hook (from cryptsetup-initramfs package) - issue for future verified boot
debsums: changed file /etc/machine-id (from dist-base-files package) - issue for Whonix-Host, non-ideal for Kicksecure but not a blocker
</pre>

* All of these are modified by live-build itself:
** <code>/usr/sbin/sources-media</code> is modified by <code>live-build/share/hooks/normal/5050-dracut.hook.chroot</code> so that it points to the proper location of the on-ISO apt repo when dracut is in use (the location is different when initramfs-tools is used). The need for this could potentially be removed by modifying the <code>sources-media</code> script to autodetect the correct location, though this requires upstream to be receptive to the idea.
*** Please discuss upstream. Since there is already some sort of dm-verity support in upstream live-build (scripts/build/binary_dm-verity), upstream might be receiptive.
**** Feature request filed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1089618
** <code>/var/lib/dbus/machine-id</code> is deleted by <code>live-build/share/hooks/normal/8020-remove-dbus-machine-id.hook.chroot</code>, which has a note in it as follows: "This removes dbus machine id that cache that makes each system unique." This seems important and I can't think of an obvious way to avoid needing to do this. My Kicksecure VMs appear to have machine IDs, but it's unclear how they're being generated originally, so it may be worth enabling the machineid module in our Calamares configuration to ensure that the machine ID is properly generated.
*** See also: https://www.whonix.org/wiki/Protocol-Leak-Protection_and_Fingerprinting-Protection#Identifiers_Design_Goals
*** TODO: Discuss.
**** Proposal for fixing this made.
** <code>/etc/calamares/modules/unpackfs.conf</code> is modified by <code>live-build/share/hooks/normal/5050-dracut.hook.chroot</code> so that it points to the proper location of the on-ISO squashfs containing the operating system. Again, the location is different when initramfs-tools is used. This is a "hardcoded" configuration file, there isn't a way to add autodetection logic here. It might be possible to make a pull request to Calamares that would allow it to skip squashfses that didn't exist?
*** Yes, please discuss upstream.
**** Feature request filed: https://github.com/calamares/calamares/issues/2409
** <code>/etc/cryptsetup-initramfs/conf-hook</code> is modified by <code>live-build/share/hooks/normal/1010-enable-cryptsetup.hook.chroot</code>, where it is used to enable cryptsetup in initramfs-tools. Assuming this isn't legacy configuration, this seems important and I can't think of an obvious way to avoid needing to do this. Might be worth testing to see if this is still necessary though.
*** Yes, please.
**** Bug report made: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1089624
** <code>/etc/machine-id</code> is deleted by <code>live-build/share/hooks/normal/8020-remove-dbus-machine-id.hook.chroot</code>. Has a very similar note to the other machine ID deletion hook. Same concerns apply.
*** Proposal for fixing this made.

== ISO - Finish Module Action Follow-Up ==
* https://github.com/calamares/calamares/issues/2321
* please follow-up
* Followed up on Matrix, will follow up again soon on Github if I don't get a response.
* Was informed by Adriaan de Groot that the code is still unfinished, and also on his radar.

== live-build - add mmdebstrap support ==
* https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1031932
* https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1031929
* Merge request: https://salsa.debian.org/live-team/live-build/-/merge_requests/370

== live-build - use APT with error-on-any ==
* use option <code>apt --error-on=any</code> for all invocations of apt-get (update)
* only needed for apt-get update, otherwise superfluous but non-issue
* this is a security feature
* this is to prevent inconsistent images that succeeded connecting to the "normal" repository but failed to connect to the security repository
* can be implemented using already existing live-build option <code>--apt-options OPTION|"OPTIONS"</code>?
* Requires a patch to live-build. Using <code>--apt-options</code> results in a build failure with <code>E: Command line option --error-on=any is not understood in combination with the other options</code>
* Patch written, submitted upstream as https://salsa.debian.org/live-team/live-build/-/merge_requests/371. New configuration option now used in my branch of live-build.

== security-misc - investigate PAM ==
* there is /etc/pam.d/sudo-i for interactive and /etc/pam.d/sudo
* pam has concepts of common-session-noninteractive vs common-session (non-interactive)
* how could we on the PAM level notice if faillock is used interactively or non-interactively?
* if non-interactive, skip faillock
* if interactive, do not skip faillock
* Bug reports:
** https://github.com/linux-pam/linux-pam/issues/842
** https://github.com/sudo-project/sudo/issues/415
* Once we go sudoless, this will no longer be a concern except for VMs that aren't sudoless.

== live-build - grub.cfg GRUB configuration - loopback.cfg ==
* add https://www.supergrubdisk.org/wiki/Loopback.cfg compatibility (as as Debian Live ISO)
* Requires fixes in live-build and Dracut to make work:
** live-build is specifying the wrong kernel parameter for loopback booting when using dracut - it's using <code>findiso</code> when it should be using <code>iso-scan/filename</code>. A fix for this has been integrated into my fork of live-build. MR to upstream here: https://salsa.debian.org/live-team/live-build/-/merge_requests/376
** dracut is failing to run <code>udevadm trigger</code> during its device scanning, so even when it finds the ISO and attaches it as a loopback device, it never finds it. Only appears to be a problem on Debian Bookworm, Trixie works just fine.
*** Task is on hold until we migrate to Trixie.
** (Side note: At least on QEMU, loopback mounts in GRUB fail with out-of-memory errors if the system uses UEFI. With BIOS it works fine. Not quite sure why this happens, very well may be an issue with QEMU's implementation of UEFI hardware or my usage thereof.)

== live-build - lb-binary should not run apt-get update ==
* todo
* Bug filed at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1087470
* Note that the use of apt-get in the binary stage appears to be very baked into live-build's logic. It's pretty unlikely this will change.

= REVIEW PLEASE =
== trixie port - live mode notification ==
* inform the user what mode they've booted in via an ephemeral desktop notification shown on login
* reason: https://forums.kicksecure.com/t/live-mode-option-boots-into-persistent-sysmaint/1216
** Aaron: Implemented: https://github.com/ArrayBolt3/desktop-config-dist/commit/03aa359bc5d54958a1e6f4edd29b2c79610c7668

== trixie port - misc ==
* might need to split this into multiple tasks
* waiting for trixie to get frozen and stable enough
* 1) SSH configurations
** move configuration snippets from [[SSH]] wiki page to security-misc [not completed at time of writing in end of 2024 but should be early next year]
*** Aaron: Implemented: https://github.com/ArrayBolt3/security-misc/commit/2ada07cf66727ea66283c55c0ba078489b3db94e
** {{Github_link|repo=legacy-dist|path=/blob/master/usr/sbin/release-upgrade}}
*** add ominous message to release-upgrade script if SSH client or server is installed
**** Aaron: Implemented: https://github.com/ArrayBolt3/legacy-dist/commit/fbeee3a3e6d64fa88f94fbcf1d4a37d9648c6248
*** point out in distribution morphing instructions
**** Aaron: Added a warnings section for this and similar warnings we may add in the future. Did the edit without being logged in so as to make it a "draft for review".
* 2) repository codename split project names
** update repository origin value as per https://www.kicksecure.com/wiki/Dev/APT#changed_its_'Origin'_value_from_'whonix'_to_'kicksecure'
** (revert the revert of {{Github_link|repo=derivative-maker|path=/commit/25f5c7e11afd23f58f40286be1fd9097c31a705e)}}
** Aaron: Done, and added (untested) code to legacy-dist for coping with the change.
* 3) move from usability-misc and security-misc to to helper-scripts
** upgrade-nonroot
** other APT related scripts
** this will allow sysmaint-panel to remove dependency on usability-misc and security-misc
** Aaron: Done.
* 4) convert user-sysmaint-split and sysmaint-panel from "loose packages" to dependencies of the respective meta packages
** add ominous message to release-upgrade script
** Aaron: Discussed via chat, decided to not do this after all.
* 5) Check if /etc/grub.d/10_linux was updated in Debian. If so, update our fork in dist-base-files.
** Aaron: Checked, changes did exist. Synced our fork with upstream.
* 6) https://www.whonix.org/wiki/Dev/Redistribution#Major_Upgrade
** Aaron: Updated appropriate values.
* 7) port all sources.list files to DEB822-Style Format (can be postponed if needed)
** Aaron: Done, however live-build and grml-debootstrap need not-yet-integrated-upstream changes for this to work.
*** live-build: https://salsa.debian.org/ArrayBolt3/live-build/-/tree/arraybolt3/lb-dracut?ref_type=heads
*** grml-debootstrap: https://github.com/ArrayBolt3/grml-debootstrap/tree/arraybolt3/deb822
* 8) ram-wipe: re-add <code>Depends:</code> <code>systemd-cryptsetup</code>
** Aaron: Done.
* 9) review and merge various trixie related improvements to security-misc {{Github_link|repo=security-misc|path=/pulls}}
** Aaron: Done, almost all merged.
*** One PR for Thunderbird prefs should probably be closed without merging. I've deleted Thunderbird prefs from the arraybolt3/trixie branch of security-misc.
*** One PR from raja-grewal (https://github.com/Kicksecure/security-misc/pull/313) I requested changes on and am awaiting a reply.
* 10) debug-misc: {{Github_link|repo=debug-misc|path=/pulls}}
** Aaron: Blocked on raja-grewal's response to my review on https://github.com/Kicksecure/security-misc/pull/313.

== bookworm - 17.4.4.6 bug reports ==
* https://forums.whonix.org/t/shared-folder-blank-running-in-live-mode-after-update/22056
** Aaron: Intentional but somewhat unexpected behavior. Ideas for improvement shared on forums.
* https://forums.kicksecure.com/t/live-mode-option-boots-into-persistent-sysmaint/1216
** Aaron: Likely a user misunderstanding.

== begin Trixie port ==
* immediate goal - rebase Kicksecure as-is ontfo Trixie
* further enhancements are in other tickets under WAITING ON
* Aaron: Current progress can be seen in the <code>arraybolt3/trixie</code> branches of all repos in my account
* Ready for review, some issues still remain that will need worked out prior to a beta or stable release:
** systemd-remount-fs.service and systemd-growfs-root.service are failing when booted in live mode
** privleap autopkgtest is broken

== trixie port - remaining known alpha issues ==
* systemd-remount-fs.service and systemd-growfs-root.service are failing when booted in live mode
** May affect Bookworm also. Fix: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live-improvements
*** Already merged into arraybolt3/trixie as well.
*** Patrick: Merged. (bookwork + trixie)
* privleap autopkgtest is broken
** Fixed, along with other code quality tests: https://github.com/ArrayBolt3/privleap/commit/6e81f2112b5be0a0f5ad1f78b4732d082ea67f00
*** Patrick: Bookworm - not merged (because in trixie branch)
*** Patrick: trixie merge - todo for Patrick

== mouse fingerprinting ==
* todo
* https://forums.whonix.org/t/better-mouse-obfuscation/21445
* notify https://github.com/QubesOS/qubes-gui-daemon/pull/149#issuecomment-2477848847 if fixed
* update https://www.whonix.org/wiki/Keystroke_and_Mouse_Deanonymization
* Current implementation: https://github.com/ArrayBolt3/kloak/tree/arraybolt3/anon-mouse
** Left some notes on the Whonix forums about this implementation's effects and shortcomings.
** Currently have prototype mouse implementation working and published, and prototype touchpad implementation kind of working, but this is not suitable for final release.
** Remaining work:
*** Hook all pointing devices and handle them with libinput (do NOT try to use evdev directly here)
*** Translate all movements into absolute coordinates that can be reported to the kernel (note: relative coordinates might also be acceptable as long as we can perfectly predict where the pointer is going to end up)
*** Use normal kloak buffering to obfuscate mouse movements and timings
*** Display a virtual pointer instead of (or in addition to) the real pointer that shows where the mouse actually is so the user can control it smoothly
* research reading list:
** https://www.mimic.sbs/
** https://github.com/MIMIC-LOGICS/Mouse-Synthesizer/blob/main/MIMIC%20A%20Kinematic%20Theory-Based%20Synthesizer-Alessandro%20Nicola%20Capriati.pdf
** https://www.mimic.sbs/antibot/On-Anti-Bot-Biometric-Protections.md/
*** Aaron: These look potentially useful, but I'm not experienced enough with the math being used here to really understand how this works. Given the final equations and a sufficiently powerful math library however, it might be possible to wrap the algorithms into a library which could then be made part of an application, where the user could define where to click, what area to move the mouse in, and the time period during which the mouse should move, then click a "play" button that would move the mouse and execute the clicks using these synthesized movements. It might even be possible to somehow integrate this into kloak, though I'm unsure if that would actually be advantageous or not.
* test page:
** http://jcarlosnorte.com/assets/fingerprint/
*** please document, if useful
**** Aaron: Does not appear particularly useful, only runs tests on scroll wheel behavior.
* Aaron: Current alpha-quality implementation: https://github.com/ArrayBolt3/kloak-v2

== review and test IPv6 support pull requests ==
* https://forums.whonix.org/t/add-ipv6-support/19893
* https://www.whonix.org/wiki/Dev/ipv6
* please review for Non-Qubes-Whonix, Qubes-Whonix
* goal: merge as much as doable/possible without breaking networking
* enabling IPv6 support in Qubes-Whonix might only be possible during release upgrade to trixie based and orchestration with Qubes
* Waiting for planned fixes to land in PRs.
* Update 1:
** Please recheck.
** Notes:
*** square brackets aren't supported in systemd: https://github.com/systemd/systemd/issues/35621
*** quote "The only issue is that VirtualBox only supports IPv6 if we switch to bridged interface, which exposes whonix gateway to the network. libvirt requires adding custom NAT rules for IPv6, which are only automatically managed for IPv4. If we want to add this, we'd need to add a static IP configuration and give the user instructions on how to add NAT rules on the host. So for now only Qubes will have direct support for IPv6 for outgoing transactions, without further instructions a user needs to do on the host."
* Can't get it working in VBox (even with bridged networking), libvirt (even with a custom network interface), or Qubes (apparent bug in Qubes R4.3 prevents me from making a new network-providing qube). See https://forum.qubes-os.org/t/qubes-4-3-cannot-create-a-new-appvm-that-provides-network-to-other-qubes/30906/2.
* Update 2:
** https://github.com/Whonix/whonix-gw-network-conf/pull/1#discussion_r1903385107
** https://github.com/Whonix/whonix-gw-network-conf/pull/1#discussion_r1903385335
** please direct questions, issues to Daniel (such as by adding these to https://www.whonix.org/wiki/Dev/ipv6 or commenting on a pull request)
* Aaron: Left Daniel some feedback on things that didn't work. If not fixed in a week (so around April 4th), our plan is to merge as-is and fix bugs after.

= ARCHIVED =
== VirtualBox restart bug ==
* https://forums.whonix.org/t/whonix-only-starts-after-several-attempt/22032
* issue:

<pre>
rcpu_preempt self-detected stall on CPU
</pre>

* looks similar like this screenshot: https://community-assets.home-assistant.io/original/4X/7/5/4/754bdc85b2c7c449b16f3413288efcf7911b02fd.png
* environment
** Windows (latest) - if available - preferably - can be a different operating system if that is an issue
** VirtualBox (latest)
** run multiple VMs at the same time (3 or more)
* keep restarting 1 VM such as Kicksecure Xfce
* does any restart hang? if so, please investigate.
* maybe [[Recovery#Kicksecure_specific|Kicksecure specific]] will be helpful
* windows only: this very post might be helpful (disable hyper-v): https://community.home-assistant.io/t/daily-crash-with-virtualbox-rcu-preempt-self-detected-stall-on-cpu/709041/4
* try to boot with and without mouse focus inside the VM versus mouse outside the VM. The system might boot more reliably with mouse focus inside the VM, which might be the same or another bug.
* Aaron: Debugged, posted results on forum. Determined that the current documented fix does not work, found a fix that did work and a workaround that works well enough.

== Kicksecure installer versus live-hardener bug ==
* Environment:
** VirtualBox
** EFI
** btrfs

<pre>
    ERROR: Installation failed: "Bootloader installation error"
    .. - message: "Bootloader installation error"
    .. - details: The bootloader could not be installed. The installation command grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Kicksecure --force returned error code 1.
</pre>

Attempting to run this command manually inside the /tmp calamares chroot for purpose of debugging.

<pre>
Installing for x86_64-efi platform.
grub-install: warning: Cannot set EFI variable Boot0003.
grub-install: warning: efivarfs_set_variable: failed to create /sys/firmware/efi/efivars/Boot0003-8be4df61-93ca-11d2-aa0d-00e098032b8c for writing: Read-only file system.
grub-install: warning: _efi_set_variable_mode: ops->set_variable() failed: Read-only file system.
grub-install: error: failed to register the EFI boot entry: Read-only file system.
zsh: exit 1     grub-install --target=x86_64-efi --efi-directory=/boot/efi  --force
</pre>

Potentially related:

<pre>
sudo journalctl -u live-hardener.service
Aug 09 06:34:08 localhost systemd[1]: Starting live-hardener.service - Remounts auxiliary writable filesystems as read-only and applies a tmpfs overlay on them...
Aug 09 06:34:09 localhost live-hardener[940]: mount: /sys/firmware/efi/efivars: wrong fs type, bad option, bad superblock on overlay, missing codepage or helper program, or other error.
Aug 09 06:34:09 localhost live-hardener[940]:        dmesg(1) may have more information after failed mount system call.
Aug 09 06:34:09 localhost systemd[1]: Finished live-hardener.service - Remounts auxiliary writable filesystems as read-only and applies a tmpfs overlay on them.
</pre>

* Note: Patrick adding refactoring and debugging to live-hardener since.
* What might be happening: live-hardener remounts something as read-only which is incompatible with Calamares.
** Calamares might fail to re-mount as read-write. If so, please create a ticket for later to report this upstream.
* Aaron: Found and fixed issue, live-hardener shouldn't run in ISO Live mode at all. https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live-hardener-fix
** Also fully disabled emerg-shutdown under Bookworm, and attempted to fix the bug resulting in shutdown during installation.
*** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/emerg-shutdown
*** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/emerg-shutdown
* Patrick: All merged.

== emerg-shutdown #3 ==
* paranoid mode - shut down when any removable device (USB drive, keyboard, mouse, etc.) is removed from the system
* Integrate into initramfs so the panic key works on the LUKS prompt
* useful to use the same hardened gcc compile time options as we use for sclockadj?
* do we really want three finger salute to emergency shutdown?
** https://forums.kicksecure.com/t/emergency-key-press-shutdown-sequence/1199
** <code>emerg-shutdown --countdown 10</code>
** <code>emerg-shutdown --cancel</code>
** no cancel = proceed with emergency shutdown
** if confirmed: <code>emerg-shutdown --instant-shutdown</code>
* Aaron: Implemented most suggested features: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/emerg-shutdown Also merged to arraybolt3/trixie.
** Did not implement the --countdown and --cancel features. These seem more appropriate for the three finger salute task. The panic key should be an unconditional and immediate shutdown where speed is important above all else. A three finger salute on the other hand is where other features like delayed emergency shutdown may make sense.
* Patrick: Merged.

== docker inside whonix-workstation versus whonix-workstation-firewall ==
* please comment: https://forums.whonix.org/t/how-can-you-make-a-docker-container-inside-whonix-workstation-connect-to-the-internet/21772/5

== emergency shutdown - #2 ==
* /usr/lib/systemd/system/emerg-shutdown.service and /usr/lib/systemd/system/ensure-shutdown.service
** possible to run earlier then multi-user.target?
** purpose: reliable shutdown in cases for example where the boot process is broken for other reasons or wrong FDE password entry
* add a shutdown breaking systemd unit
** add a systemd unit to security-misc by default that breaks shutdown on purpose
** commented out by default
** purpose: to be easily able to the force shutdown
* Aaron: Implemented:
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/emerg-shutdown
** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/emerg-shutdown
* Patrick: All merged.

== emergency shutdown implementation ==
* when the boot USB drive is removed
* when panic key is pressed (most obviously probably the power button)
* https://github.com/NobodySpecial256/panic-wipe/blob/main/panic.c
* Aaron: Implemented
** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/emerg-shutdown
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/emerg-shutdown
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/emerg-shutdown
* Patrick: All merged.

== display manager selection ==
* What is "the best" display manager?
* please read history: https://forums.whonix.org/t/display-manager-lightdm-gdm3-sddm-or-no-display-manager-startx/12457
* in preparation for the next task
* might resolve the verified boot issue for lightdm requiring read-write access to /var/lib/lightdm
* can be refereed until after Debian trixie or during port to Debian trixie
* Aaron: greetd is looking relatively promising. Commented about it in the linked forum post.
* Patrick: Replied.
* Aaron: Replied back in chat. Possible issues with LightDM not considered blockers, but greetd may still be more desirable.

== dracut size parameter improvement ==
* please comment, if applicable
* https://forums.whonix.org/t/grub-live-improvement-overlay-mount-sh-add-increase-size-mount-command-parameter/21998
* Aaron: Commented and filed feature request.

== improve systemd shutdown reliability ==
* this is required for effective ram-wipe - hung at shutdown would be adverse for security as the system keeps running and ram does not get wiped
* add a systemd unit to some kicksecure package that will result in breaking the shutdown on purpose (ExitStop taking forever)
** use: <code>KillMode=none</code>
** use other settings coming to mind making the systemd unit harder to kill
** this is for testing purposes only
** once this ticket is done, we will comment it out by default and keep it as comments-only for reference, future testing
* check, adjust global values such as:
** <code>timeout</code> is mentioned in /etc/systemd/system.conf logind.conf user.conf

<pre>
DefaultTimeoutStopSec=30s
DefaultTimeoutStartSec=30s
DefaultTimeoutAbortSec=30s
</pre>

* investigate if there is any other ways to make the systemd force shutdown
* investigate if there is any other ways to make the system force shutdown
* Aaron: systemd doesn't appear to have this feature, filed a request: https://github.com/systemd/systemd/issues/38261
** In the mean time, a unit with something similar to <code>ExecStop=bash -c -- 'sleep 15; echo "o" > /proc/sysrq-trigger</code> might work.
*** Actually, this won't work, systemd will hang waiting for the <code>sleep 15</code> to finish, then the system will forcibly power down.
* Patrick: Please consider a small custom (C) program to run kernel call reboot or poweroff in case that is more reliable than sysrq.
** Aaron: Continuing to investigate the cause of shutdown failure - C programs are no more reliable than using SysRq in my testing.
*** So far I have been able to determine that removing i915 (Intel graphics) firmware from <code>/lib/firmware</code> is enough to resolve the issue. However, this shouldn't be needed because vanilla Debian 12 is able to emergency shut down properly with i915 firmware present. Therefore a Kicksecure configuration change is likely interacting poorly with the firmware or driver.
* Aaron: I believe this is currently impossible to implement, see https://github.com/systemd/systemd/issues/38261#issuecomment-3130259046. However, I was able to finally implement emergency shutdown.
** Patrick brought up the possibility of using <code>KillMode=none</code> to keep the shutdown "unstick" mechanism from being killed prematurely. I ended up using <code>KillMode=process</code> instead. I was able to implement this after all, however it may require some tuning by the end user and so is disabled by default. Notes documented in code and left in chat.

== permanent shortcut to VM shared folder ==
* for easy access of shared files via Thunar
* Implemented: https://github.com/ArrayBolt3/vm-config-dist/tree/arraybolt3/shared-folder-readme
* Patrick: Merged.

== calamares - unmount issues ==
* Calamares is not unmounting an encrypted filesystem after installation is complete, thus making livecheck warn about an "unsafe" live state.
* Investigate, determine if this is already fixed in Trixie or in newer versions of Calamares, or if a bugfix needs to be made.
* Aaron: During Trixie porting work, it appears this is already solved in Trixie.

== emergent shutdown discussion ==
* please read, comment if applicable
* https://forums.kicksecure.com/t/unplugging-external-drive-doesnt-trigger-a-shutdown/994
* https://forums.whonix.org/t/panic-button-panic-shutdown-buskill-the-usb-kill-cord-for-your-laptop/13755
* Implemented, but may need further polish:
** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/emerg-shutdown
*** On my test system, this reliably causes the screen to black out and the OS to become inaccessible when I unplug the root filesystem device, but sometimes the power LED will remain lit and the fans will keep running. This happens about 50% of the time, the other 50% of the time a proper shutdown is done. Because of the shutdown method being used, I currently suspect this is the fault of my hardware and not of the implementation, but further testing will be needed to confirm that and documentation should indicate that users must test this feature thoroughly before relying on it in a security-sensitive situation.
*** This is supposed to work even if Kicksecure is burned to an optical disc and that disc is ejected, but I believe is currently will not work. I believe the kernel sends a different event for an ejected optical disc than for a removed USB drive.
*** Panic button support not yet implemented.
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/emerg-shutdown
*** The root device finding script could use more thorough testing and could be expanded to support more scenarios.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/emerg-shutdown
* Left comments documenting that this is now on hold until the Trixie port is done.
** Decided to finish work on this for Bookworm anyway as it was needed for a desired feature, and the work done will be useful for Trixie and higher.
** Discussion is over, implementation is in progress, thus this task is archived.

== review login security ==
* account user without a password might be an issue? Yes, but we have these under control:
** sudo - either unavailable in user session, unavailable for accounts other than account user and/or password protected
** su - nosuid
** login - requires root
** ssh - not installed by default
** loginctl?
** anything else?
* please document
* Aaron: Skimmed Strong User Account Isolation page, didn't see anything missing. Did see that a note about SSH not being installed on Kicksecure by default was missing from the SSH wiki page, added it.

== browser choice - bugs ==
* bug: user session -> chromium -> install as flatpak -> fails at pkexec. Should not be allowed to reach that point.
* Aaron: Fixed (along with a few other bugs): https://github.com/ArrayBolt3/browser-choice/commit/fc37dfb44af5ce47fb550515e3070ed4900addcf
** Patrick: Merged.

== autostart system-maintenance-panel on Whonix-Gateway ==
* https://forums.whonix.org/t/autostart-system-maintenance-panel-on-whonix-gateway/21928
* Aaron: Implemented: https://github.com/ArrayBolt3/anon-gw-base-files/tree/arraybolt3/sysmaint-panel
** Patrick: Merged.

== system-maintenance-panel - improvements ==
* Whonix-Gateway: "network connections" tries to start nmtui which isn't installed by design on Whonix-Gateway
** Aaron: "Install a Browser" shouldn't be displayed in Whonix-Gateway or Whonix-Workstation either. Hid both buttons when running on Whonix.
* Whonix-Gateway: should other utilities be added such as onioncircuits, tor-control-panel, anon-connection-wizard or best avoided to avoid overloading and code complexity?
** Aaron: Fine to add those tools, doesn't add much complexity. Added all three of these to Whonix-Gateway, plus Tor Status Monitor (Nyx) to keep the button panel well-balanced.
* lock screen: If no password is set, this does not actually lock the screen. Should show an error popup that suggests to set a password and run login security check?
** Aaron: Good idea. We should also refuse to lock the screen if the password is locked or "restricted" since it will be impossible to unlock in those situations.
* Aaron: Implemented all requested enhancements:
** systemcheck needed to be changed since the get-password-status-list script had to move to helper-scripts: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/move-password-list-script
*** Patrick: Merged.
** helper-scripts (enhanced the actual lock script, also moved get-password-status-list into this): https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/screen-locking
*** Patrick: Merged.
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/commit/76366bab51e3614e70739a539da79ba65a13e1b3
*** Patrick: Merged.

== review /etc/zsh configuration ==
* https://forums.whonix.org/t/change-default-shell-from-bash-to-zsh-by-default/14792
* {{Github_link|repo=desktop-config-dist|path=/tree/master/etc/zsh}}
* security review
* please suggest other useful changes, if applicable
* Aaron: Audited, added suggested security and usability enhancements in https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/zsh-harden
** Note, one of the changes is to remove the <code>-N</code> option from the default ls alias - this aids usability in my opinion, but might not be desirable? Would be happy to undo that if this is considered too much of a change.
*** Patrick: Should be ok.
** Patrick: Merged.

== systemcheck login security check ==
* systemcheck run in user session shows password for account "user" as "Absent" and account "sysmaint" as "Locked"
* however, sysmaint does not really have a password set.
* Should be "Locked (Absent)" in orange color instead?
* Aaron: Good idea, implemented.
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/login-locked-absent
*** Patrick: Merged.
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/login-locked-absent
*** Patrick: Merged.

== add prevent login test to systemcheck ==
* add a new test to systemcheck?

<pre>
sudo -u nobody su user
sudo: unable to execute /usr/bin/su: Permission denied
</pre>

* Aaron: Implemented using <code>stat</code> rather than a direct execution attempt to make the results independent of the executing user account: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/su-test
* Patrick: Merged.

== reconsider qubes login security ==
* reconsider running systemcheck function check_login_security also inside Qubes
* at time of writing:

<pre>
[INFO] [systemcheck] Kicksecure Login Security Check:
+----------+--------------------------------------+
| Users    | Password               GUI Autologin |
+----------+--------------------------------------+
| root     | Locked (Present)       Enabled       |
| user     | Absent                 Enabled       |
| sysmaint | Locked                 Enabled       |
+----------+--------------------------------------+
</pre>

* root account locked: important to check
* gui autologin: in user session, disable for root, sysmaint?
* Aaron: Implemented Qubes support: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/qubes-login-security
** For GUI autologin, I chose to mimic the behavior of the tool on non-Qubes platforms as much as possible by making it clear that both the default user *and* the sysmaint account were considered as having "autologin" enabled. This isn't totally identical to display manager autologin, so I didn't implement this in helper-scripts /usr/sbin/autologinchange, but instead implemented it directly in systemcheck since applications should be using separate handlers for Qubes "autologin" and lightdm/sddm autologin.
** Patrick: Merged.

== Qubes-Whonix qrexec review ==
* threat model: compromised workstation
* please review all qrexec services and see if these could be used to produce an IP leak from Whonix-Workstation
* check for privacy issues
* fix in case issues are found
* Aaron: Audited, could not find any way to cause an IP leak without lots of user interaction. Did find at least one possible way to cause one with user interaction.
** Filed feature request: https://github.com/QubesOS/qubes-issues/issues/10051
** Patch to implement: https://github.com/QubesOS/qubes-core-admin-addon-whonix/pull/22
*** Patrick: Please implement as suggested by Marek.
**** Aaron: Implemented, left some notes about shortcomings of the current implementation and suggestions for how to further improve things. Waiting on further discussion.
**** Aaron: Awaiting merge, this will be able to be moved to archived once done.
***** Merged.

== Debian on true read-only filesystem without ephemeral overlay ==
* in preparation for verified boot implementation
* research
* investigate, document which locations require ephemeral overlays
* investigate, document which locations are useful to persist even when booting with verified boot such as logs
* report bugs or missing features upstream (so we have something to point to to justify our implementation)
* Aaron: Got vanilla Debian 12 Xfce to get to a functional GUI with a read-only root filesystem.
** Needed to mount a tmpfs to the following directories:
*** <code>/tmp</code>
*** <code>/var/tmp</code>
*** Both of these are simply expected to be world-writable by systemd, see https://systemd.io/TEMPORARY_DIRECTORIES/ and https://github.com/systemd/systemd/issues/17701#issuecomment-734302274
** Needed to mount tmpfs overlays to the following directories:
*** <code>/var/lib/lightdm</code>
*** <code>/home</code>
** In actual use, <code>/home</code> would probably be on a separate partition, as would <code>/var</code> unless aiming for it to be non-persistent. Note that Fedora Silverblue operates in a similar fashion - <code>/var</code> is a separate partition, and <code>/home</code> is mounted from it.
** exim4 and anacron failed to start. anacron complains that it cannot open the timestamp file for job <code>cron.daily</code>, while exim4 complains it cannot touch <code>/var/lib/exim4/config.autogenerated.tmp</code>. Having <code>/var</code> writable would resolve this.
** Once the GUI came up, LibreOffice and Firefox ESR both were able to launch. Web browsing in Firefox seemed to operate normally.
** Should repeat this test, but with Kicksecure 17 rather than a plain Debian VM.
* Aaron: Got Kicksecure 17 to boot directly to a GUI using a read-only root filesystem.
** Reused same mounts as above, except I overlaid all of <code>/var</code> with a tmpfs, and also used a systemd unit to automate the overlay setup process.
** sdwdate-pre.service fails because it is unable to write <code>/usr/libexec/sdwdate/sclockadj</code>. Could be easily ported to drop the file under <code>/run</code> instead.
** swap-file-creator.service fails for obvious reasons
** sysmaint boot malfunctions, at least in part because <code>/etc/passwd</code> can no longer be written to in order to unlock the sysmaint account
** Firefox ESR works when booted into a user session

== investigate networkmanager issue ==
* Kicksecure
<pre>
Mar 25 10:11:41 localhost NetworkManager[990]:   [1742911901.7721] failed to open /run/network/ifstate
</pre>
* issue or safely ignored?
** Aaron: I believe this can be safely ignored, /run/network is an ifupdown thing that (to my awareness) we don't use in Kicksecure. Added a line to systemcheck to silence the warning.

== browser-choice - improvements ==
* Should use <code>&&</code> instead of <code>;</code>?
<pre>
usr/share/browser-choice/plugins/chromium.txt:update-and-install-script=pkexec bash -c -- 'apt-get update; apt-get-noninteractive -y install chromium'
usr/share/browser-choice/plugins/firefox.txt:update-and-install-script=pkexec bash -c -- 'apt-get update; apt-get-noninteractive -y install firefox-esr'
usr/share/browser-choice/plugins/firefox.txt:install-script=pkexec bash -c -- 'extrepo enable mozilla; apt-get update; apt-get-noninteractive -y install firefox'
</pre>
* There might be more such cases. (I did only grep for <code>update;</code>.)
** Aaron: Fixed.
* always "set -x" for transparency
** Aaron: Done, except in places where command output is invisible or would cause confusion. (All installation and removal routines have "set -x" enabled.)
* feature request: Please make text copy/pasteable (useful for users so they can ask for support).
** Aaron: Done for labels, Qt doesn't appear to allow me to do this for radio buttons and checkboxes.
* feature request: always show commands executed in browser choice's console window (this is for transparency - user should be able to follow that's happening under the hood. this enables more users to follow what is going on, debug, etc.)
** Aaron: We get this for free by using "set -x", which is now done.
* feature request: allow maximzing browser choice console window
** Aaron: Implemented.
* bug: after installing Brave Browser using APT using Browser Choice, clicking the browser icon in Xfce (quick start menu), Browser Choice reports that no browser is installed - even though Brave Browser has been installed.
** Aaron: open-link-confirmation issue, fixed here: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/default-browser
* Tor Browser installation: failed - because package tb-updater is not installed. Solution? Install tb-updater, tb-starter using APT first if not yet installed. But this is a problem. Because tb-updater/tb-starter installation requires root. running update-torbrowser does not. Perhaps we should install tb-updater/tb-starter by default?
** Aaron: Installing tb-updater and tb-starter by default sounds like a good idea. Implemented.
** tb-starter by default might add a confusing start menu entry. Perhaps acceptable.
*** Aaron: It does, but it's not horrible.
** Should tb-default-browser be installed?
*** Aaron: No, this overrides open-link-confirmation.
** Best to add support for running update-torbrowser in sysmaint session for simplicity?
*** Aaron: Requires enumerating users on the system, presenting them to the user to ask them which one to install Tor Browser as, then it would need to do that. Would be complicated to implement in tb-updater itself most likely, as we would need the UI and backend layers to be separate so the backend could run as the target user while the frontend operated as the sysmaint user, but the two sides would need to be able to communicate. This preferably would be avoided as tb-updater is already very complicated. This could potentially be hacked around with a "helper" that would simply run <code>sudo -E -u user update-torbrowser</code> (replacing "user" as appropriate). This trick would break under Wayland though due to Wayland socket permissions and would require potentially dangerous "opening up" of security to overcome.
*** Similar to running dist-installer-cli in sysmaint but installing to account "user".
*** Security impact?
*** Then all actions could be run from within sysmaint session. Less exceptions. Less user confusion.
**** Aaron: Having to pick which user to install the browser as, might be more confusing? "Install system wide" is easy to understand, "install as current user" is easy to understand, "pick the user to install as" is a weird concept not usually encountered.
* "click done to exit this wizard" -> Please expand "You can restart this wizard any time by ..."
** Aaron: Implemented.
* feature request: advice user on how to start the installed browser
** Aaron: Implemented.
* feature request: ask to start the browser after installation (will be limited due to sysmaint versus user session - but useful for browsers such as Tor Browser)
** Aaron: This was already implemented and works in my testing.
* feature request: ability to start an already installed browser from browser choice?
** Aaron: Implemented. Also made it so that if browser-choice is called as <code>browser-choice https://example.com</code>, launching a browser from within browser-choice will also pass the URL to it so that it immediately opens in the chosen browser (this enhances integration with open-link-confirmation).
* feature request: in user session, some options are not possible. The window the is grayed out. This is good. Please add a sysmaint notice. (I am sure users will ignore the sysmaint popup or not understand it, then post a screenshot of the grayed out window and ask how. This is a feature request to prevent that.)
** Aaron: Implemented sorta, I had to change how the option restriction mechanism worked in order to add a working launch feature, and in so doing added "(Sysmaint mode required)" strings to options that aren't available in sysmaint mode. This should serve a similar purpose.
* feature request: clarify "system-wide". Users will have trouble to understand which options are available in user session (Tor Browser) versus
** Aaron: Done.
* feature request: increase default size of screen so all browsers are visible by default?
** Aaron: Implemented.
* feature request: allow all screens to maximize?
** Aaron: Not sure how you mean - popup dialogs probably shouldn't be maximizable? All wizard screens can be maximized now though.
* Aaron: browser-choice overhaul: https://github.com/ArrayBolt3/browser-choice/commit/2a54e9011e4ad55448c76e3a2433a496ad419c17

== browser-choice - integrations ==
* Kicksecure: no longer install firefox, thunderbird by default
* make browser-choice the default browser? (lowest priority so it does not take effect over other installed browsers)
* other required or useful integrations?
* Aaron: Implemented:
** browser-choice: https://github.com/ArrayBolt3/browser-choice/commit/8498e02b0afa5e3c107877d057c849e12cc76514 Code and UX improvements, including better guidance about what to do if you're trying to install browsers in a user session.
** open-link-confirmation: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/default-browser Adds browser-choice as a low-priority default browser.
*** Should we be adding other browsers that we advertise in browser-choice here, i.e Mullvad and Brave? Mullvad's "set as default" feature fails silently, so this may be the only way for some users to get a default browser if they choose something non-standard.
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/tree/arraybolt3/default-browser Added a button for launching Browser Choice, since this is going to be vitally necessary.
** kicksecure-meta-packages: https://github.com/ArrayBolt3/kicksecure-meta-packages/tree/arraybolt3/default-browser Removed firefox-esr from dependencies, added browser-choice. (Note that dummy-dependency still provides firefox-esr, I wasn't sure whether I should remove that or not. I'd argue it should not be removed, if the user has some other package that "requires" firefox-esr and we remove dummy-dependency's "provides firefox-esr", it may result in the user's package manager getting stuck or trying to force installation of firefox-esr.)
** anon-meta-packages: https://github.com/ArrayBolt3/anon-meta-packages/tree/arraybolt3/default-browser Removed thunderbird from dependencies, added browser-choice.
** Unrelated, but I also ended up reviewing derivative-maker changes and did some fixes to derivative-update and approx caching while I was there: https://github.com/ArrayBolt3/derivative-maker/commit/58ed8b162dcc868ff8d5e5d57f0066b8a42b82c5
* Patrick: All merged.

== browser-choice - integrations - #2 ==
* add to Qubes Kicksecure Template default Qubes app menu
** Aaron: Added.
* integration with setup-wizard-dist?
** mention Browser Choice in setup-wizard-dist?
*** Aaron: Good idea, added.
** add a button to start Browser Choice from setup-wizard-dist?
*** Aaron: This may not be helpful - both Whonix-Workstation and Kicksecure come with user-sysmaint-split by default, so launching Browser Choice on first user session boot could be confusing.
** port setup-wizard-dist to designer for prettification?
*** Aaron: I don't think this is necessary, the application seems to be "pretty" enough and it isn't complicated enough for the extra abstraction of using Designer to be useful IMO.
* open-link-confirmation: If no browser is installed yet in sysmaint mode, it advises the user "boot into user session" but that would be not of much help, because no browser is installed yet. Please add a message in such cases "open-link-confirmation could not detect an installed browser yet. Consider using a different device or VM to open the link or install a browser." (Needs polishing.)
** Aaron: This is a bit tricky to do for multiple reasons:
*** We'd have to load the <code>install-status</code> snippets from browser-choice and execute them in open-link-confirmation in order to check for the existence of a web browser. This is technically feasible (the <code>install-status</code> snippets are simply Bash code), but complicated and makes me a bit nervous.
*** User-specific browsers can fool a naive approach that simply runs the <code>install-status</code> snippets - if the user has installed Tor Browser in a sysmaint session, the torbrowser check will pass.
*** Ignoring user-specific browsers will result in some users being told they have no browser installed when they do have a browser installed.
*** Checking for user-specific browsers isn't possible because we don't know which user account the user will log into ahead of time.
*** The best way of doing this autodetection I can see is to look for system-wide browsers using browser-choice's plugin code, and suggest the user install a browser if no system-wide browsers are found (noting that this may not be necessary if the user has a user-specific browser installed).
*** A simpler solution, and the one I started out with to avoid overcomplicating things, is to change the last line of the message to say "Ensure a suitable web browser is installed, then reboot into...". This leaves it to the user to decide whether a suitable browser is actually installed or not, something they are better-equipped to do than the program is.
* Aaron: Implemented:
** qubes-template-kicksecure: https://github.com/ArrayBolt3/qubes-template-kicksecure
** setup-wizard-dist: https://github.com/ArrayBolt3/setup-wizard-dist/tree/arraybolt3/browser-choice
** open-link-confirmation: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/default-browser
* Patrick: All merged.

== livecheck - improvements ==
* bug: clicking on "persistent mode" link bug: nothing happens (also no error when run from terminal)
* feature request: make text copy/pasteable
* feature request: improve the right click menu a bit. (show the name of the application "livecheck" to have some context what it is about)
* Aaron: Implemented, but wasn't sure about the UX for adding the Livecheck name to the applet, so I made two different implementations. '''Only one should be merged,''' pick whichever one you like more (screenshots shared in chat). Both variants have the link bug fixed and the text copy-pastable.
** Applet name under exit button: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/livecheck-enhance
*** Patrick: Merged.
** Applet name as part of exit button: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/livecheck-enhance-alt
*** Patrick: Ignored.

== test all vms - systemcheck --verbose --leak-tests ==
* KS, GW, WS:
** systemcheck --verbose --leak-tests
* some new issues: apparmor, erst disable
* please investigate
* maybe unfixable:
** Aaron: Very likely unfixable or too difficult to fix, as we'd have to somehow request info from the vboxsf driver about what mount tags are available. Silenced via /etc/systemcheck.d/30_default.conf.
<pre>
Jul 18 06:31:08 localhost mount-shared[855]: /sbin/mount.vboxsf: mounting failed with the error: No such file or directory
Jul 18 06:31:08 localhost kernel: vboxsf: Host rejected mount of 'shared' with error -2
</pre>
* only inside KVM, do not run in VBox (spice-vdagentd.service systemd drop-in file required in vm-config-dist probably:
** Aaron: Cannot reproduce with virt-manager or with bare QEMU+KVM, did not attempt to mitigate.
<pre>
Jul 18 06:31:08 localhost systemd[1]: spice-vdagentd.service: Failed to parse PID from file /run/spice-vdagentd/spice-vdagentd.pid: Invalid argument
</pre>
* fixable:
** Aaron: Fixed.
<pre>
Jul 22 10:15:47 host mount-shared[815]: accountctl: [ERROR]: User does not exist: 'sysmaint'
</pre>
* apparmor:
** Aaron: fixed.
<pre>
/usr/libexec/systemcheck/check_tor_socks_or_trans_port.bsh: line 116: /usr/bin/curl.anondist-orig: Permission denied
</pre>
* Aaron: Fixes and workarounds implemented:
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/warn-fix
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/systemcheck-warn-fix
** vm-config-dist: https://github.com/ArrayBolt3/vm-config-dist/tree/arraybolt3/enhance
** sdwdate: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/qubes
* Patrick: All merged.

== document debian versus read-only root file system without overlay issues ==
* document on [[Verified Boot]]
* mention on [[Dev/user-sysmaint-split]]
* Aaron: Added documentation.

== user-sysmaint-split: fix Whonix-Workstation StandaloneVM breakage ==
* newly created Whonix-Workstation StandaloneVM suffers from a number of issues:
** default NetVM is sys-firewall, not sys-whonix
** <code>/dev/xvdb</code> is unformatted and blank, resulting in mount failure, which ends up preventing the VM from booting to the point where graphical windows can be displayed
** apt still attempts to use the TemplateVM proxy for downloads
* fedora-41-xfce and debian-12-xfce both work without issues
* we're likely failing to pull in a necessary service in sysmaint sessions
* Aaron: Fixes for most issues: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/qubes-standalone
** Patrick: Merged.
** Issue filed for the NetVM problem: https://github.com/QubesOS/qubes-issues/issues/10067
*** PR: https://github.com/QubesOS/qubes-core-admin-addon-whonix/pull/23
**** Merged. Can this be archived?

== stable vs rolling - create ticket ==
* mention efforts towards Debian rolling and its failure
* mention rolling not necessarily more secure
* link the to the wiki https://www.kicksecure.com/wiki/Dev/Stable_vs_Rolling_Distributions
* purpose of ticket: to get the discussion started with the purpose of improving our developer documentation, problems and future solution tickets
* Aaron: Ticket created: https://forums.kicksecure.com/t/rolling-vs-stable-release-brainstorming/1139

== browser choice - #3 ==
* bug: mozilla repository warning gone? please re-add
* Please add third-party APT repository warning and link to the wiki where applicable.
* Perhaps some repetitive warnings should be declarative and a special box?
** such as: https://www.kicksecure.com/wiki/Install_Software#Third_Party_Repository_Warning
** and: https://www.kicksecure.com/wiki/Install_Software#Programs_in_Home_Folder
* Aaron: Added additional warnings for third-party APT repositories, plus a general warning for software installation risks.
** Also created https://www.kicksecure.com/wiki/Install_Software#Trust_Considerations to link to in the general risks warning.

== browser choice - #2 ==
* simplify mozilla stable helper: simply ship/hardcode/add the key or better use extrepo (already installed by default)
* Check for network access and warn the user if it is not available
** implement as global "plug-in"? (or hardcoded for Kicksecure)
** do it similar as in /usr/libexec/systemcheck/updatecheck
** convert the "am I online" / "do i have internet access" check in /usr/libexec/systemcheck/updatecheck into a helper-script shell library
* Don't show the launch checkbox when running in sysmaint sessions
* Naming considerations? Right now the program calls itself "Application Chooser" in the window titlebar, but "Browser Choice" in the application menu (since "Application Chooser" sounds very generic). -> let's settle on Browser Choice (as long as we don't implement a full blown app store)
* add browser plugins:
** Mullvad Browser
** Brave Browser
* Test on Qubes OS
* Test on Whonix-Workstation
* Add warning popup when run in a Qubes OS AppVM (this is mentioned in the spec but not yet implemented)
* remove /home/aaron string from applyingchangespage.ui
* Implementation (mostly tested, could use one more thorough methodical test but should be merge-ready)
** browser-choice: https://github.com/ArrayBolt3/browser-choice/tree/master
*** Patrick: Merged.
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/network-check
*** Patrick: Merged.
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/refactor-network-check
*** Patrick: Merged.

== sysmaint-panel and browser-choice - build improvements ==
* implement "make" and "make clean" as discussed
* run build-ui.sh from an override_dh_build section in debian/rules
* no longer add autogenerated files to git source code folder
* improve name of "core" files
* Aaron: Implemented:
** browser-choice: https://github.com/ArrayBolt3/browser-choice/commit/14e029beca186de22bc4c82c184c14a1a769272d
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/tree/arraybolt3/ui-refactor

== browser choice ==
* [[Dev/browser-choice]]
* please implement
* Alpha-quality implementation: https://github.com/ArrayBolt3/browser-choice
* Known issues:
** The last page of the wizard has a ridiculous amount of empty space in it, the wizard window needs to resize itself on the last step to fix this.
*** Fixed.
** The precheck and postcheck scripts aren't being run at all.
*** Precheck and postcheck scripts removed, they are difficult to implement as a separate field if the check scripts require privileges without resulting in multiple password prompts. Moreover, apt does package consistency checks before installing or removing software and will error out if things are problematic. If a particular installation or removal routine does require consistency checks, those can be built directly into the install/remove/purge command lines.
** Quite a bit of variable naming could stand to be better.
*** Renamed a bunch of things for clarity.
** Chromium Flatpak doesn't install for reasons discussed in chat.
*** Fixed, unverified flatpak warning added.
** Tor Browser won't launch in sysmaint mode due to (I think) a particular systemd unit not being started. Unsure if we want to do anything about that.
*** Changed handling mechanism so that whether a browser can be managed in user mode or not is up to capability scripts. Also allowed user-sysmaint-split to be run in a user session.
** Logging is ephemeral and all logs are lost as soon as you continue past the "Applying Software Changes" screen. We need to be logging to a file, not just to the display.
*** Real logging is now implemented.
** The Mozilla apt repository version of Firefox cannot be installed, as the helper script needed for it hasn't been written yet.
*** Script is now written and appears to be functional when tested.
* Further ideas for consideration:
** Check for network access and warn the user if it is not available?
** Don't show the launch checkbox when running in sysmaint sessions? That checkbox makes it worryingly easy to launch a web browser in a sysmaint session, something we've worked to avoid.
** Naming considerations? Right now the program calls itself "Application Chooser" in the window titlebar, but "Browser Choice" in the application menu (since "Application Chooser" sounds very generic).
** Add Mullvad Browser plugin?
** Add plugins for email clients and ensure the application works in that scenario? Maybe chat clients too?
*** (Tabs currently don't have special considerations made for them as far as alphabetizing, so there probably is some additional work needed to make the experience perfect in that regard.)
* Further TODOs:
** Test on Qubes OS
** Test on Whonix-Workstation
** Add warning popup when run in a Qubes OS AppVM (this is mentioned in the spec but not yet implemented)

== user-sysmaint-split - Whonix-Gateway ==
* think through what verified_boot=on versus verified_boot=off should do on Whonix-Gateway
* document on [[Dev/user-sysmaint-split]]
** Create a new "VERIFIED Mode | USER Session | daily activities" that is essentially live mode but with /home persistent and dm-verity enabled.
** This should be used for verified boot in general most likely.
** Patrick: Any immediate changes useful on Whonix-Gateway long as verified boot does not get implemented?
*** Aaron: Not that I'm aware of.
** Patrick: If verified boot gets enabled on Whonix-Gateway, how the user would modify system Tor configuration? Use /usr/local similar as it is done in Qubes-Whonix?
*** Aaron: Users could apply Tor configuration the same way as they always would, it would simply be reset on reboot. For persistent changes, users would boot into <code>PERSISTENT Mode | USER Session | power user activities</code>, and make their changes. This is somewhat similar to sysmaint mode, but not as restrictive. A better way to do this could be to allow the user to store their Tor (and maybe specific other system wide) configuration files somewhere that requires admin permissions to modify, but that is not protected by verified boot - perhaps we need to add the concept of a "configuration volume" to our verified boot documentation?
**** Patrick: Yes, we might need something similar to Qubes bind-dirs. In case of Tor, we do already support /usr/local/etc/torrc'''.d''' as documented in https://www.whonix.org/wiki/Tor#Edit_Tor_Configuration
** Patrick: If "PERSISTENT Mode | USER Session" gets renamed to verified mode, that seems to blurry the boundary between persistent mode and live mode? Maybe we don't need to rename any boot modes but implement verified boot invisible to the user? Because if we s/persistent/verified, how would we rename live mode?
*** Aaron: Verified mode won't replace persistent mode unless user-sysmaint-split is installed. Persistent mode will still have a use.
**** Patrick: What is the use case of unverified persistent mode if verified persistent mode is available?
**** Aaron: Necessary to do things like updating software or making persistent configuration changes. Software updates and reconfiguration can be done in verified mode but those changes will be lost upon reboot.
**** Patrick: In case unverified vs verified persistent mode has a use case that we want to support, how would we name unverified live mode versus verified live mode? (That is, in case if there is a use case for unverified live mode that we want to support.)
**** Aaron: Current suggested naming is "VERIFIED Mode" and "PERSISTENT Mode", but maybe "VERIFIED Mode" and "UNVERIFIED Mode" or "VERIFIED Mode" and "UPDATE Mode" would be better? Should discuss in chat.

== dracut initrd compression ==
* research compression options
* probably use zstd
* Done: https://forums.kicksecure.com/t/dracut-compression-research/1131
** Would suggest using <code>xz</code>, but <code>zstd</code> is quite good also.
* Patrick: See forum thread.
* Patrick: Please investigate why our initrd is uncompressed by default since dracut allegedly uses <code>zstd</code> by default.
* Patrick: Please test Fedora's configuration snippet (linked in above forum thread).
* Aaron: Our initrd is gzip-compressed by default. The note about zstd compression defaults in Fedora CoreOS's configuration is not saying that the dracut default is zstd to my awareness, it's saying they're resuing the default settings dracut uses for zstd when zstd is used. From the Dracut manual, "If you pass it just the name of a compression program, it will call that program with known-working arguments."
* Aaron: Tested configuration snippet, performed worse than xz in all metrics.
* Patrick: Please implement xz.
* Aaron: Done: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/initrd-compress
** Implemented as a file directly in /etc/dracut.conf.d, since if the user chooses to modify this file, I believe this ''should'' trigger a conffile prompt if we ever modify this again.
** Tested in a VM, appears to work. It does ''not'' immediately regenerate the initramfs, but it will have an effect the next time the initramfs is regenerated. I believe this is the desired behavior (making the initramfs be regenerated every time dist-base-files is updated would be excessive).

== qubes integration - missing default start menu entry ==
* missing by default:
** Qubes App Launcher (blue/grey "Q") → Whonix-Gateway App Qube (commonly called sys-whonix) → User Firewall Settings
** Qubes App Launcher (blue/grey "Q") → Whonix-Gateway App Qube (commonly called sys-whonix) → Global Firewall Settings
* please do a full review for all of Qubes-Whonix for which other default start menu entries could/should be added where appropriate
* please do a full review for all of Kicksecure for which other default start menu entries could/should be added where appropriate
* Aaron: Made the following changes:
** Kicksecure AppVM: Include Settings Manager, for better feature parity with the Debian 12 AppVM
** Kicksecure TemplateVM: Remove thunar and add Settings Manager, for better feature parity with the Debian 12 TemplateVM
** Kicksecure NetVM: Remove thunar, for better feature parity with the Debian 12 TemplateVM
** Whonix-Workstation AppVM: Include Settings Manager, for better feature parity with the Debian 12 AppVM
** Whonix-Workstation TemplateVM: Add sysmaint-panel. Remove thunar and add Settings Manager, for better feature parity with the Debian 12 TemplateVM.
** Whonix-Workstation NetVM: Sync with Whonix-Workstation AppVM settings.
** Whonix-Gateway AppVM: Add firewall configuration buttons. Include Settings Manager, for better feature parity with the Debian 12 AppVM.
** Whonix-Gateway TemplateVM: Add sysmaint-panel. Remove thunar, add Settings Manager, for better feature parity with the Debian 12 TemplateVM. Sync with Whonix-Gateway NetVM settings.
** Whonix-Gateway NetVM: Sync with Whonix-Gateway AppVM settings.
*** qubes-template-kicksecure changes: https://github.com/ArrayBolt3/qubes-template-kicksecure/tree/arraybolt3/appmenu
*** qubes-template-whonix changes: https://github.com/ArrayBolt3/qubes-template-whonix/tree/arraybolt3/appmenu

== review and improve docker and git integration code ==
* https://forums.whonix.org/t/docker-container-that-builds-whonix-images/17494/136
* please start reading from here: https://forums.whonix.org/t/docker-container-that-builds-whonix-images/17494/117
* holistic review (security, usability for developers)
* [1] ./build-steps.d/1200_prepare-build-machine
** Aaron: Didn't appear to need changes to me. There might be some reorganization we could do around when packages are installed when working with Docker but that's it.
* [2] ./help-steps/git-gpg-verify
** Aaron: Obsoleted by derivative-update, removed.
* [3] ./help-steps/git_sanity_test
** Aaron: Doesn't look like it needs any changes.
* [4] developer-meta-files /usr/bin/dm-git-tag-checkout-latest
** Aaron: Obsoleted by derivative-update option <code>--tag latest</code>. Can be removed once derivative-update is known to be robust.
* Post-review changes: https://github.com/grml/grml-debootstrap/issues/348#issuecomment-3017083278
** Leaving room for tabletseeker to implement the derivative-update script if they want to, otherwise we can add that to the task list for me to work on.
** Patrick: please implement derivative-update script and re-design/re-factor above scripts [1] [2] [3] [4]
* https://github.com/derivative-maker/derivative-maker/pull/26
** Patrick: please take over
* Aaron: Current implementation: https://github.com/ArrayBolt3/derivative-maker/tree/arraybolt3/docker
** All update code has been removed from derivative-maker-docker for reasons explained below.
** derivative-update is intended to act as a general-purpose checkout, fetch, and merge tool for derivative-maker. It attempts to verify refs and tags BEFORE checking them out if at all possible, and reverts back to known-good refs and tags if that isn't possible. It also verifies the active commit before checking out another ref, allowing it to act as a trust-on-first-use mechanism for users who aren't technically skilled enough to verify the repo themselves. THis provides some level of security even if it isn't perfect.
** derivative-maker-docker can't safely do updates within the Docker container because it may break (or at least complicate) this TOFU mechanism to some degree. The user would end up with a container-specific keyring and their own GPG keyring, which could result in inconsistencies between what the user thinks they trust and what they actually trust.
** Code should be considered beta-status. It ''looks'' right to me, but it has not been heavily tested, and it needs careful peer review to ensure it never leaves the repository in a state where code in the working tree is malicious in the event of a repo compromise.
* Patrick: added TODO items to the script
* Aaron: Implemented remaining TODOs in derivative-update: https://github.com/ArrayBolt3/derivative-maker/commit/6e7bcd108e8a0b397b5be0f4f7ee67a91654a821
* Patrick: Please re-review, fix.
* Aaron: Re-reviewed, fixed some bugs and a possible (minor) security issue related to ambiguous references.
* Patrick: Added todo and minor changes. Please re-review, fix.
* Aaron: Looked at new TODOs, left notes in chat for those which shouldn't be implemented, and implemented one that was good. Also reviewed minor changes, they look good to me for the most part except for one comment which I left a note about in chat.
* Patrick: derivative-update: Please improve commentary (unneeded or impossible use of /ref/) based on chat.
* Aaron: Done: https://github.com/ArrayBolt3/derivative-maker/commit/35e4d9b9114c42908f093165c716b69c93e9df4f
* Patrick: Merged.

== Stable vs Rolling Distributions - Development Considerations ==
* add more considerations, development ideas
* https://www.kicksecure.com/wiki/Dev/Stable_vs_Rolling_Distributions
* Aaron: Added a lot of info to the page. Not sure if there are concrete development ideas yet, however it is worth pointing out that Fedora's "semi-stable" approach seems to have many of the security advantages of both stable and rolling releases. Inspiration for further development ideas could potentially be taken from them.

== Enterprise Laptop style WiFi Switch causes Permanent freeze ==
* please reply, if possible: https://forums.kicksecure.com/t/enterprise-laptop-style-wifi-switch-causes-permanent-freeze/1105
* Replied, awaiting response.
* Thread has been inactive for a while, considering complete for now.

== vm-config-dist - add sysmaint support and refactoring ==
* refactoring: out source systemd unit entry <code>ExecStart=/bin/bash -c ...</code> into standalone script
* sysmaint support: <code>/usr/sbin/adduser sysmaint vboxsf</code>
* harden permissions: <code>mkdir --mode 777 --parents /mnt/shared</code> might be non-ideal
* Implemented: https://github.com/ArrayBolt3/vm-config-dist/tree/arraybolt3/enhance
** For permission hardening, the ownership of the directory is set to <code>root:vboxsf</code> (or the KVM equivalent <code>root:kvmsf</code>, which I "made up" for the script), and the permissions are set to 770, allowing any user in the kvmsf or vboxsf group to read and write files in the shared folder.
** VirtualBox automatic directory mounting was placing the directory at <code>/media/sf_shared</code> and not permitting permission changes, thus VBox shared folders are manually mounted with appropriate settings. We should probably change https://www.kicksecure.com/wiki/VirtualBox/Guest_Additions#Kicksecure to match with this. (<code>chown</code> and <code>chmod</code> are no-ops on vboxsf filesystems, likely due to the fact that VirtualBox can't guarantee the host will even understand UNIX file permissions since VirtualBox also works on Windows and macOS.)
** QEMU passes through file permissions much better than VirtualBox when using 9pfs, but as a result the permissions of the shared folder will carry over directly into the guest and there is no overriding them.
** We don't have any documentation at all on QEMU/KVM shared folders yet, to my awareness. Should we write some?
*** Patrick: Documentation is Whonix only because Kicksecure KVM is not so popular yet. We might migrate the docuemntation at a much later point from Whonix to Kicksecure. Please check existing Whonix documentation and adjust for new shared-folder-help: https://www.whonix.org/wiki/KVM#Shared_Folders
** Patrick: Merged.
** Patrick: Suitable for instant package migration?
*** Aaron: Might be worth testing for some time to make sure spurious systemd unit failures don't result. Regression impact is likely to be low though (automatic shared folder mounting didn't work that well to begin with), so we could stand to deploy it sooner than the next release possibly. Shared a minor code patch that may potentially be useful to apply in chat.
** Patrick: Please update documentation for VirtualBox / Whonix KVM.
*** Aaron: Created https://www.kicksecure.com/wiki/KVM#Shared_Folders (specifically the Shared Folders section), updated https://www.kicksecure.com/wiki/VirtualBox/Guest_Additions#Shared_Folder, https://www.kicksecure.com/wiki/About#Usability_by_Default, and https://www.whonix.org/w/index.php?title=KVM&stable=0#Shared_Folders
*** Did not realize that I was supposed to only put the KVM documentation under Whonix, mistakenly thought I should put it under Kicksecure as well. Can remove if desirable.
* Patrick: https://www.whonix.org/wiki/KVM#Shared_Folders still uses <code>chmod 777 /home/user/shared</code>. Can be changed to <code>770</code>?
** Aaron: <code>chmod 770</code> would not be advisable here. KVM will not expose the shared folder as owned by the "kvmsf" group, it will expose the original group membership and permissions of the shared folder. If the host user's UID is 1001, and the guest user's UID is 1000, using <code>chmod 770</code> will likely result in the shared folder being inaccessible within the guest without potentially dangerous permission changes.

== SSH wiki page review ==
* review [[SSH]] wiki page
* this is in preparation for later when porting to Debian trixie, because then the SSH client and separate SSH server configuration snippets should be shipped together with security-misc (there is already a separate task for that)
* should we use <code>UsePAM No</code>?
** Issue when using <code>UsePAM No</code>: libpam-tmpdir is ignored, because not using PAM and folder <code>/run/user/1000</code> is not created after login.
* SSH Login Comparison Table doesn't need a through review.
* Sane to use PQR (post quantum cryptography) ciphers as much as possible only?
** Aaron: The default key exchange algorithm in Debian 13 is mlkem768x25519-sha256 (which is quantum-resistant). It might be a good idea to not change the default settings so as to prevent people locking themselves out of their servers on upgrade. Perhaps we should document how to turn off non-quantum-resistant algorithms manually?
*** Patrick: Yes.
* Aaron: Reviewed, revised.
** Also started an OpenSSH mailing list thread to see what the status is on implementing post-quantum-secure signatures in OpenSSH, since this seems to be the only piece of OpenSSH's cryptography that is not yet quantum-secure.
*** https://lists.mindrot.org/pipermail/openssh-unix-dev/2025-July/041974.html

== sdwdate - set hwclock ==
* set hwclock from sdwdate
* Implemented: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/hwclock

== clock-random-manual-cli - set hwclock ==
* set hwclock from clock-random-manual-cli
* Implemented: https://github.com/ArrayBolt3/bootclockrandomization/tree/arraybolt3/hwclock
* Patrick: Merged.

== root account lockdown ==
* systemcheck: make sure <code>check_login_security</code> would notify root autologin
* systemcheck: make sure <code>check_login_security</code> would notify root account without password
* Implemented:
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/root-login-check
*** Patrick: Merged.
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/root-login-check
*** Patrick: Merged.

== systemcheck - add account_locked_check ==
* check that root account is locked in systemcheck
* check that other accounts are locked when they are expected to be locked
** in user session: sysmaint account - if existing - should be locked
** any other accounts, if any come to mind
*** Aaron: I believe this is already implemented in the root account lockdown task, accounts that are locked are now shown as locked. We could add an extra bit of code for highlighting the sysmaint account in red if it isn't locked while in user mode, but that would require some more (semi-complicated) code and I'm not sure it's needed. It's very hard for a user to unlock the sysmaint account in user mode, impossible to do on accident.

== wayland - gui applications with root rights ==
{{CodeSelect|code=
sudo XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR application-name
}}

* related wiki chapter: [[Root#Wayland|Wayland]]
* should use <code>lxsudo</code> instead of plain <code>sudo</code>? This currently contradicts chapter [[Root#Graphical_Applications_and_Root_Rights|Graphical Applications and Root Rights]].
** Aaron: Tested, <code>lxsudo</code> does not work for launching graphical applications as root under Wayland. <code>sudo</code> with the described environment variable does as long as the graphical toolkit being used attempts to use Wayland.
* or <code>sudo --set-home</code>?
** Aaron: Unsure how this would be helpful.
* Aaron: Added some additional documentation to resolve the contradiction somewhat and fix a Qt-related issue.
* Patrick: Please reconsider <code>sudo --set-home</code> as mentioned.
* Aaron: Added <code>--set-home</code>. Based on experimentation, it looks like this was the default at least in Debian 13 anyway, but adding it can't hurt.

== Set Mousepad to Launch in New Windows instead of Tabs by Default ==
* please implement, if sane
* https://forums.kicksecure.com/t/set-mousepad-to-launch-in-new-windows-instead-of-tabs-by-default/1107/1
* probably in usability-misc
** Implemented: https://github.com/ArrayBolt3/usability-misc/tree/arraybolt3/mousepad
* Patrick: Merged.

== sysmaint - fix screen lock ==
* screen lock button does nothing in a sysmaint session
* Fixed:
** vm-config-dist: https://github.com/ArrayBolt3/vm-config-dist/tree/arraybolt3/screen-lock
** kicksecure-meta-packages: https://github.com/ArrayBolt3/kicksecure-meta-packages/tree/arraybolt3/screen-lock
* Patrick: Merged.

== timesync support reply - timesync documentation - hwclock integration ==
* https://forums.kicksecure.com/t/inrelease-is-not-valid-yet-invalid-for-another-4h-25min-51s/1113
* check if https://forums.whonix.org/t/disable-hwclock-save-service/19067 is applicable
* consider sdwdate running <code>hwclock --systohc</code>
* consider clock-random-manual-cli running <code>hwclock --systohc</code>
** Aaron: Setting the hardware clock ourselves sounds reasonable to me. An accurate clock is generally not sensitive data (though the accuracy of the clock is important). We should provide and document a mechanism for disabling time synchronization.
*** One threat model I can see where time synchronization is dangerous is where the user has to work around an adversary that may physically seize the machine and evaluate the hardware clock to determine if the system was powered on and used recently. In this instance though. the hardware would have to have a non-functional hardware clock that stopped when power was not applied but did not lose the last known time, so this would be a very niche threat model.
*** I have not yet implemented this, but believe it would be good to implement.
* improve https://www.kicksecure.com/wiki/Network_Time_Synchronization
** Aaron: Updated with hardware clock information and NTP time synchronization information. <code>ntpdate</code> is used rather than <code>ntpd</code> to prevent conflicting with sdwdate, and the user is instructed on how to avoid man-in-the-middle attacks when using NTP.

== fix Qubes versus /etc/hosts during Qubes-Whonix build process ==
* https://forums.whonix.org/t/setting-up-anon-base-files-shows-machine-id-prompt-followed-by-ominous-warning-ominous-warning-etc-hosts-is-not-linked-to-either-hosts-whonix-or-hosts-whonix-orig/8045/7
* Aaron: Attempted fix:
** whonix-base-files: https://github.com/ArrayBolt3/whonix-base-files/tree/arraybolt3/qubes-protected-files
** qubes-whonix: https://github.com/ArrayBolt3/qubes-whonix/tree/arraybolt3/qubes-protected-files
** Note: Untested, very difficult to test without these packages being present in the bookworm-developers repository.

== dist-base-files.postinst import error ==
* https://forums.whonix.org/t/var-lib-dpkg-info-dist-base-files-postinst-line-9-usr-libexec-helper-scripts-user-create-bsh-no-such-file-or-directory/21855
* Depends: helper-scripts looks good
* file path looks good
* how can this happen? Depends should be done in time for postinst.
** Aaron: Unsure of cause, looks like the user may have deleted a critical file on accident. It should be impossible for this to happen because of apt's actions.
** User has already resolved issue, so it's difficult to debug what went wrong. Would recommend moving to archive, we can reopen this if a similar issue occurs in the future.

== erst_disable pull request review ==
* please review: {{Github_link|repo=security-misc|path=/pull/306}}
* Aaron: Reviewed, looks good to me.
** Also reviewed {{Github_link|repo=debug-misc|path=/pull/3,}} needs changes before it's ready for merge.
** Patrick: Merged. Looked ok. Please re-review and fix if needed.
*** Aaron: Diffed against previously reviewed repos to ensure no problematic changes were present. Everything looked fine.

== IPv6 comments ==
* please see if any reply/action is required here
* https://github.com/QubesOS/qubes-issues/issues/9983#issuecomment-2941448153
** Aaron: This doesn't look IPv6-related? Replied anyway, but this may have been the wrong link.
** Patrick: Unrelated ticket indeed (my mistake) but thank you for the great input!
* https://github.com/Whonix/whonix-firewall/pull/10#discussion_r2160548052
* Replied to both. Further action may be required from Patrick on both.
* Patrick: Wrong link. My mistake. This is the correct one: https://github.com/QubesOS/qubes-issues/issues/9267#issuecomment-2994566308
** Aaron: Replied, didn't have much to add.

== livecheck - clean up old genmon widget ==
* Python implementation of livecheck is working, but old genmon widget is still present and shows a warning
* Remove from panel default configuration
** Implemented: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/genmon
* Patrick: Merged.

== combined stecho plus strip-html ==
* refactor helper-scripts /usr/libexec/helper-scripts/sanitize_variable
* move strip-html to /usr/bin, if sane
* introduce 1 combined python command that does both, stecho and strip-html. named...? sanitize-string?
* introduce 1 combined python function that does both, stecho and strip-html
* port code base to sanitize-string (in most cases where we are using strip-html, we probably want to use sanitize-string)
* Aaron: Implemented:
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/sanitize-string
** msgcollector: https://github.com/ArrayBolt3/msgcollector/tree/arraybolt3/sanitize-string
** sdwdate: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/sanitize-string
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/sanitize-plus-apparmor
*** Note: While working on this, I noted that the apparmor configuration here had references to <code>/usr/bin/...</code>, which could be problematic in an edge case where one of the scripts tries to execute something from <code>/bin/</code> (which is a symlink to <code>/usr/bin/</code>. To resolve this, I changed all <code>/usr/bin/...</code> references to <code>/{,usr/}bin/...</code> while I was here. Please double-check that the way I did this is correct.
** open-link-confirmation: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/sanitize-string
** tb-updater: https://github.com/ArrayBolt3/tb-updater/tree/arraybolt3/sanitize-string
* Patrick: Merged.

== msgcollector output_func - refactor and add chunking ==
* todo
* Implemented: https://github.com/ArrayBolt3/msgcollector/tree/arraybolt3/chunking
* Patrick: Merged.
* running <code>output_func</code> without arguments error: <code>usr/libexec/msgcollector/msgdispatcher_run_check: line 116: output_args: bad array subscript</code>
** Aaron: Reproduced, but `output_func` should never be called without at least two arguments. Added check to ensure at least two arguments are passed.
* running <code>output_func " "</code> error: <code>Cannot break massive argument into chunks!</code>
** Aaron: Cannot reproduce, attempting the same thing on my end gives these results:

<pre>
sysmaint@localhost:~$ source /usr/libexec/msgcollector/msgdispatcher_run_check
sysmaint@localhost:~$ msgdispatcher_init
sysmaint@localhost:~$ output_func " "
msgcollector unknown option:
</pre>

* worth fixing these two?
* should we add a loop protection (maximum run of the loop) to guard against infinite loops?
** Aaron: The loop shouldn't be able to run infinitely, but guarding against infinite loops when doing complex processing like this is good practice, so yes, we should.
* Aaron: Polished implementation: https://github.com/ArrayBolt3/msgcollector/tree/arraybolt3/chunking
* Patrick: Merged.

== bluetooth configuration pull request review ==
* please review: {{Github_link|repo=security-misc|path=/pull/309}}
* Aaron: Reviewed, looks ready to merge.
* Patrick: Merged.

== ARP request documentation ==
* {{Github_link|repo=security-misc|path=/pull/290#issuecomment-3009358200}}
* please document on Whonix VPN wiki pages that this might be / is requried
** https://www.whonix.org/wiki/Tunnels/Connecting_to_a_VPN_before_Tor
*** Aaron: Did NOT add documentation to this page, connecting to a VPN first means routing Whonix-Gateway through the VPN machine, which I do not believe is affected by our ARP config as Whonix-Gateway is the traffic origin in this scenario.
** https://www.whonix.org/wiki/Tunnels/Connecting_to_Tor_before_a_VPN
*** Aaron: Added documentation.
* other operating systems:
** https://www.whonix.org/wiki/Other_Operating_Systems
*** Aaron: Added documentation. Used a template to avoid repetition.
* Patrick: Merged.

== chat messenger research ==
* https://forums.whonix.org/t/recommended-private-chats-and-social-networks-for-whonix/21561/14
* For inspiration on the best messenger:
** https://privacyspreadsheet.com/messaging-apps
** https://www.securemessagingapps.com/#
** https://www.privacyguides.org/en/real-time-communication/
* review, improve https://www.whonix.org/wiki/Chat
* Aaron: All messengers that appeared worthwhile in the Privacy Spreadsheet are now documented.

== separation of system packages from user packages ==
* create or update a wiki page discussion this topic
* post a Kicksecure feature request to implement this
* implementation will come much later. After verified boot. This is only to have a ticket to point to and to describe the very long term roadmap.
* Quick notes:
** System packages = packages installed directly on the system. User packages = packages installed in a sandbox of some sort. "System" and "user" packages are not used to describe packages, but to describe how packages are installed and where they are located.
** Android provides a separation between the OS and apps, we're hoping to do something similar to this, but that allows arbitrary Debian packages to be used.
** Containerization mechanisms do not generally provide strong security guarantees. Docker, for instance, has [https://www.google.com/search?q=docker+container+escape&ie=UTF-8 numerous techniques one can use for escaping a container].
** Chrome OS implements something similar to what we're looking for with their Crostini technology, by simply using a virtual machine with enough guest-to-host integration to make applications in the VM behave somewhat like native applications. Android support is implemented in a similar fashion.
** https://github.com/cloud-hypervisor/cloud-hypervisor could be used as a base for a virtualization-based sandbox.
* Threw together some initial concepts and a feature request:
** https://forums.kicksecure.com/t/separate-some-user-applications-from-the-operating-system/1120/2
** https://www.kicksecure.com/wiki/Vm-app-manager

== strip html improvements ==
* {{Github_link|repo=msgcollector|path=/blob/master/usr/libexec/msgcollector/striphtml}}
* should be functional under adversarial conditions
* https://stackoverflow.com/questions/753052/strip-html-from-strings-in-python/4869782#4869782
* untrusted output in shown inside Qt GUIs
* Alternatively: disable HTML parsing in our Qt GUIs by default. HTML messages (clickable links) opt-in only for specific messages only.
* similar to stecho
* avoid code duplication
** {{Github_link|repo=sdwdate|path=/blob/master/usr/lib/python3/dist-packages/sdwdate/misc.py}}
* Aaron: Implemented what I believe is a robust HTML stripper. It uses the HTML stripping approach from https://stackoverflow.com/a/925630/19474638, but it runs it through the stripper twice. If the text stripped by one pass is the same as the text stripped by two passes, the text is output as-is (allowing characters like ">" through if they are save). If the second pass changes the text again, the text is assumed to be malicious, and the first-pass stripped text has ">", "<", and "&" characters replaced with underscores. Then that sanitized text is returned.
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/strip-html
** Ported the rest of Kicksecure's codebase to use the new implementation:
*** msgcollector: https://github.com/ArrayBolt3/msgcollector/tree/arraybolt3/strip-html
*** sdwdate: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/strip-html
*** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/strip-html
*** open-link-confirmation: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/strip-html
*** tb-updater: https://github.com/ArrayBolt3/tb-updater/tree/arraybolt3/strip-html

== polkit - investigate impact of disabling ==
* See how many issues are caused by disabling polkit entirely in user sessions (not sysmaint sessions!)
** Reboot and poweroff from the GUI is no longer possible, as systemd treats rebooting as a privileged operation.
** Removable media can no longer be mounted, as udisksd treats removable media mounting as a privileged operation.
** Graphical user creation tools (i.e. users-admin, from gnome-system-tools) no longer function properly, probably because accountsservice is treating user creation as a privileged operation.
** Flatpaks can no longer be installed user-local, the installation errors out:

<pre>
Warning: Failed to get revokefs-fuse socket from system-helper: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to get revokefs-fuse socket from system-helper: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to get revokefs-fuse socket from system-helper: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
Warning: Failed to get revokefs-fuse socket from system-helper: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
error: Failed to install org.gnome.Platform: Failed to activate service 'org.freedesktop.Flatpak.SystemHelper': timed out (service_start_timeout=25000ms)
</pre>

** Network configuration via nmtui or similar (probably includes the network widget in the panel) will probably no longer be configurable, since networkmanager appears to treat network reconfiguration as a privileged operation.
** System usually takes longer to boot, probably because of things trying and failing to start polkit.
* Document how to disable polkit as an opt-in hardening option, possibly useful for browser-only VMs or other situations where a user is not expected to take any privileged operations outside the scope of privleap
** Using systemd ConditionKernelCommandLine or similar parameter for making polkit refuse to start.
* Patrick: documented here [[Polkit]]

== systemcheck improvements ==
* check if root account is locked and warn if it is not
* user-sysmaint-test check: skip on Whonix-Gateway or point out that it is not yet applicable
* check secure boot status (see dist-installer-cli for example source code)
* check if tirdad kernel module is loaded and warn if it is not
* detect Debian EOL using local files, if available
** Aaron: All of the above implemented.
*** https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/enhancements
*** Could use more thorough testing.
*** Debian EOL detection is date-based, could be problematic if the clock is wrong. I am not aware of a non-date-based mechanism for this, the existing mechanism does avoid using the network though.
* detect Qubes EOL using local files
** Per Marek, this is not yet possible.
** Related feature request: https://github.com/QubesOS/qubes-issues/issues/9965

== polkit - review default configuration security ==
* Look for possible flaws in all polkit configuration files installed by default
* Research done, results shared with Patrick.

== 3mdeb verified boot discussion ==
* https://github.com/3mdeb/verified-boot/pull/31
* Looks like we've reached agreement on all sides.

== browser choice - design ==
* wiki text only
* please review, improve [[Dev/browser-choice]]
* Fleshed out both internal and user-facing design quite a bit more, including creating UI mockups.
* please review wiki history (Patrick made changes)
* change to "always cards design" for installation method
* show installation command (even if hidden behind expand box) before execution (for transparency and so that advanced users can stay in the loop what is actually happening, less "magic")
** Aaron: Reviewed and added requested changes.
* boilerplate: {{Github_link|repo=browser-choice
* Patrick:
** open-link-confirmation might need a better error message if no browser is installed yet
** Please point out that "Open Source browser only" and link to criteria. If too much text, perhaps a link to the criteria only.
** Please re-review changes.
** Maybe the tool could indicated somewhere how the browser is currently installed|path=?}} - Like either "Firefox is not installed" or "Firefox is installed as Firefox Stable from Flathub"
* Aaron:
** Re-reviewed changes, made adjustments as appropriate and added requested adjustments from this task.
** open-link-confirmation can be dealt with once we start actually implementing code, however the code implementation task should have a note about it once we get to that point
* Patrick:
** How to handle user-sysmaint-split?
*** Are we going towards rootless appstore? [https://forums.whonix.org/t/user-sysmaint-split-role-based-boot-modes-persistent-user-live-user-persistent-sysmaint-system-maintenance/7708/59 No.]
** How to handle Qubes Template implementation?
*** If run inside Template based App Qube: point out that browser choice will be functional but browser will not persist due to Qubes default Template implementation.
*** If run inside Qubes Template: point out being run inside Qubes Template. Prepend required http_proxy variable as documented in [[Install_Software#Install_from_Flatpak|Install from Flatpak]]?
*** If run inside Qubes Standalone: point out being run inside Qubes Standalone.
* Aaron:
** Suggestions look good to me. Added additional design documentation to take these edge cases into account.

== bash seatbelt ==
* please watch: {{VideoLink
|videoid=DvDu8_A2uhs
|text=Seat Belts and Airbags for bash
}}
** https://github.com/pottmi/stringent.sh
* edit [[Dev/bash]] if something is missing
* Aaron: Watched, took notes, added some info to the wiki.
** Would not recommend adding the video itself as a resource on the page. Some of the info was factually inaccurate, broken, or typoed.

== livecheck python improvements ==
* bug: left click performs same action as right click
* missing feature: lacks right click -> quit button
* Fixed: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/livecheck-exit
* Patrick: Merged.

== dracut - upstream generic initrd default ==
* in reference to https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1078792#80
* does dracut upstream currently use hostonly=no by default, i.e creates generic initrd by default?
* if not, that is what dracut should do. please write a feature request.
* reasons: reproducible builds, universal boot (install once, boot anyhwere), [https://0pointer.net/blog/fitting-everything-together.html ecosystem direction]
* bug: dracut upstream <code>hostonly=yes</code> + <code>hostonly_mode=sloppy</code> has better support than <code>hostonly=no</code> (generic initrd)?
* Discussion: https://github.com/dracut-ng/dracut-ng/pull/1238
* https://github.com/dracut-ng/dracut-ng/issues/748
* https://github.com/dracut-ng/dracut-ng/pull/1283#pullrequestreview-2785669230
* Appears to be done, sloppy hostonly mode is now substantially more generic. If we experience problems with it, those can reasonably be considered bugs that we can help fix in Stable.

== fasttrack build error ==
* CI failing: https://github.com/Whonix/derivative-maker/actions/runs/15558245482
* if transitory can be ignored
* maybe an error with fasttrack, maybe apt-cacher-ng issue
* please investigate

<pre>
Ign:5 http://HTTPS///fasttrack.debian.net/debian-fasttrack bookworm-backports-staging InRelease
Err:4 http://HTTPS///fasttrack.debian.net/debian-fasttrack bookworm-fasttrack InRelease
  503  SSL error: certificate verify failed [IP: 127.0.0.1 3142]
Err:5 http://HTTPS///fasttrack.debian.net/debian-fasttrack bookworm-backports-staging InRelease
  503  SSL error: certificate verify failed [IP: 127.0.0.1 3142]
Fetched 19.9 MB in 32s (625 kB/s)
Reading package lists...
E: Failed to fetch http://HTTPS///fasttrack.debian.net/debian-fasttrack/dists/bookworm-fasttrack/InRelease  503  SSL error: certificate verify failed [IP: 127.0.0.1 3142]
E: Failed to fetch http://HTTPS///fasttrack.debian.net/debian-fasttrack/dists/bookworm-backports-staging/InRelease  503  SSL error: certificate verify failed [IP: 127.0.0.1 3142]
E: Some index files failed to download. They have been ignored, or old ones used instead.
++ exception_handler_general ERR
</pre>

* Appears to be a very tricky bug in apt-cacher-ng itself.
* Can reliably reproduce, but cannot find a reliable workaround. It seems to randomly start working for no reason in some instances.
* Discussed with Patrick, chose to port to the <code>approx</code> package caching proxy instead.
* Current implementation, tested relatively well:
** derivative-maker: https://github.com/ArrayBolt3/derivative-maker/tree/arraybolt3/approx
** genmkfile: https://github.com/ArrayBolt3/genmkfile/tree/arraybolt3/approx
** kicksecure-base-files: https://github.com/ArrayBolt3/kicksecure-base-files/tree/arraybolt3/approx
** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/approx
** whonix-base-files: https://github.com/ArrayBolt3/whonix-base-files/tree/arraybolt3/approx
* Patrick: Merged.

== systemcheck crash when reading livecheck-lsblk file ==
* Needs an apparmor config change to fix.
* Fixed, untested but should work: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/apparmor
** Patrick: Merged.

== user-sysmaint-split - sysmaint user versus R4.3 issue ==
* https://github.com/Whonix/updates-status/issues/240
* Upstream fix in progress: https://github.com/QubesOS/qubes-core-admin/pull/681
* Kicksecure change to go with upstream fix, '''DO NOT MERGE UNTIL UPSTREAM PART IS MERGED''': https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/default-user
* All is merged, seems to be working correctly.

== privleap - add group ==
* for better multi-user support
** https://forums.kicksecure.com/t/multi-user-privleap-issue-systemcheck-updatecheck/1046
* Implemented, required changes to many packages to give the new group proper permissions:
** sdwdate: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/privleap
** sdwdate-gui: https://github.com/ArrayBolt3/sdwdate-gui/tree/arraybolt3/privleap
** anon-connection-wizard: https://github.com/ArrayBolt3/anon-connection-wizard/tree/arraybolt3/privleap
** setup-dist: https://github.com/ArrayBolt3/setup-dist/tree/arraybolt3/privleap
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/privleap
** tb-starter: https://github.com/ArrayBolt3/tb-starter/tree/arraybolt3/privleap
** tb-updater: https://github.com/ArrayBolt3/tb-updater/tree/arraybolt3/privleap
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/privleap
** privleap: https://github.com/ArrayBolt3/privleap/commit/736f145b5bb3276c8e76319dbf23772ff31d69cf
* Patrick: All merged.

== live-hardener improvements - minor code improvements ==
* use end of options for mount, umount
* consider non-existing /proc/cmdline
* Implemented: https://github.com/ArrayBolt3/grub-live/commit/5e4ef191d4858cdfbd1a5a0298454cd82b29963f

== get_writable_fs_lists - minor code improvements ==
* helper-scripts /usr/libexec/helper-scripts/get_writable_fs_lists.sh
* <code>if [[ "${src_device}" =~ ^/dev/ ]]</code>
** try to clause the if indentation early if this is false?

<pre>
[ "$(printf '%s' "${src_device}" | sed 's/[^\/]//g' | wc -c)" = 2 ]
</pre>

* Make it multi step?
* Consider if <code>/sys/class/block/${src_device}/removable</code> is non-existing.

<pre>
src_device="${BASH_REMATCH[1]}"
</pre>

* Might crash with set -o nounset if there is no match?
* Implemented improvements in unit tests commit.

== live-mode.sh - add unit tests ==
* please add unit tests (simulating different environments)
** Implemented: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/livecheck
** Needs a bit more polish (integrate into `run-tests` script, allow <code>live-mode.sh</code> to call the Git repository's version of <code>get_writable_fs_lists.sh</code>.

== livecheck - read-only mode ==
* bring back read-only mode in livecheck
* Done:
** desktop-config-dist: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/livecheck
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/livecheck
* Patrick: Merged.

== live-hardener and livecheck - error handling ==
* please review, improve
* use

<pre>
source /usr/libexec/helper-scripts/wc-test.sh
</pre>

* Done: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live-mode
** Only live-hardener needed better parsing, testing, and error handling, livecheck.py appears to have sufficient error handling already.

== kicksecure Qubes Template - app menu ==
* Qubes start menu: remove Firefox from Qubes Template default app menu (because Firefox should not be started inside Template) (not from App Qube App Menu)
* Done, also added sysmaint-panel after noticing my local qubes-template-kicksecure repo had that change from some time ago and I had never pushed it: https://github.com/ArrayBolt3/qubes-template-kicksecure/tree/arraybolt3/user-sysmaint-split

== user-sysmaint-split - investigate polkitd and policykit libraries ==
* https://forums.kicksecure.com/t/investigate-security-suid-impact-of-polkitd-and-policykit-libraries/1075
* Investigated, wrote results on Kicksecure forums.

== Argon2 pbkdf setup and hardening in Kicksecure ==
* https://forums.kicksecure.com/t/argon2-pbkdf-setup-and-hardening-in-kicksecure/1079/1
* please reply
* consider if needed for calamares default
* consider for [[Full Disk Encryption]] documentation
* Aaron: Replied. I don't think we should document this (rationale given in reply), and I don't think we need to change the Calamares default.

== helper-scripts stcatn CI failing ==
* {{Github_link|repo=helper-scripts|path=/issues/21#issuecomment-2950809045}}
* Root cause of issue determined and fixed: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/fix-stcatn
* Need to discuss with Ben the details of the space issue he noted, he may have found a different issue than the one fixed above?
** Discussed over Matrix, other issue does not appear to be a concern.

== live-hardener and livecheck - document ==
* on [[grub-live]]
* de-mystify
* similar to existing documentation for bash genmon based livecheck
* Documented, changes were somewhat invasive and should be reviewed carefully in case I removed content that should have stayed.

== live-hardener improvements - AI based comments ==
* AI based review - please disregard without comment if nonsensical
* array and unquoted variables

<pre>
for kernel_param in ${kernel_cmdline[@]}
</pre>

<pre>
read -ra kernel_params <<< "${kernel_cmdline}"
for kernel_param in "${kernel_params[@]}"; do
  ...
done
</pre>

* Aaron: The code variant with <code>read -ra</code> is AFAICT functionally equivalent, it's still word splitting on spaces. However, <code>kernel_params</code> is a string, not an array, so I will fix that.
** Fixed: https://github.com/ArrayBolt3/grub-live/commit/c4a6b5e742e7c18b05d470541bddb122c6e993d6
* mount cmd?

<pre>
lowerdir, upperdir, workdir must be part of a single -o option with commas.
</pre>

<pre>
mount -t overlay overlay \
  -o "lowerdir=${target_overlay_mount},upperdir=${tmpfs_upper_dir},workdir=${tmpfs_work_dir}" \
  "${target_overlay_mount}"
</pre>

* Aaron: The AI is incorrect. Using separate <code>-o</code> arguments works in practice.

* use <code>mountpoint</code>?
** Aaron: I don't really see the point of doing so, the directories being treated as mountpoints are read from <code>/proc/self/mounts</code> which should only contain valid mountpoints. That's the file's job.

== calamares - re-enable btrfs support ==
* todo
* Done: https://github.com/ArrayBolt3/live-config-dist/tree/arraybolt3/btrfs
** Patrick: Merged.

== live mode systray in python ==
* keep re-using most of live-check.sh, if sane (keep tested logic and implementation, change variables, output format, refactor, etc.)
* cli + gui separate?
* Implemented:
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/livecheck
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/tree/arraybolt3/livecheck
** desktop-config-dist: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/livecheck
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/livecheck
** live-config-dist: https://github.com/ArrayBolt3/live-config-dist/tree/arraybolt3/live-mode
* Patrick: All merged.

== user-sysmaint-split - document how to whitelist systemd units in sysmaint mode ==
* [[sysmaint]]
* Documented.

== user-sysmaint-split - migrate dangerous service dependencies to drop-ins ==
* <code>Wants=</code> could be dangerous if dealing with security-sensitive or mutually exclusive services.
* Migrate these dangerous services to use drop-in configuration dirs with `WantedBy=` dependencies, so that they obey <code>systemctl enable</code> and <code>systemctl disable</code> directives.
** This may require some extra code to check if these services are enabled or not already, and re-enable them if they are enabled, so that the needed symlinks for sysmaint sessions are created.
* Implemented: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/firewall
* Patrick: Merged.

== user-sysmaint-split - minor improvements ==

* consider <code>test -s</code>

<pre>
-z "$(cat
</pre>

* Implemented and lightly tested: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/test-s
* Patrick: Merged.

== docker cleanup ==
* as discussed
* Done: https://github.com/ArrayBolt3/derivative-maker/commit/578bbe9d58402f4aba0d22642af71781a07e63cf
* Patrick: Merged.

== ISO - btrfs versus grub-live bug - real fix ==
* todo
* report bug upstream
* systemd bug report: https://github.com/systemd/systemd/issues/35540
* fix in dracut
** Cannot be fixed in dracut, dracut doesn't handle mounting /home. Instead opting to fix in grub-live.
** Might use kernel parameters using systemd features that may be available in trixie?
* since no response from systemd, needs to be fixed without systemd upstream support
* in case a reliable, solid implementation is not easy or not possible, this should either not be implemented or needs runtime sanity tests
* Current implementation plan:
** Create script (or augment existing script) that will look at all mounted filesystems, detect unsafe read/write mounts and report the system as either being fully persistent, semi-persistent, or fully live.
** Make livecheck recheck the system regularly (perhaps with an event-based mechanism if possible) and update messaging and the icon as necessary to indicate the system's state. Popups should be sent with notify-send to alert the user when something happens that affects the system's live state.
*** If no writable drives are mounted, show a green light. If writable, ''removable'' drives are mounted under /mnt or /media, show a yellow light. If non-removable drives of any kind are mounted, or if removable drives are mounted anywhere other than /mnt or /media, show a red light. NFS is considered a removable drive.
*** We should reimplement livecheck in Python + PyQt5. Use a system tray icon to indicate the live state, use a poll on /proc/self/mounts to detect when mounts change and rescan for possible danger.
** Create a systemd unit that will scan /etc/fstab on boot and mount overlayfs filesystems over the top of most persistent filesystems listed in /etc/fstab, with the exception of mounts under /media and /mnt and filesystems that should always be persistent (NFS specifically). This should run early during boot and block boot, and should not run unless the system is booted in live mode.
** Research how Tails live mode works in this regard and take inspiration from them if possible.
*** Won't boot unless it is booting from a USB medium with the removable media bit enabled
**** Idea - disks mounted that have the removable media bit set are probably OK to mark as yellow, use red when there are mounted "non-removable" disks which are more likely to be internal or external (semi-)permanent hard drives
*** Cannot mount non-removable drives without setting an administrator password on the initial setup screen and then providing that password when prompted
*** Removable media is automounted even without clicking on it in the file manager (?!)
* related to [[Grub-live#Comparison_between_grub-live_and_Tails|Comparison between grub-live and Tails]]
* research, compare with Tails
** Avoid writing to arbitrary (non-boot) host disks
** Disables removable drives auto-mounting
** Disabled virtual machine shared folders
* Implemented:
** grub-live: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live
** Everything else, see livecheck task
** Tested thoroughly, works in all known edge cases
* Patrick: Merged.

== debug USB installation boot failure ==
* https://forums.kicksecure.com/t/installing-kicksecure-to-usb-stick/1074/7
* Debugged, fix implemented.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/boot-menu
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/grub-menu
** grub-live: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live
** kicksecure-base-files: https://github.com/ArrayBolt3/kicksecure-base-files/tree/arraybolt3/grub-menu
** anon-ws-base-files: https://github.com/ArrayBolt3/anon-ws-base-files/tree/arraybolt3/grub-menu
** anon-gw-base-files: https://github.com/ArrayBolt3/anon-gw-base-files/tree/arraybolt3/grub-menu
* Patrick: All merged.

== Secure Mount Options for better Security Hardening ==
* review discussions, wiki
* comment
* improve the solutions research
* https://www.kicksecure.com/wiki/Dev/remount-secure
* https://www.kicksecure.com/wiki/Noexec
* https://forums.whonix.org/t/re-mount-home-and-other-with-noexec-and-nosuid-among-other-useful-mount-options-for-better-security/7707
* vm-config-dist chmod 777 on /mnt/shared conflicts with noexec
** Left notes on future implementation ideas, discussed with Patrick.
** Documented in wiki.

== Qubes R4.3 - Tor Browser Template Build Installation Issue ==
* https://forums.whonix.org/t/tor-browser-not-installed-by-default-in-qubes-template-whonix-workstation-17-4-3-0-202505132012-r4-3/21612
* Looks to be dealt with already, move to Archived if this problem doesn't occur again in another couple of weeks

== sysmaint-panel - allow running in dev mode ==
* when [[Sysmaint#enable_sudo_access_in_USER_session|enable sudo access in USER session]] has been enabled, allow running sysmaint
* i.e. check if privilege escalation tool is actually unavailable. Only if actually unavailable and sysmaint mode required, show the error popup.
* use and/or improve already existing use_leaprun.sh helper-script library?
* probably non-issue as discussed
* can be archived

== privleap - redesign command line tool names name and add group ==
* for better multi-user support
** https://forums.kicksecure.com/t/multi-user-privleap-issue-systemcheck-updatecheck/1046
*** migrated to separate ticket
* The currently used Linux user group <code>leaprun-users</code> is kinda confusing (comparable to group "<code>sudo</code>")
* or should we call this group <code>leaprun</code> for simplicity?
* even even simpler, call the group <code>privleap</code>?
* while at it, the different tool names might be confusing. <code>privleap</code> vs <code>leaprun</code>.
* todo rename:
** <code>privleapd</code> -> <code>privleap-daemon</code>
** <code>leaprun</code> -> <code>privleap</code>
** Linux group name: <code>privleap</code>
* Discussed with Patrick, archived without completion as:
** privleap is the protocol, i.e. the set of sockets used by privleapd and leaprun, and the language they speak to each other.
** privleapd is the reference implementation of a server process that speaks the privleap protocol and runs actions upon request.
** leaprun is the reference implementation of a client process that speaks the privleap protocol and requests privleapd to do things.
** Renaming leaprun to privleap would potentially result in more confusing documentation.
** Lots of Linux server applications use a <code>d</code> to indicate "daemon/background process/server".

== stcat - stdin bugfix review ==
* please review: {{Github_link|repo=helper-scripts|path=/pull/27}}
* Ready to merge.

== review docker pull request ==
* https://github.com/derivative-maker/derivative-maker/pull/19
* forum discussion: https://forums.whonix.org/t/docker-container-that-builds-whonix-images/17494/64
* please share review in forums
* Should we start using dockerhub? https://forums.whonix.org/t/docker-container-that-builds-whonix-images/17494/59
* Found a build failure in the main derivative-maker repo and resolved it while testing this: https://github.com/ArrayBolt3/derivative-maker/commit/950cf9f15e077a1074c0a30e2cdd04d098d2092d
* can be archived

== user-sysmaint-split - whitelist firewall related systemd units ==
* such as ufw and other systemd units
* Implemented in dangerous service drop-in migration task.

== sgdisk create-raw-image - add source code comments ==
* derivative-maker build-steps.d/3200_create-raw-image - please explain sgdisk related code using source code comment
** Done: https://github.com/ArrayBolt3/derivative-maker/commit/b881e4475ae6056506f736371dd44ca304ea8556
*** Patrick: Merged.

== permission hardener - review ==
* {{Github_link|repo=security-misc|path=/pull/307}}
** Mostly good, suggested a change to avoid opening a possible security hole.
** This is now good and ready to merge.
*** Patrick: Merged.
* {{Github_link|repo=security-misc|path=/pull/308}}
** Looks good to me, ready to merge IMO.
*** Patrick: Merged.

== systemd-repart bug - Can't fit requested partitions into available free space ==

<pre>
sudo systemctl status systemd-repart
× systemd-repart.service - Repartition Root Disk
     Loaded: loaded (/lib/systemd/system/systemd-repart.service; static)
    Drop-In: /usr/lib/systemd/system/systemd-repart.service.d
             └─30_grub-live.conf
     Active: failed (Result: exit-code) since Fri 2025-05-23 15:42:31 UTC; 5min ago
       Docs: man:systemd-repart.service(8)
    Process: 577 ExecStart=/bin/systemd-repart --dry-run=no (code=exited, status=1/FAILURE)
   Main PID: 577 (code=exited, status=1/FAILURE)
        CPU: 13ms

May 23 15:42:31 host systemd[1]: Starting systemd-repart.service - Repartition Root Disk...
May 23 15:42:31 host systemd-repart[577]: Can't fit requested partitions into available free space (1004.0K), refusing.
May 23 15:42:31 host systemd-repart[577]: Automatically determined minimal disk image size as 100.0G, current image size is 100.0G.
May 23 15:42:31 host systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
May 23 15:42:31 host systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
May 23 15:42:31 host systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk.
zsh: exit 3     sudo systemctl status systemd-repart
</pre>

<pre>
sudo journalctl --boot -u systemd-repart
May 23 15:42:29 localhost systemd[1]: Starting systemd-repart.service - Repartition Root Disk...
May 23 15:42:29 localhost systemd-repart[445]: Can't fit requested partitions into available free space (1004.0K), refusing.
May 23 15:42:29 localhost systemd-repart[445]: Automatically determined minimal disk image size as 100.0G, current image size is 100.0G.
May 23 15:42:29 localhost systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
May 23 15:42:29 localhost systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
May 23 15:42:29 localhost systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk.
May 23 15:42:30 host systemd-repart[490]: Can't fit requested partitions into available free space (1004.0K), refusing.
May 23 15:42:30 host systemd-repart[490]: Automatically determined minimal disk image size as 100.0G, current image size is 100.0G.
May 23 15:42:30 host systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
May 23 15:42:30 host systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
May 23 15:42:30 host systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk.
May 23 15:42:31 host systemd[1]: Starting systemd-repart.service - Repartition Root Disk...
May 23 15:42:31 host systemd-repart[564]: Can't fit requested partitions into available free space (1004.0K), refusing.
May 23 15:42:31 host systemd-repart[564]: Automatically determined minimal disk image size as 100.0G, current image size is 100.0G.
May 23 15:42:31 host systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
May 23 15:42:31 host systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
May 23 15:42:31 host systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk.
May 23 15:42:31 host systemd[1]: Starting systemd-repart.service - Repartition Root Disk...
May 23 15:42:31 host systemd-repart[577]: Can't fit requested partitions into available free space (1004.0K), refusing.
May 23 15:42:31 host systemd-repart[577]: Automatically determined minimal disk image size as 100.0G, current image size is 100.0G.
May 23 15:42:31 host systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
May 23 15:42:31 host systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
May 23 15:42:31 host systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk
</pre>

* Aaron: Root cause of issue found, reported to Patrick. Some code needs uncommented after I incorrectly advised him it could be removed.

== Qubes R4.3 - tb-updater - sysmaint versus user - permission issue ==
* https://github.com/Whonix/updates-status/issues/240#issuecomment-2901188521
* Very likely not a problem. Commented.

== grml-debootstrap - upstream sgdisk typecode changes ==
* please upstream to grml-debootstrap, if sensible

<pre>
   ## Change the partition type of the root partition so systemd identifies it
   ## as a root partition.
   ##
   ## The type code used for the root partition differs depending on machine
   ## architecture. See
   ## https://www.toomanyatoms.com/computer/gpt_partition_type_guids.html for
   ## info on what code to use for which architecture.
   ##
   ## grml-debootstrap's generated partition layout will also depend on the
   ## architecture, so we may have to change a different partition depending
   ## on the CPU type we're building for.

   type_code=""
   case "$dist_build_target_arch" in
      amd64)
         $SUDO_TO_ROOT sgdisk --typecode='3:4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709' "$binary_image_raw_file"
         ;;
      arm64)
         $SUDO_TO_ROOT sgdisk --typecode='2:B921B045-1DF0-41C3-AF44-4C6F280D3FAE' "$binary_image_raw_file"
         ;;
   esac
</pre>

* Encountered issues trying to implement this, asked for input at https://github.com/grml/grml-debootstrap/issues/336
** If a response is not received in a couple days (April 17), just try implementing this with parted in chroot-script and submit a PR
** Got feedback, implemented: https://github.com/grml/grml-debootstrap/pull/337
** Merged.

== grml-debootstrap - grub issue ==
* https://github.com/grml/grml-debootstrap/issues/339
** Fix for remaining issue: https://github.com/grml/grml-debootstrap/pull/341
** Appears fixed, asked devs for final confirmation that the bug really is fixed. Moving to archived, will unarchive if it turns out this isn't fully resolved.

== helper-scripts - stecho - review ==
* please review: {{Github_link|repo=helper-scripts|path=/pull/25}}
* Review submitted.
* Merged.

== ISO - calamares bootloader issue ==
* https://forums.kicksecure.com/t/kicksecure-17-3-9-9-error-installing-on-a-usb-drive/1047
* considered resolved thanks to your reply. can be moved to archived.

== grub-live - systemd-repart error message inside VM during boot ==
* fix attempt {{Github_link|repo=grub-live|path=/blob/master/usr/lib/systemd/system/systemd-repart.service.d/30_grub-live.conf}}
* dracut issue. dracut does not pick up systemd-repart.service.d/30_grub-live.conf
* please report a bug against dracut, if applicable
* https://github.com/openzfs/zfs/issues/14075
* https://github.com/dracut-ng/dracut-ng/blob/main/modules.d/01systemd-repart/module-setup.sh
* maybe fixed by Patrick in grub-live package
* [https://github.com/dracut-ng/dracut-ng/issues/1328 some dracut modules fail to copy systemd system drop-in configuration snippets]

== bash livecheck.sh systray broken ==
* unit test is broken
* shows read-only mode in live mode while not read-only
* sometimes even shows read-only while booting into persistent mode
* maybe fixing not required depending on bug cause (backend or frontend) and depending on below
* some changes by Patrick, maybe fixed

== user-sysmaint-split - review sysmaint-boot.target ==
* /usr/lib/systemd/system/sysmaint-boot.target
* Reviewed, updated: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/sysmaint-boot-wants
** Patrick: Merged.

== user-sysmaint-split - user login without autologin broken ==
* Default login session for non-sysmaint accounts ends up being the sysmaint login session
* Fix: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/login-fix
** Patrick: Merged.

== live mode detection improvements ==
* {{Github_link|repo=helper-scripts|path=/blob/master/usr/libexec/helper-scripts/live-mode.sh}}
* Currently only based on grepping kernel command line.
* However, a different or the wrong initramfs generator might be in use. Or some other unexpected use case.
* Ideas on how to make live mode detection more reliable?
* Aaron: It might be possible to rely on the mount info for the root filesystem, which can be seen by running <code>LC_ALL='C' mount | grep ' on / '</code>. This returns a distinctly different string for each of persistent mode, live mode, and ISO live mode.
** PERSISTENT mode: /dev/mapper/luks-65abae64-dea9-4e54-b75f-0f545ed4a053 on / type ext4 (rw,relatime)
** LIVE mode (dracut): overlay on / type overlay (rw,noatime,lowerdir=/live/image,upperdir=/cow/rw,workdir=/cow/work,default_permissions)
** LIVE mode (initramfs-tools): overlay on / type overlay (rw,noatime,lowerdir=/run/live/rootfs/filesystem/,upperdir=/run/live/overlay/rw,workdir=/run/live/overlay/work,redirect_dir=on)
** ISO live mode: LiveOS_rootfs on / type overlay (rw,relatime,lowerdir=/run/rootfsbase,upperdir=/run/overlayfs,workdir=/run/ovlwork)
* Based on the above, we could say "if the string starts with <code>overlay on / type overlay</code>, then we're in GRUB live mode. If it starts with <code>LiveOS_rootfs</code>, we're in ISO live mode. Otherwise, we're in persistent mode.
* Notes:
** <code>LiveOS_rootfs</code> appears to be hardcoded throughout dracut, thus I believe this is a string we can rely on to be accurate.
** For Dracut, <code>overlay</code> for GRUB live mode is hardcoded in the Debian-specific <code>90overlay-root</code> module and thus can likely be relied upon, see <code>/usr/lib/dracut/modules.d/90overlay-root/overlay-mount.sh</code>.
** For initramfs-tools, <code>overlay</code> for GRUB live mode is ''sorta'' hardcoded in live-boot, but not exactly, aufs is also supported and that might change the mount line. This may or may not be completely reliable.
* Patrick:
** Should we combine the existing kernel command line parameters based test with the new mount based test?
*** Aaron: IMO, no, the logic will become too complicated. Notably, if the mount info and kernel parameters say different things, we'll risk either telling the user that their changes will persist when they won't, or telling the user that their changes won't persist when they will. The mount info is likely to be more reliable and there's no need to check the kernel parameters too.
** Any way for to catch also the BTRFS home folder unexpected persistence bug (live mode indicator said "live" but /home folder was actually persistent bug)? Related: [[Dev/todo#ISO_-_btrfs_versus_grub-live_bug_-_real_fix|ISO - btrfs versus grub-live bug - real fix]]
*** Aaron: That is possible.
* Implemented both enhanced live mode detection and the ability to detect semi-persistence:
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/live-mode
*** Patrick: Merged.
** desktop-config-dist: https://github.com/ArrayBolt3/desktop-config-dist/tree/arraybolt3/live-mode
*** Patrick: Merged.
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/live-mode
*** Patrick: Merged.
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/commit/5ccc4218a0dd89c3a04ad4305fc6f7e088c24036
*** Patrick: Merged.

== umask bug - copy from user to sudo missing permission - others ==
* how to reproduce:

{{CodeSelect|code=
touch a
sudo cp a /etc/a
ls -la /etc/a
}}

* expected result: readable by "others" ("public")
* actual result: unreadable by "others"
* this is probably happening because file "a" is created unreadable by "others". When copying, permissions are preserved.
* problematic in context of use cases such as:

{{CodeSelect|code=
sudo overwrite /etc/apt/sources.list.d/cwtch.im.list 'deb [arch=amd64 signed-by=/usr/share/keyrings/deb.cwtch.im-keyring.gpg] https://deb.cwtch.im/cwtch.im/ stable main'
}}

* Aaron:
** This is two separate issues. The issue as described with <code>cp</code> is not a bug and isn't fixable - <code>cp</code>'s behavior is to simply clone the file mode (permissions) of files it copies. This can be overridden using the <code>--no-preserve=mode</code> option.
** However, <code>overwrite</code> and other programs that use <code>append-shared</code> are indeed causing permission issues, they appear to be forcing the permissions of any file they touch to 0600. This is because we're creating a temporary file with the contents we want, then moving it into the location where the old file was. The permissions on the temporary file are 0600, so the final file ends up with the same (faulty) permissions.
*** Fix: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/append-perms
**** Patrick: Merged.
* Patrick: created [[umask]]

== installation failure with en-gb locale ==
* https://forums.kicksecure.com/t/error-during-installation/1033
** Fix: https://github.com/ArrayBolt3/live-config-dist/tree/arraybolt3/locale
*** Patrick: Merged.

== sysmaint systray ==
* implement and already existing systray in sysmaint mode (ideally X11 + Wayland compatible)
* add NM systray by default
* Implemented:
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/systray
*** Patrick: Merged
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel
*** Patrick: Merged
** NOTE: <code>trayer</code> must be added to a Kicksecure metapackage for this to work. Which metapackage is the best is unclear, <code>non-qubes-enhancements-gui</code> may be a good choice.
*** Patrick: Added to <code>non-qubes-enhancements-gui</code>

== sysmaint-panel - wifi setup ==
* todo
* Implemented: https://github.com/ArrayBolt3/sysmaint-panel/commit/82c9aa8ffb65f49215645abe9968cec02daebba8
** The network configuration button just calls <code>nmtui</code>, which reduces the maintenance burden on us and provides a hopefully much better-tested suite of features than we could provide ourselves.
* Patrick: Merged.

== verfied boot - specification pull request review ==
* https://github.com/3mdeb/verified-boot/pull/30
* Added review notes.

== Kicksecure homepage - search engines comment ==
* https://forums.kicksecure.com/t/add-searxng-and-startpage-buttons-to-kicksecure-welcome-page/992
* please have a look and opinion:
** https://searchengine.party/
** https://searx.space/
* Researched, left a comment.

== sysmaint-panel feature requests ==
* https://forums.kicksecure.com/t/testing-kicksecure-17-3-9-2/1027
** Implement log view and search features
*** Done: https://github.com/ArrayBolt3/sysmaint-panel/commit/0bac2a51162cf0c8301d7667829f7fbd896febb4
**** Patrick: Merged.
** Fix systemcheck to give proper update guidance when booted into a user session
*** Done: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/fix-apt-update-msg
**** Patrick: Merged.
** (Possibly?) Allow the user to customize the desktop background
*** Argued against arbitrary images as a background in the sysmaint session, suggested gradient customization instead: https://forums.kicksecure.com/t/testing-kicksecure-17-3-9-2/1027/6
*** Patrick noted this is not important to develop.

== sysmaint-panel - distinct wallpapers for Whonix-Gateway and Whonix-Workstation ==
* sysmaint-panel shows a Kicksecure-like background image regardless of the underlying OS at the moment
* Whonix-Gateway and Whonix-Workstation VMs in sysmaint mode look confusing for this reason
* change the background to match the default Whonix-Gateway and Whonix-Workstation backgrounds on those respective systems
* Done: https://github.com/ArrayBolt3/sysmaint-panel/commit/04db8e25c4ecfb6d93ce013e805fc86eec445c3f
** Patrick: Merged.
* Also discovered systemcheck was broken under Whonix on VirtualBox due to onion-grater not running. Fixed: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/whonix-systemcheck
** Patrick: Merged.

== security review and improve curl-prgrs ==
* /usr/libexec/helper-scripts/curl-prgrs
* Reviewed, made some improvements: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/curl-prgrs
** Patrick: Merged.

== kvm mouse integration broken in sysmaint session ==
* https://forums.whonix.org/t/mouse-problem-in-new-test-version-in-kvm/21544
* Fix: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/mouse-integration
** Patrick: Merged.

== Zarhus Developer Meetup 0x1 ==
* Includes presentation of Kicksecure ram-wipe test results

== ISO - boot menu text consistency ==
* if effort for the following is sensible...
* remove "GNU/Linux"
* remove "AMD64"
* make text in GRUB boot menu more similar to default Kicksecure with user-sysmaint-split
* make text in live-config-dist more consistent with user-sysmaint-split wording
* Fixed some other boot menu inconsistencies:
** kicksecure-base-files: https://github.com/ArrayBolt3/kicksecure-base-files/tree/arraybolt3/grub-menu
*** Patrick: Merged.
** anon-gw-base-files: https://github.com/ArrayBolt3/anon-gw-base-files/tree/arraybolt3/grub-menu
*** Patrick: Merged.
** anon-ws-base-files: https://github.com/ArrayBolt3/anon-ws-base-files/tree/arraybolt3/grub-menu
*** Patrick: Merged.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/sysmaint-config
*** Patrick: Merged.
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/grub-menu
*** Patrick: Merged.
* Fixed ISO boot menu inconsistencies:
** live-build: https://salsa.debian.org/ArrayBolt3/live-build/-/tree/arraybolt3/lb-dracut?ref_type=heads
*** Patrick: Merged.
** derivative-maker (master branch, as usual)
*** Patrick: Merged.
** live-config-dist: https://github.com/ArrayBolt3/live-config-dist/tree/arraybolt3/wording
*** Patrick: Merged.

== GRUB - choose boot mode text too small ==
* non-Secure Boot version:
** boot menu entries looks OK, looks like text size 12 or 14
** "Choose boot mode" looks like text size 9 -> please check if reproducible and increase text size a bit, if sensible
** Fixed in boot menu text consistency task changes, I forgot to push an important commit.
* commit is part of "GRUB - choose boot mode text too small"

== libpam-tmpdir - PAM_tmpdir - /tmp/user/1000 owned by uid 0 instead of uid 1000 ==
* https://forums.whonix.org/t/systemcheck-fails-for-unclear-reason/21424/29
* please investigate unsafe ways to use TMP and similar env vars
* refactor TMP/security-misc-apt-get-update-pid
* Discussed with Patrick, we don't believe security-misc-apt-get-update-pid is the likely cause anymore. Can't identify a potential other cause yet.
* Aaron could not reproduce on Qubes R4.3. Reported to Marek.
* No response received, assuming not (or no longer) an issue.

== kloak upstream discussion ==
* https://github.com/vmonaco/kloak/issues/80
* Left a comment. Also did some research to find the correct Wayland protocols for passing emulated input to the compositor, those protocols being https://wayland.app/protocols/wlr-virtual-pointer-unstable-v1 and https://wayland.app/protocols/virtual-keyboard-unstable-v1
* Official repo switched over, feedback from vmonaco received and will be used in further development.

== grub - secure boot signed fonts ==
* discuss upstream, file feature request
* feature requests are unlikely to get implemented
* ITP might be possible in theory but too low priority
* closing

== verified boot chat ==
* done

== user-sysmaint-split - sysmaint-boot-cleanup.service error message during ISO shutdown ==
* reproduced where: Qubes HVM + ISO + unrestricted admin mode
* a systemd error message is shown during shutdown
* Fixed, needed to disable sysmaint-related systemd units when user-sysmaint-split is uninstalled: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/sysmaint-config
** Patrick: Merged.

== user-sysmaint-split - Qubes - Selective sudo Access ==
* implement [https://github.com/QubesOS/qubes-issues/issues/9512 Selective `sudo` Access Enabling in VMs Without `qubes-core-agent-passwordless-root` via `qvm-service`]
* Likely going to end up implementing [https://github.com/QubesOS/qubes-issues/issues/2695 Automate vm sudo authorization setup]
** Need Qubes OS R4.3 for this, not able to install it on primary dev rig yet, awaiting arrival of an (already ordered) external drive enclosure.
*** Patrick: R4.2 should be sufficient?
**** Aaron: New major features cannot be introduced into R4.2. Needs to be developed for R4.3.
** Relveant Qubes OS tickets:
*** https://github.com/QubesOS/qubes-issues/issues/5840
*** https://github.com/QubesOS/qubes-issues/issues/5852
*** https://github.com/QubesOS/qubes-issues/issues/5853
*** https://github.com/QubesOS/qubes-issues/issues/2695
*** https://github.com/QubesOS/qubes-issues/issues/9512
* Waiting for feedback from HW42.
* Is a lightweight solution possible? If an App Qube is booting and /run/qubes/sudo exists, chmod o+x /usr/bin/sudo or better dummy-dependency --yes --purge user-sysmaint-split?
** Researched, implemented: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/sysmaint-config
*** Patrick: Merged.
** Note, this will also be visible in TemplateVMs which could be confusing and could lead users to uninstall user-sysmaint-split in templates on accident. Feature request for fixing this: https://github.com/QubesOS/qubes-issues/issues/9920

== research wlroots layer-shell security ==
* as discussed
* Possible issues already known: https://github.com/labwc/labwc/discussions/1002#discussioncomment-6543362 "layershell (can grab keyboard focus)"
* [https://github.com/labwc/labwc/discussions/2698 Allow restricting layer-shell and emulated input protocol access to whitelisted applications]
* please document on https://www.kicksecure.com/wiki/Dev/Strong_Linux_User_Account_Isolation
* Documented. There are publicly known security shortcomings with the current approach.

== publish debian live-build security comment ==
* past private report, time to publish, if sensible
* Already published some time ago: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=718225#115

== wiki editing - First-Time Source Code Contributor Policy ==
* [[First_Time_Source_Code_Contributor_Policy|First-Time Source Code Contributor Policy]]
* please review, improve, if applicable
* Reviewed, clarification suggested in chat, Patrick implemented it.

== grub skin - change text ==
* Please change from <code>Choose an operating system to start</code> to <code>Choose boot mode</code>.
** Done:
*** anon-gw-base-files: https://github.com/ArrayBolt3/anon-gw-base-files/tree/arrabolt3/grub-theme
*** anon-ws-base-files: https://github.com/ArrayBolt3/anon-ws-base-files/tree/arrabolt3/grub-theme
*** kicksecure-base-files: https://github.com/ArrayBolt3/kicksecure-base-files/tree/arrabolt3/grub-theme
* Ideally, that text would no longer be hardcoded but if it's a high effort or impossible, can hardcoded.
** Done without hardcoding.

== sysmaint-panel - add repository-dist-wizard ==
* todo
* Implemented: https://github.com/ArrayBolt3/sysmaint-panel/commit/b376aea4a312fcbb83f2dd1801c8081b1575cb6b
* Also discovered a bug where the apt configuration written by repository-dist-wizard was not world-readable. This was because our PAM config was not setting the umask to 022 for root when commands were run via pkexec. Fixed: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/fix-pkexec-umask

== tor-ctrl - security review ==
* please review
* based on git master
* Review complete, shared results in chat.
* please review again after changes made
* Re-reviewed, had an additional hardening improvement to make: https://github.com/ArrayBolt3/tor-ctrl/commit/39833c0172da2d67fc7a352d3845f96a14138577

== repart - systemd-growfs error ==
* /lib/systemd/systemd-growfs exists on the root filesystem but is missing inside the initramfs (found out using <code>lsinitrd</code>)
** perhaps a dracut bug?
* if difficult to fix / if fixed in Debian trixie, perhaps let's disable repart until Debian trixie?
* Fixed: https://github.com/ArrayBolt3/derivative-maker/commit/c519b88fa2667ab2a2bd393c03d7be77939cddc7

== git symlink research ==
* please research security impact of "the most interesting git symlink ever"
* please review, improve [[git]] as that wiki page might be used in case we send feature requests to projects to stop using git symlinks
* Researched, tweaked documentation slightly, this doesn't seem to be a major issue.

== ram-wipe improvements ==
* useful to implement? https://forums.kicksecure.com/t/unplugging-external-drive-doesnt-trigger-a-shutdown/994/7
* please review https://www.kicksecure.com/wiki/Dev/RAM_Wipe
* this is currently missing in testing by 3mdeb:
<pre>
page_poison
passing "P" to slub_debug
zeroing heap memory at free time (init_on_free=1)
</pre>
* maybe still time to add this before 3mdeb does ram-wipe testing?
* Aaron: Discussed in chat, we'd like 3mdeb to test the "plain" version without special kernel parameters set.
* Aaron: We should NOT pass "P" to slub_debug, see https://gitlab.tails.boum.org/tails/tails/-/issues/18858

== live-build - use /etc/dracut.conf.d method to speed up the build ==
* similar to how it is implemented in 3500_install-packages
* Done, also fixed a problem with the Dracut initramfs inhibition code not being removed for VM builds.
** live-build: https://salsa.debian.org/ArrayBolt3/live-build/-/tree/arraybolt3/lb-dracut?ref_type=heads
*** Patrick: Merged.
** derivative-maker: https://github.com/ArrayBolt3/derivative-maker/commit/6b87d731322d063fe21cc36da2409d4aed9d3254
*** Patrick: Merged.

== fix - leaprun sdwdate-log-viewer ==
* currently shows no output
* Probably due to somewhat broken stdout/stderr streaming from privleap. Fixed buffering issues and added the ability to terminate running actions from leaprun, then enabled <code>--no-pager</code> and <code>-f</code> options in sdwdate-log-viewer:
** sdwdate: https://github.com/ArrayBolt3/sdwdate/tree/arraybolt3/log-viewer
*** Patrick: Merged.
** privleap: https://github.com/ArrayBolt3/privleap
*** Patrick: Merged.

== user-sysmaint-split - enable in VM images ==
* currently user-sysmaint-split is only enabled on ISOs, enable it for VBox/KVM/etc. images as well
* already done
** please grep for user-sysmaint-split
* Patrick working on this.
* Done.
* Aaron: Code looks good, did a VM build and verified that this works.

== fix ram-wipe on plain Debian trixie ==
* {{Github_link|repo=ram-wipe|path=/issues/2}}
* report to Debian
* update [[ram-wipe]]
* Debugged, reported fixes and filed a Debiian bug, Patrick is implementing fixes.
* Debian bug for fixing dracut: [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1103457 Unable to boot LUKS-encrypted system]

== systemd-repart Qubes error ==
<pre>
sudo journalctl --boot -u systemd-repart
Apr 15 22:33:30 host systemd-repart[256]: Can't fit requested partitions into available free space (1004.0K), refusing.
Apr 15 22:33:30 host systemd-repart[256]: Automatically determined minimal disk image size as 20.0G, current image size is 20.0G.
Apr 15 22:33:30 host systemd[1]: systemd-repart.service: Main process exited, code=exited, status=1/FAILURE
Apr 15 22:33:30 host systemd[1]: systemd-repart.service: Failed with result 'exit-code'.
Apr 15 22:33:30 host systemd[1]: Failed to start systemd-repart.service - Repartition Root Disk.
</pre>

* Possible to avoid disabling systemd-repart entirely inside Qubes? Because Qubes or users might start using it in theory.
* implement repart enabling similar to /usr/libexec/initializer-dist/chroot-scripts-post.d/75_setup-wizard-dist
* do not enable in Qubes
* Should be solved:
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/repart
*** Note: I do not yet know for sure if the marker-vm file this implementation depends on will be present when dist-base-files is installed into the template. Asked in the Qubes OS Matrix room.
**** Patrick: Should not matter since my revision. Now a chroot-script handles this which runs after package installation. This is easy to see in the Kicksecure Qubes Template code. First packages are installed and only after the chroot-scripts are executed.
** initializer-dist: https://github.com/ArrayBolt3/initializer-dist/tree/arraybolt3/repart
*** Patrick: Merged.
** derivative-maker: https://github.com/ArrayBolt3/derivative-maker/commit/cb961e90bb863665f5fe745c8da3547c32a4f64f
*** Patrick: Merged.
** Patrick: Please review my revision.
** Patrick: Please review my revision. #2
*** Aaron: Reviewed, looks good to me.

== user-sysmaint-split - unit fails on first sysmaint login ==
* the sysmaint account specific config routine is failing on the first sysmaint login, because PAM hasn't created the /home/sysmaint directory when this code attempts to run.
* move the code from sysmaint-boot to sysmaint-session and sysmaint-session-wayland
* Fixed, also refactored some duplicated code into a shared library: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/sysmaint-config
** Patrick: Merged.

== helper-scripts - strange symlinks issue ==
* due to a mixup with the append/append-once/overwrite rewrite, we now an append-once symlink that points to a file with the contents of a script as its name (this script was intended to replace the symlink, not become the target file name).
* Replace the symlinks with the intended scripts.
* Fixed: https://github.com/ArrayBolt3/helper-scripts/commit/370bd938dd54f9a53f95913ac174189d6cf57a03
** Patrick: Merged.

== research systemd-repart ==
* please research systemd-repart on how to automatically resize the image at first boot to use the full size of the storage medium
* interesting in context of RPi
* systemd-repart might be interesting in any case, not just for RPi images.
* Users are confused by [[sparse files]]. Our "normal" (non-RPi) images have a size of 100 GB. They can grow up to 100 GB. [[Grow_Virtual_Harddisk|Virtual Hard Disk Size Increase]] is a non-trivial process for users. Could systemd-repart help us to ship smaller apparent size images that can be more easily grown by users after boot?
* Researched, turns out making it so that the root partition is resized any time the disk is resized is not particularly difficult, and the easy way of doing it makes it so that the resize works properly ''any'' time it's resized, not just on the first time.
* Implemented resize support:
** initializer-dist: https://github.com/ArrayBolt3/initializer-dist/tree/arraybolt3/repart
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/repart
** derivative-maker: https://github.com/ArrayBolt3/derivative-maker/commit/e3318ad701cca97d0defec5bf4cd73c78b06ebd7

== review and improve append-once ==
* [[append-once]]
** Aaron: Documentation updated to match the new implementation.
* {{Github_link|repo=helper-scripts|path=/blob/master/usr/bin/append-once}}
* Had some ideas for improving performance and reliability, shared in chat.
* use case: simplify writing to files while developing unrelated scripts (such as user-sysmaint-split)
* please rewrite in python as suggested
* the following tools should probably be separate tools
** these might however have shared code inside a library if that is sensible
* tool requirements:
** atomic writes
** error handling (unwriteable parent folder, unwriteable file)
* required functionality:
** only for already actually used use cases
* list of tools
** append (equivalent of: <code>echo test >> testfile</code>)
** append-once
** overwrite (equivalent of: <code>echo test | sponge testfile</code>)
* unneeded functionality for now:
** not adding a newline at the end (equivalent of: <code>printf "test" > testfile</code>)
** appending the the last line of the file (without starting a newline) (equivalent of: <code>printf test >> a</code>)
* Aaron: Implemented: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/file-utils
** All tools implemented as a multicall executable <code>append</code>, with <code>append-once</code> and <code>overwrite</code> symlinks.
*** Patrick: Merged.

== sysmaint-panel - support change full disk encryption fde password ==
* cases to consider: disk not encrypted
* Implemented:
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/pwchange
*** Patrick: Merged.
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/commit/4cae9d07ec439da362ebd616f8f8367c35fa32da
*** Patrick: Merged.
** Note that the disk passphrase button is always visible, this is because the user might have external encrypted devices they wish to access or change the passphrases of.
** The crypt-pwchange utility DOES NOT offer the ability to add new passphrases, or delete existing ones. Those might be valuable features to add in the future.

== sysmaint-panel - add grub bootloader password support ==
* please review and improve
** /usr/sbin/grub-password-status-check
** /usr/sbin/grub-pwchange
** systemcheck check_grub_security
** [[Protection_Against_Physical_Attacks#How_to_set_a_bootloader_password|How to set a bootloader password]]
** Aaron: Reviewed all of the above, sent comments in chat. Mostly looks good and appears to work on my end.
* add grub bootloader password support to sysmaint-panel
** do this on the host only, not inside VMs?
** Aaron: I don't think we need to restrict it like that - while bootloader passwords aren't theoretically useful in VMs, they might be practically useful against a low-skill adversary, and doing this would complicate development and make testing trickier.
*** Patrick: Agreed.
* Implemented: https://github.com/ArrayBolt3/sysmaint-panel/commit/0271a053bfc3d1457ff11fc8889d1f088b8068c5
** Patrick: Merged.

== pstore disabling - please comment ==
* {{Github_link|repo=security-misc|path=/pull/304}}
* Looks like a good change to me, reviewed and requested a README change.
* Reviewed latest changes, things look good to me and the pstore disabling appears to work in my testing.

== Debian feature request - Debian's shim signed by Debian's key ==
* Debian's shim signed by Debian's key on top of Microsoft's key
* Sent feature request against shim.
* [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1102680 Offer a shim-signed variant signed by Debian's Secure Boot key]

== Dev/boot wiki page - review ==
* Patrick made stylistic changes but commands remain all the same. Please review [[Dev/boot]].
** Aaron: Reviewed, made minor changes. Looked very good for the most part.
* This is in preparation for the next task.
* Is command <code>grub-install --force-extra-removable</code> correct? (Unchanged.) It looks a bit short.
** Aaron: This is the right command. GRUB will automatically figure out where to install the bootloader since we're installing an EFI bootloader. This applies even when the system is not booted with UEFI.
* Note: While testing to make very sure this command was correct, I discovered USB boot isn't working right with U-Boot in this setup. Noted down the issue, this will probably take further research to resolve.
** Was resolved in task below.

== RPi GRUB - research USB Boot Support ==
* todo
* Discovered this is a problem with Bookworm, and Trixie is not affected. Documented the likely cause of the issue.

== RPi GRUB - Post TLDR Instructions on Debian RPi Salsa Feature Request ==
* rationale, potential issues (speculation): people not wanting to visit external websites / Kicksecure wiki / TLDR / not enough time to read lengthy instructions, planning to look later, then forgetting, stunned by complexity, ...
* todo: Please review, improve the TLDR version of [[Dev/boot#Booting_Debian_Trixie_with_GRUB_.2B_u-boot_on_Raspberry_Pi_4|Booting Debian Trixie with GRUB + u-boot on Raspberry Pi 4]]
* can be posted on https://salsa.debian.org/raspi-team/image-specs/-/issues/78, if appropriate
* Aaron: Posted. Did ''not'' add the short version to the Wiki since it felt awfully redundant and I wasn't sure I was supposed to do that.
** Patrick: Redundant instructions not required indeed. Task is complete.

== FYI - CodeSelect versus pipes ==
* note: (you might already know this.) CodeSelect cannot use pipes ("<code>|</code>"). These need to be excaped as <code><nowiki>{{!}}</nowiki></code>.

<pre>
{{CodeSelect|code=
xzcat raspi_4_trixie.img.xz {{!}} sudo dd of=/dev/mmcblk0 bs=4M
}}
</pre>

* This gets rendered as expected as:

{{CodeSelect|code=
xzcat raspi_4_trixie.img.xz {{!}} sudo dd of=/dev/mmcblk0 bs=4M
}}

* Just mentioning this to avoid a copy/paste issue (if copying from wiki source code) in the over next task.
* This task can be moved to archived.
* Aaron: Did not know this, will keep this in mind in future edits.

== stcatv - review ==
* please review {{Github_link|repo=helper-scripts|path=/pull/19}}
* Reviewed, single minor change suggested, otherwise looks (and in my testing works) great.

== user-controlled verified boot UEFI Application review ==
* please review, improve: https://www.kicksecure.com/wiki/Verified_Boot#user-controlled_verified_boot_UEFI_Application
* Reviewed, added some changes, Patrick added some more changes and then submitted to 3mdeb.

== user-sysmaint-split - run updatecheck ==
* as discussed
* Done: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/services
** Patrick: Merged.

== user-sysmaint-split - show persistent vs live status ==
* as discussed
* Done: https://github.com/ArrayBolt3/sysmaint-panel/commit/37065e0be2095f2e7dd5f6a461fefb701f0c2254
** Patrick: Merged.

== user-sysmaint-split - bug - prevent account user login in sysmaint mode ==
* as discussed
* Could not identify how the bad login could end up happening in the first place, did identify why the bad login became a lockout situation and fixed it.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/fix-session-exit
*** Patrick: Merged.
* Realized that our terminology with "PERSISTENT mode USER", etc. was out of date in the process. Went through and mass-fixed it:
** security-misc: https://github.com/ArrayBolt3/security-misc/tree/arraybolt3/rename-boot-modes
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/tree/arraybolt3/rename-boot-modes
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/rename-boot-modes
** setup-wizard-dist: https://github.com/ArrayBolt3/setup-wizard-dist/tree/arraybolt3/rename-boot-modes
** tb-starter: https://github.com/ArrayBolt3/tb-starter/tree/arraybolt3/rename-boot-modes
** open-link-confirmation: https://github.com/ArrayBolt3/open-link-confirmation/tree/arraybolt3/rename-boot-modes
** whonix-base-files: https://github.com/ArrayBolt3/whonix-base-files/tree/arraybolt3/rename-boot-modes
* Patrick: All merged.

== unicode - sanitize suspicious characters in informative lines ==
* as discussed, avoid using <code>repr</code>
* might not need done after all, see chat

== grub-live - GRUB configuration not being regenerated when switching initramfs generator ==
* When installing initramfs-tools on Kicksecure, grub-live-dracut is swapped out for grub-live-initramfs-tools. This seems to work for the most part, however the GRUB configuration isn't regenerated, meaning live boot is broken until the next time the user (or some other part of the system) calls <code>update-grub</code>.
* This is because update-grub is only called when the master <code>grub-live</code> package is installed or removed. If one of <code>grub-live-dracut</code> or <code>grub-live-initramfs-tools</code> are installed or uninstalled, but the main <code>grub-live</code> package isn't, the GRUB configuration isn't regenerated. This is exactly what happens when switching initramfs engines usually.
* Fix: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/initramfs-switch-fix

== updatecheck, setup-wizard-dist - don't assume sysmaint components are present ==
* Patrick working on this.
* [DONE] updatecheck assumes sysmaint-panel is preinstalled and instructs the user to use it, even if it's not present
* setup-wizard-dist does things similarly
** Aaron: Fixed: https://github.com/ArrayBolt3/setup-wizard-dist/tree/arraybolt3/no-assume-sysmaint
*** Patrick: Merged.
* adjust both to only show sysmaint-related information if the corresponding components are installed
** Patrick did updatecheck, Aaron did setup-wizard-dist, so this is now solved.

== RPi GRUB - notify debian-arm mailing list ==
* todo
* Done.
* https://lists.debian.org/debian-arm/2025/04/msg00012.html

== user-sysmaint-split - documentation improvements - #2 ==
* document Qubes boot modes on [[Dev/user-sysmaint-split]]
* document difference for user-sysmaint-split installation on Qubes R4.2 versus Qubes R4.3
* Read through the document, fixed some errors and omissions and added the requested docs.

== review - lightweight update notifications - #2 ==
* Implemented by Patrick. Please review.
* [DONE] consider custom languages. Needs <code>LC_ALL=C</code>?
* [DONE] notify leaprun failures
* [DONE] consider if update_package_count is not a number?
* [DONE] grep APT output for errors and notify?
* [DONE] systemcheck function <code>check_dpkg</code> or equivalent useful? If apt/dpkg is broken due to broken packages, that does not really break apt update?
** Not needed. DPKG is irrelevant.
* [DONE] use systemcheck function <code>check_package_manager_running</code> or equivalent?
** [DONE] if running for a "reasonable time", wait
** [DONE] if running "forever", notify that update check is broken
* [DONE] consider systems running for 12 or 18 hours etc:
** [DONE] Do notifications pile up more and more? Avoidable?
** [DONE] Can we clear prior notifications?
** [DONE] Can stale notifications be avoided? Can we clear "update check broken" notification once "updates available" notification came in? Can we clear "updates available" once user updated?
* Other error cases to notify?
* Documentation:
** [DONE] [[systemcheck]]: [[Systemcheck#Update_Notifications_by_updatecheck|Update Notifications by updatecheck]]
** [DONE] [[Dev/Automatic_Updates]]: [[Dev/Automatic_Updates#updatecheck|updatecheck]]
** [DONE] [[Operating System Software and Updates]]
** [DONE] non-Qubes vs Qubes
** [DONE] document disabling
* [DONE] notify https://forums.kicksecure.com/t/notifications-about-new-updates/774
* Aaron: Reviewed, added some documentation updates, found and fixed a likely minor bug with debug output.
** Bugfix: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/updatecheck
*** Patrick: Merged.

== trailing whitespaces - please comment ==
* please research
* please comment in https://forums.whonix.org/t/detecting-malicious-unicode-in-source-code-and-pull-requests/13754 (or elsewhere) how trailing whitespaces can lead to security and/or other issues, if applicable
* Added a comment with an analysis of spaces causing issues in Bash, Python, and Rust. Bash seems to be vulnerable to the most alarming problems here, C interestingly seems resistent to these types of attacks.

== enable X event buffering by default for Whonix ==
* https://github.com/QubesOS/qubes-issues/issues/9771
* PR: https://github.com/QubesOS/qubes-core-admin-addon-whonix/pull/20
** Patrick: please enable kloak-alike in Qubes by default for existing users that upgrade
** or other, better solution acceptable by Qubes
*** Aaron: Fixed, now works for existing VMs as well.
* Merged upstream.

== user-sysmaint-split - sysmaint-panel - add terminal background tinting ==
* tint terminals in sysmaint mode slightly red to encourage users to be careful while in sysmaint mode
* Done, also added framework for making similar tasks easier in the future: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/terminal-tint
** Patrick: Merged.

== user-sysmaint-split - sysmaint-panel - new features ==
* sysmaint-panel could be used to promote nice but lesser known functionality
* apt-get-reset
** should renamed to apt-get-reinstall?
** rationale: re-installation of a package (if other packages depend on it) while restoring configuration files back to package defaults is very difficult for users. Hence, apt-get-reset has been invented.
* dummy-dependency
** use --purge?
** do not yet --yes, obviously
* Both features (and some additional software uninstallation features) implemented in https://github.com/ArrayBolt3/sysmaint-panel/commit/320f4bea7faa288b659fc20a35d3e318bf363980
** Patrick: Merged.

== research depthcharge ==
* moved to [[Dev/boot]]

== Minimal Firmware combined with Linux Based Bootloader - review and improve the wiki draft ==
* https://www.kicksecure.com/wiki/Verified_Boot#Minimal_Firmware_combined_with_Linux_Based_Bootloader
* Read through, fixed a wording issue, added some more ideas and an important requirement

== updatecheck - avoid assuming Internet access ==
* updatecheck assumes Internet access and will return errors without it. We should enter add checks for network connectivity somewhere in here, skipping checks when it is absent and doing them when it is present.
* Fixed in https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/updatecheck-polish

== updatecheck - send_notification_wait_exit fixes ==
* Ensure title is displayed correctly, right now it looks like it will be glued onto the start of the message without formatting
* Avoid saying "Please run systemcheck" when unnecessary
* Fixed in https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/updatecheck-polish

== safe-print follow-up issues ==
* easy to fix, minor issues (such as an imperfection in debian/control): please fix
* bigger (more time consuming) issues: please create github tickets for Ben for stecho issues that have not been addressed yet
* Minor fixes: https://github.com/ArrayBolt3/helper-scripts/commit/345d20955b121f2a2249e53c3319dbf118e0f805
** Patrick: Merged.
* Filed {{Github_link|repo=helper-scripts|path=/issues/18}} as a followup

== unicode - don't strip trailing whitespace ==
* as discussed
* slight issue with the title "don't strip trailing whitespace" actually meant "show trailing whitespaces"
* done: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/unicode-show-enhance
** Patrick: Merged.

== RPi GRUB - Continue Research ==
* non-goal: RPi Secure Boot (due to issues documented in chapter [[Verified_Boot#Raspberry_Pi_RPi_Based]])
* non-goal: hiding of u-boot
* goal: complete RPi GRUB support for the purposes of
** being able to implement RPi GRUB support in grml-debootstrap - maybe - at a later time - depending on grml upstream feedback on RPi support
** being able to implement the functionality in derivative-maker (in case grml upstream rejects RPI GRUB support)
** todo items (updated by Patrick) on [[Dev/boot#Load_GRUB_with_u-boot]]
* document raspi-firmware versus clobbering config.txt (by /etc/kernel/postinst.d or similar) and consider how an implementation later could handle this (probably by using config-package-dev hide, dpkg divert or otherwise)
* Research done, additional notes added to Dev/boot. Likely ready to continue implementation when desirable.

== investigate Raspberry Pi GRUB compatibility ==
* to allow user-sysmaint-split and security enhancing kernel parameters to be used on the RPi
* use u-boot to load GRUB if possible, UEFI features of u-boot may be required for this
* grub-uboot may also be usable, though this works on 32-bit ARM only, but if it can load a 64-bit kernel, that might be OK
* or preferably https://packages.debian.org/bookworm/u-boot-rpi ?
* Got it to work with u-boot-rpi and grub-efi-arm64. Documented procedure and concepts at https://www.kicksecure.com/wiki/Dev/boot#Booting_Debian_Trixie_with_GRUB_.2B_u-boot_on_Raspberry_Pi_4

== unicode ==
* please review the recent commits, improve, applicable:
* please read, comment, if applicable: https://forums.whonix.org/t/detecting-malicious-unicode-in-source-code-and-pull-requests/13754
* if something new could be learned, consider if stecho also needs changes
* Reviewed, discussed with Patrick in chat.

== user-sysmaint-split - fix live mode sysmaint ==
* broken at dracut mount after entering FDE password
* Fixes:
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/live-sysmaint
*** Patrick: Merged.
** grub-live: https://github.com/ArrayBolt3/grub-live/tree/arraybolt3/live-sysmaint
*** Patrick: Merged.

== user-sysmaint-split - custom lightdm autologin configuration breaks sysmaint mode boot ==
<pre>
sudo append-once /etc/lightdm/lightdm.conf.d/user-autologin.conf "\
[SeatDefaults]
user-session=xfce
autologin-user=user
"
</pre>

* Should be fixed by https://github.com/ArrayBolt3/user-sysmaint-split/commit/46a72d139e10479dfdec55dcbdf9818bea1eceef
** Patrick: Merged.

== privleap - better error message in case comm socket cannot be created as expected ==
<pre>
WARNING: Account 'lightdm' is not allowed to have a comm socket
</pre>

* new feature "expected-non-user+=lightdm"
* better:

<pre>
handle_control_create_msg: INFO: Account 'lightdm' is not allowed to have a comm socket, as expected, ok.
</pre>

* Implemented:
** privleap: https://github.com/ArrayBolt3/privleap/commit/78b83a9ff22a91c47bab9964e6d8b76672dc5f06
*** Patrick: Merged.
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/expected-disallowed-users
*** Patrick: Merged.

== review safe-print ==
* {{Github_link|repo=helper-scripts|path=/pull/14}}
* Merged by Patrick.

== leaprun - implement --check command line parameter ==
* to check if it would be allowed to run an action without running the actual action
* Implemented in https://github.com/ArrayBolt3/privleap/commit/fb76cc6a7683a789ef9d69096a05077350b7ec0f, tests pass, haven't done real-world testing yet.
* Patrick: Merged.

== user-sysmaint-split - lock screen command broken ==
* to debug, a terminal was started and then sysmaint-panel was started from the terminal emulator

<pre>
/usr/bin/zsh
[sysmaint ~]% sysmaint-panel
requestActivate() called for  QWidgetWindow(0x120a4600, name="BackgroundScreenWindow")  which has Qt::WindowDoesNotAcceptFocus set.
xscreensaver-command: no screensaver is running on display :0
</pre>

* Aaron: Known issue from last night, I apparently forgot to mark it in the task tracker though and only documented it in the progress reports. Fix in user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/screenlock
*** Parick: Merged.
* Also found some other bugs while researching and fixing this:
** Warnings about missing passwords when disabling autologin were appearing at the wrong time in some situations. Fix in helper-scripts: https://github.com/ArrayBolt3/helper-scripts/commit/adaecfafcb6abae0bafb6f2d31436a661875bdfd
*** Parick: Merged.
** Software update notifications were appearing in a sysmaint session (which is not necessary or desirable). The notification would also advertise using sysmaint-panel even if it wasn't installed. Fixes in systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/fix-updatecheck (Note: Includes some migration code, see chat for details)
** /etc/apt/sources.list.d/derivative.list was not being generated on first boot if the user booted into PERSISTENT mode SYSMAINT first. Fix in repository-dist: https://github.com/ArrayBolt3/repository-dist/tree/arraybolt3/sysmaint
*** Parick: Merged.

== user-sysmaint-split - sysmaint-panel - check system status button - add delay ==
* systemcheck takes 2-3 seconds until user gets feedback. i pressed the button twice and then had a duplicate systemcheck.
* please disable the button for 2-5 seconds after it has been clicked.
* visible disable the button if the effort for that is reasonable
* perhaps a counter that counts down 5, 4, 3, 2, 1?
* perhaps generally should be the case for all buttons
* Implemented: https://github.com/ArrayBolt3/sysmaint-panel/commit/7e39a7df817045ba3c4bc6f7a1f64e82bba71d92
** This is implemented for most buttons, except for Open Terminal, Reboot, Shut Down, and Install Software. The user experience when using those doesn't warrant a timeout lock and adding a timeout lock there would probably annoy the user.
** Visible timeout counter is present, implemented by adding a <code>(5)</code> at the end of each button label for the duration of the lock (where "5" will be replaced with the remaining seconds until the lock times out).
* Patrick: Merged.

== user-sysmaint-split - sysmaint-panel - install updates button confusing ==
* since it only runs apt dist-upgrade, users might miss out on upgrades because users might not know it's apt update followed by apt dist-upgrade
* Mostly resolved in https://github.com/ArrayBolt3/sysmaint-panel/commit/7ae6a0dcee5e15794dfdb78e9f804d0bf9394095, additional questions and details shared in chat
* Patrick: Merged.

== user-sysmaint-split - sysmaint-panel - output formatting issue ==
* shows:
<pre>
/usr/bin/sudo
/usr/bin/apt
update
</pre>
* that is confusing even for users that know that command. better: /usr/bin/sudo /usr/bin/apt update
** Fixed: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/terminal-helper-output
* Patrick: Merged.
== user-sysmaint-split - sysmaint-panel - wrong error message if logging in as wrong user ==
* login with account "user" after booting into sysmaint mode
* ignore warnings by pam-info during login screen that already advice against logging in with account "user" (because the user might miss them in the future due to PAM bugs, pam-info bugs, other login managers)
* actual: sysmaint-panel shows error "boot into sysmaint"
* expected: sysmaint-panel shows error "please login as account "sysmaint"
* Fixed by implementing a new dialog: https://github.com/ArrayBolt3/sysmaint-panel/commit/b782aa512689242d2a8066a1d7a36bc0ce40fc9b
* Patrick: Merged.

== user-admin-split - documentation improvements ==
* Qubes R4.2 vs R4.3
* Qubes uninstallation instructions (passwordless-root)
* Qubes boot modes
* user documentation
* developer documentation
* anything else missing
** Aaron: Don't see much missing, added requested points.

== autologinchange versus empty password ==
* issue:
** pwchange at time of writing does not notify if autologin is enabled
** autologinchange at time of writing does not notify if an empty password is being set
* the user might intend to secure their by using autologinchange and then be surprised that login without a password is still possible
* how could setting a password and autologinchange be more connected from a usability point of view?
* should one tool at the end of its execution recommend the other, if that seems applicable?
** applicable?
*** when disabling autologin, suggest to user to set a password, if password is currently empty.
*** when setting a password, suggest to user to disable autologin, if autologin is currently enabled.
** use colorful background to notify user of this potential discrepancy?
* or suggest or autorun systemcheck login security check only after such changes to make it obvious?
* Implemented: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/pwchange-autologinchange-link
** Went with the strategy of having each tool warn if things are insecure when the user is doing hardening (i.e. warn about autologin when adding a password, or warn about empty password when disabling autologin)
** Patrick: Merged.

== lightweight update notifications ==
* Qubes vs non-Qubes:
** should not conflict with Qubes internal updater (multiple APT background processes blocking each other) - do this only inside Non-Qubes?
** on the other hand, systemcheck contains many tests that are useful inside Qubes as well
** Qubes developers do not wish the user to see a lot duplicate passive popups, active progress bars and active popups
*** Aaron: Qubes already shows upgrade notifications for VMs, so I would say this feature should not be added to Kicksecure or Whonix under Qubes OS. It's redundant and potentially conflicting.
* non-Qubes: GUI vs CLI?
** GUI: Implement this for the GUI version only?
** CLI: msgcollector supports writing to tty1 even for daemons (systemcheck) started in the background but this is probably confusing and disruptive. (Was default in the past.)
*** Aaron: Agreed, should be a GUI-only feature. CLI users can just run apt commands manually easily enough.
* as a stopgap until one day [[Dev/Automatic_Updates|Dev/Automatic Updates]] gets implemented
* re-use systemcheck for this? Could consider to re-enable autostart of systemcheck by default as it contains already lots of tests. "systemcheck --gui" currently shows:

<pre>
INFO: Kicksecure APT Repository: Enabled. When the Kicksecure team releases BOOKWORM-DEVELOPERS updates, they will be AUTOMATICALLY installed (when you run apt-get dist-upgrade) along with updated packages from the Debian team. Please read https://www.kicksecure.com/wiki/Trust to understand the risk. If you want to change this, use:
dom0 -> Start Menu -> Template: kicksecure-bookworm -> Derivative Repository

WARNING: Debian Package Update Check Result: apt-get reports that packages can be updated.
Please update your 'kicksecure-bookworm' TemplateVM.
1. Open a TemplateVM terminal. (dom0 -> Start Menu -> Template: kicksecure-bookworm -> Terminal)
2. Update.
upgrade-nonroot
3. Shutdown your TemplateVM. (dom0 -> Qubes VM Manager -> right click 'kicksecure-bookworm' -> Shutdown VM)
4. Shutdown and restart this TemplateBased AppVM. (dom0 -> Qubes VM Manager -> right click 'work-main' -> Shutdown VM)
</pre>

* The first "INFO: Kicksecure APT Repository" might be too noisy and could easily be disabled in GUI output by default.
* git history contains /usr/libexec/systemcheckdaemon
** Aaron: systemcheck shows a lot of info about multiple components, much of which a user may skip over or be tempted to skip over. I would prefer implementing this in such a way that a typical desktop notification (such as what <code>notify-send</code> can produce) is shown to the user when there are updates.
** Patrick:
*** It's possible to run select functions only, for example: <code>systemcheck --verbose --function check_operating_system</code>.
*** Other functions might be useful as well such as <code>check_package_manager_running</code> and <code>check_dpkg</code>.
* Aaron: Implemented initial version of update notifications using a user-side daemon.
** systemcheck: https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/updatecheck
*** Patrick: Merged.
** kicksecure-meta-packages: https://github.com/ArrayBolt3/kicksecure-meta-packages/tree/arraybolt3/notifyd
*** Not absolutely necessary, but makes notifications for the whole system much more pleasant to use, and provides a notification applet that can be added to the panel if desired.
*** Patrick: Merged.

== user-sysmaint-split - add screen lock button ==
* for locking screen while walking away from the system in sysmaint mode
* implement low-level lock command in helper-scripts, call the wrapper from sysmaint-panel, to be compatible with multiple screen lockers going forward
* Implemented:
** sysmaint-panel: https://github.com/ArrayBolt3/sysmaint-panel/commit/6913d1451467ebc961236ca4e4c0cd4adcd00a8c
*** Patrick: Merged.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/fix-qubes-systemd
*** Patrick: Merged.
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/screenlock
*** Patrick: Merged.

== GRUB - boot related enhancements ==
* Are there any other boot related enhancements outstanding? If so, please create tickets for these.

== grml-debootstrap - downstream handling grub-cloud versus /etc/default/grub ==
* After/if https://github.com/grml/grml-debootstrap/pull/299 gets merged...
* config-package-dev displace /etc/default/grub? Avoid "fighting" for configuration file ownership by moving the file out of the way.
* Generate a configuration file using do_once. Probably not owned by any package.
* Ship a default /etc/default/grub configuration file:

<pre>
## Do not edit this file!
## Please create and add modifications to the following file instead:
## /etc/default/grub.d/50_user.cfg
##
## User documentation:
## https://www.kicksecure.com/wiki/grub
</pre>

* minor comment on link: <code><nowiki>https://www.kicksecure.com/wiki/grub (lower case) vs https://www.kicksecure.com/wiki/Grub</nowiki></code> (normal case) is OK. Preferring lower case for simplicity thanks to MediaWiki extension SaneCase.
* Implemented for the most part in (broken link), though the comment at the top was not added yet because no other method of image generation we do adds that link and we cannot safely divert and replace this file. Details explained in chat.
* Patrick: Pending discussion.
* Aaron: Tried implementing again after discussion, attempt 2: https://github.com/ArrayBolt3/derivative-maker/commit/6b4e1a38345b69ae9c7e2b3212d7d0488cbd8b60
* Patrick: Merged.
* Patrick: Re-opened.
** mount image in step build-steps.d/3200_create-raw-image was broken. (file name base_image vs full image filename)
*** Re-factored and moved to 3500_install-packages
** grub-cloud sets: GRUB_TERMINAL_OUTPUT="gfxterm serial"
** bug: we used to unset: GRUB_TERMINAL=""
** Fixed.
** developer documentation: [[Dev/boot#.2Fetc.2Fdefault.2Fgrub.d.2F20_dist-base-files.cfg|/etc/default/grub.d/20_dist-base-files.cfg]]
** Please review.
*** Aaron: Reviewed implementation and documentation, looks good to me.

reopen:

* Aaron:
** Tangentially related, discovered a bug in my previous dist-base-files patch for enabling grub-cloud compatibility, resulting in the GRUB menu not being displayed on bootup. This is not caused by the grml-debootstrap PR, it was caused by me mistyping a variable name
** Fix: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/fix-grub

Patrick:

* PR seems not needed. See chat.
** Aaron: Replied in chat, PR seems needed to me, some confusion may be happening with different versions of grub-cloud.
*** Patrick: Merged.

== GRUB - lightweight document ISO GRUB ==
* https://github.com/derivative-maker/derivative-maker/tree/master/live-build-data/grub-config
* Dev/boot in similar style
* Added.

== user-sysmaint-split - qubes - features-request bug ==
* Whonix-Gateway Template and Kicksecure error message during upgrade from developers repository

<pre>
Setting up dist-base-files (3:12.8-1) ...
Processing triggers for qubes-core-agent (4.2.41-1+deb12u1) ...
Traceback (most recent call last):
  File "/usr/bin/qvm-features-request", line 111, in <module>
    sys.exit(main())
             ^^^^^^
  File "/usr/bin/qvm-features-request", line 102, in main
    subprocess.check_call(
  File "/usr/lib/python3.11/subprocess.py", line 413, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['qrexec-client-vm', 'dom0', 'qubes.FeaturesRequest']' returned non-zero exit status 1.
Processing triggers for security-misc (3:44.4-1) ...
</pre>

* Aaron: Cannot reproduce on Qubes R4.3.
** Discussed with Patrick, likely root cause determined. Fixes:
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/qubes-sysmaint-fix
*** Patrick: Merged.
** dist-base-files: https://github.com/ArrayBolt3/dist-base-files/tree/arraybolt3/qubes-sysmaint-fix
*** Patrick: Merged.

== user-sysmaint-split - qubes - qrexec refactoring ==
<pre>
        new file:   usr/share/user-sysmaint-split/qubes/qubes-rpc/qubes.TemplateDownload
        new file:   usr/share/user-sysmaint-split/qubes/qubes-rpc/qubes.TemplateSearch
        new file:   usr/share/user-sysmaint-split/qubes/rpc-config/qubes.Filecopy
        new file:   usr/share/user-sysmaint-split/qubes/rpc-config/qubes.Gpg
</pre>

* a global configuration would be better to avoid getting desync as Qubes appends files or changes file names
* please open a ticket upstream to discuss
** Found an alternative solution that doesn't require upstream changes: https://github.com/ArrayBolt3/user-sysmaint-split/tree/arraybolt3/better-qrexec-overrides
*** Patrick: Merged.
** Also includes fixes for other issues discovered during testing

== user-sysmaint-split - qubes - autologin message during upgrade ==
<pre>
Setting up user-sysmaint-split (3:4.0-1) ...
GUI autologin is not applicable to Qubes OS.
</pre>

* This message is confusing during upgrade.
* Prepend "INFO".
* Only showing during manual run please.
* Implemented:
** helper-scripts: https://github.com/ArrayBolt3/helper-scripts/tree/arraybolt3/autologinchange-output
*** Patrick: Merged.
** user-sysmaint-split: https://github.com/ArrayBolt3/user-sysmaint-split/commit/89cdc200c8e5fafe6393d3102db1939d9aad37e9
*** Patrick: Merged.
== user-sysmaint-split - systemcheck - autologin check message and documentation ==
* systemcheck recommends the sysmaint wiki page - not applicable for users that upgraded and that are not (yet or not anymore) using user-sysmaint-split
** Aaron: Adjusted systemcheck to point to the Login wiki page instead as suggested below. https://github.com/ArrayBolt3/systemcheck/tree/arraybolt3/login-security
*** Patrick: Merged.
** which wiki page is more suitable? [[login]]?
*** should [[Desktop#Disable_Autologin|disable autologin]] be moved to [[login]]?
** password change instructions are currently on [[Post_Install_Advice|Post-installation Security Advice]]
** Aaron: Moved instructions from both locations to the Login page.
* also related: [[Protection_Against_Physical_Attacks|Protection against Physical Attacks]]
* please modify the wiki for better usability of this part. A wiki page is needed which explains at a glance, links users to more detailed sections.
** Aaron: Modified the Login, Post Install Advice, and Desktop wiki pages to move all login security related documentation into the Login page. Also added additional information about login security in general to the top of the login wiki page to provide good "at a glance" instructions. Also wrote a wiki page for the System Maintenance Panel itself so it could be referenced by other pages.
* systemcheck recommends sysmaint-panel - while not yet installed by default. Simplest solution would be to install it by default as it won't create issues for users not using user-sysmaint-split?
** Aaron: Sounds like a good idea to me. Implemented at https://github.com/ArrayBolt3/kicksecure-meta-packages/tree/arraybolt3/sysmaint-panel.
*** Patrick: Merged.
* systemcheck should point out that password / autologin inside VM is not "as important" (needs consideration when this is useful at all) as on the host? or skip login security check inside VMs?
** Aaron: I think this might be overcrowding the systemcheck output a bit. We currently don't express an opinion on whether the autologin or password protection status for each account is a problem in systemcheck itself, we only hint at it via colors. To me, this feels like the right approach since only the end user will know for sure what is secure for them. I think the login security check is still valuable in VMs though, as some users might have a legitimate reason to password-protect a VM (for instance, in a kiosk-like setup perhaps).
* documentation should point out that password / autologin inside VM is not "as important" (needs consideration when this is useful at all) as on the host? A lot users getting bothered with passwords and login prompts inside VMs if it does not benefit their threat model would be a usability degradation.
** Aaron: Agreed, this seems like a good place to put this kind of documentation. Added to the Login wiki page.

== older ==
[[Dev/todo/archived]]

= backlog - one day =
== calamares - make 3.3.12 available in Bookworm ==
* necessary to fix bugs related to the disk encryption user interface
* Sid and Trixie are still at 3.3.9, does maintainer need help packaging 3.3.12?
** Maintainer uploaded 3.3.12 to Sid, should migrate to Testing relatively soon.
** 3.3.11 was hung up on calamares-extensions 3.3.1, and while calamares-extensions 3.3.11 is technically available, a real release of it hasn't been made. Pinged the Calamares devs to see if they could do that, after than I'll ping the Debian Qt/KDE team to get them to package it and that should release calamares into Trixie.
** 3.3.12 was uploaded but was slightly wonky, wasn't migrating, maintainer wasn't fixing the issue yet. Got a DD friend to sponsor an NMU to fix the problem, should hopefully migrate on December 22nd if all goes well. (Thanks to Simon Quigley for sponsorship!)
* Backport 3.3.12 after it is available in Trixie
** Backport submitted to Debian Mentors, review requested from maintainer.
** Moving to backlog because the maintainer ultimately did not appear willing to help with this. We're porting to Trixie now, so this is probably no longer necessary.

== lightdm ssdm ==
* bug report: https://forums.kicksecure.com/t/kicksecure-inside-lmde-5/46/11
* cause of bug could be in rads or security-misc
* Unable to reproduce bug, request for more information at https://forums.kicksecure.com/t/kicksecure-inside-lmde-5/46/13
* More information received, need to retry this one more time
* Tested, finally managed to partially reproduce. Issue appears to be in SDDM.
* Aaron: Debugging complete, bug report with fix filed. https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1089004
** Moving to backlog because of no response to report. Due to Debian policy for stable releases this bug will most likely never be fixed in Bookworm.

== fix Qubes OS kloak implementation behavior with XFCE apps ==
* When dragging XFCE applications in Whonix-Workstation by their menu bar (directly underneath the title bar), the window moves erratically across the screen
* Hover is silently failing to function properly in XFCE application menus
* Hover seems to work just fine in Tor Browser
* May have been a random bug, cannot reproduce now. Bring back from backlog if a way to reproduce this is discovered.

== calamares - enable GRUB force_efi_extra_removable ==
* todo
* if applicable
* PR: https://github.com/calamares/calamares/pull/2446
* Pending discussion.
* Unlikely to be implemented, the current "workaround" appears to be the intended way to implement this sort of thing.

== apt-get - implement --restrict-install-recommends proof of concept ==
* todo

== Debian Installer Verification ==
* after live-build review queue made progress maybe

== Qubes doas ticket ==
* feature request doas support for Qubes
* ask if Qubes would accept doas configuration snippets
* https://forums.whonix.org/t/replace-sudo-with-doas/17482/22
* Ticket filed as an enhancement request: https://github.com/QubesOS/qubes-issues/issues/9599
* Backlogged, we're going sudoless rather than porting to doas for now.

== Qubes umask ticket ==
* /etc/sudoers.d/umask
* https://forums.whonix.org/t/replace-sudo-with-doas/17482/22
* This was only needed if migrating to doas. Superceded by sudoless mode, moved to backlog

== investigate porting from sudo to doas ==
* https://forums.whonix.org/t/replace-sudo-with-doas/17482
* can our /etc/sudoers.d snippets be ported to doas? is doas powerful enough for our requirements based on our already existing /etc/sudoers.d snippets?
* could we have a system that no longer requires sudo or would we end up with a system that comes with both, sudo and doas? ("double" attack surface)
* use ReplaceText as a wiki search engine to find our current uses of sudo because these would need to be ported to doas
** https://www.kicksecure.com/wiki/Special:ReplaceText
** https://www.whonix.org/wiki/Special:ReplaceText
** search terms:
** <code>sudo</code>
** <code>lxsudo</code>
* Ensure sudoers.d config files used in Kicksecure and Whonix on Qubes OS can be ported to doas
* Did an audit of all uses of sudo in kickseure and whonix codebases, and how difficult they should be to port to doas. Results:  https://gist.github.com/ArrayBolt3/6699ec4c631fec28e1f4c0a2e657fcd7
* Superceded by sudoless mode, moved to backlog

== doas - send pull requests to Qubes ==
* [[Dev/todo#Qubes_doas_ticket|Qubes doas ticket]] might be unlikely to get rejected. But replies could take a while.
* Please send a pull requests. Since it is only 2 packages, 3 files the wasted effort if this gets rejected might be low enough?

<pre>
qubes-core-agent: /etc/sudoers.d/qt_x11_no_mitshm
qubes-core-agent: /etc/sudoers.d/umask

qubes-input-proxy-sender: /etc/sudoers.d/qubes-input-trigger
</pre>

* Superceded by sudoless mode, moved to backlog

== create /usr/local/etc/doas.d /etc/doas.d parser and /etc/doas.conf configuration file creator ==
* parse /usr/local/etc/doas.d
* parse /etc/doas.d
* parse only configuration files ending with <code>.conf</code>
* do not overwrite a file that does not contain our auto generated configuration file (could be user custom file)
** echo a warning in that case
* atomic, create variable then use sponge
* add to security-misc
* add a dpkg trigger
* <code>/etc/doas.conf</code> would require a header pointing out it is auto-generated.

<pre>
## Do not edit this file!
## Please create and add modifications to the following file instead:
## /usr/local/etc/torrc.d/50_user.conf

## This file was auto generated by '$BASH_SOURCE' at APT package installation time (a dpkg trigger).
</pre>

* Superceded by sudoless mode, moved to backlog

== doas - add to security-misc permission hardener whitelist ==
* todo
* Superceded by sudoless mode, moved to backlog

== doas - create /etc/doas.d configuration snippets ==
* add /etc/doas.d configuration snippets to the various packages needing these
* if possible, pending discussion in https://forums.whonix.org/t/replace-sudo-with-doas/17482/19 for review of sudoers.d snippets by upstream
* Superceded by sudoless mode, moved to backlog

== bootloader password ==
* https://forums.kicksecure.com/t/harden-grub-bootloader-using-bootloader-password/723

== vm-config-dist re-installs same version ==

* Why a freshly built ova image attempts to upgrade vm-config-dist, even though it is already the latest version?
* https://download.kicksecure.com/ova/17.2.7.8/
* please investigate

<pre>
[user ~]% dpkg -l | grep vm-config
ii  vm-config-dist                                3:10.5-1                        all          usability enhancements inside virtual machines
[user ~]% upgrade-nonroot
Get:1 tor+https://deb.debian.org/debian bookworm InRelease [151 kB]
Get:2 tor+https://fasttrack.debian.net/debian bookworm-fasttrack InRelease [12.9 kB]
Get:3 tor+https://fasttrack.debian.net/debian bookworm-fasttrack/main amd64 Packages [5296 B]
Get:4 tor+https://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
Get:5 tor+https://fasttrack.debian.net/debian bookworm-fasttrack/non-free amd64 Packages [492 B]
Get:6 tor+https://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
Get:7 tor+https://fasttrack.debian.net/debian bookworm-fasttrack/contrib amd64 Packages [7332 B]
Get:8 tor+https://deb.kicksecure.com bookworm InRelease [62.0 kB]
Get:9 tor+https://deb.debian.org/debian bookworm-backports InRelease [59.0 kB]
Get:10 tor+https://deb.kicksecure.com bookworm/non-free amd64 Packages [913 B]
Get:11 tor+https://deb.debian.org/debian bookworm/non-free amd64 Packages [97.3 kB]
Get:12 tor+https://deb.debian.org/debian bookworm/non-free-firmware amd64 Packages [6236 B]
Get:13 tor+https://deb.debian.org/debian bookworm/contrib amd64 Packages [54.1 kB]
Get:14 tor+https://deb.debian.org/debian bookworm/main amd64 Packages [8789 kB]
Get:15 tor+https://deb.kicksecure.com bookworm/main amd64 Packages [33.7 kB]
Get:16 tor+https://deb.kicksecure.com bookworm/contrib amd64 Packages [509 B]
Get:17 tor+https://deb.debian.org/debian bookworm-updates/non-free-firmware amd64 Packages [616 B]
Get:18 tor+https://deb.debian.org/debian bookworm-updates/main amd64 Packages [2712 B]
Get:19 tor+https://deb.debian.org/debian bookworm-updates/non-free amd64 Packages [12.8 kB]
Get:20 tor+https://deb.debian.org/debian bookworm-updates/contrib amd64 Packages [768 B]
Get:21 tor+https://deb.debian.org/debian-security bookworm-security/contrib amd64 Packages [644 B]
Get:22 tor+https://deb.debian.org/debian-security bookworm-security/non-free-firmware amd64 Packages [688 B]
Get:23 tor+https://deb.debian.org/debian-security bookworm-security/main amd64 Packages [206 kB]
Get:24 tor+https://deb.debian.org/debian bookworm-backports/main amd64 Packages [264 kB]
Get:25 tor+https://deb.debian.org/debian bookworm-backports/contrib amd64 Packages [5624 B]
Get:26 tor+https://deb.debian.org/debian bookworm-backports/non-free-firmware amd64 Packages [3852 B]
Get:27 tor+https://deb.debian.org/debian bookworm-backports/non-free amd64 Packages [11.1 kB]
Fetched 9891 kB in 8s (1227 kB/s)
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  vm-config-dist
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 40.2 kB of archives.
After this operation, 2048 B of additional disk space will be used.
Do you want to continue? [Y/n] ^Czsh: exit 130   upgrade-nonroot
</pre>

<pre>
[user ~]% apt-cache show vm-config-dist
Package: vm-config-dist
Version: 3:10.5-1
Architecture: all
Maintainer: Patrick Schleizer <adrelanos@kicksecure.com>
Installed-Size: 135
Depends: sudo, adduser, p7zip-full
Replaces: power-savings-disable-in-vms, shared-folder-help
Homepage: {{Github_link|repo=vm-config-dist
Priority: optional
Section: misc
Filename: pool|path=/main/v/vm-config-dist/vm-config-dist_10.5-1_all.deb}}
Size: 40244
SHA256: 41fc4cd7e2f97bdcf23ff80b91cbbc339aca3c60445ffaa4725147e4e28d048a
SHA1: d150305c67a4d3949c714c4b16a6a2c1ebe63353
MD5sum: 471286ecd49b36d287b50f807685036b
Description: usability enhancements inside virtual machines
 Sets environment variable `QMLSCENE_DEVICE=softwarecontext` as workaround for
 "Automatic fallback to softwarecontext renderer".
 .
 It is not useful to open a screensaver or to power down the desktop for
 operating systems that are run inside VMs. There is no real display that could
 be saved and no real power that could be saved. From usability perspective it
 also is counter intuitive when looking at the VM window and only seeing a
 black screen. Therefore it makes sense to disable power savings in VMs.
 `/etc/X11/Xsession.d/20_kde_screen_locker_disable_in_vms.sh`
 `/etc/profile.d/20_power_savings_disable_in_vms.sh`
 `/etc/X11/Xsession.d/20_software_rendering_in_vms.sh`
 `/usr/share/kde-power-savings-disable-in-vms/kdedrc`
 `/usr/share/kde-screen-locker-disable-in-vms/kscreenlockerrc`
 .
 Disables screen locker when running in VMs because that is not useful either.
 .
 Makes setting up a shared folder for virtual machines a bit easier.
 .
  * Creates a folder `/mnt/shared` with `chmod 777`, adds a group
 "vboxsf", adds user "user" to group "vboxsf". Facilitates auto-mounting of
 shared folders.
 .
  * Helps using shared folders with VirtualBox and KVM a bit
 easier (as in requiring fewer manual steps from the user).
 .
  * `/lib/systemd/system/mnt-shared-vbox.service`
  * `/lib/systemd/system/mnt-shared-kvm.service`
 .
 Set screen resolution 1920x1080 by default for VM in VirtualBox and KVM.
 Workaround for low screen resolution 1024x768 at first boot. When using lower
 screen resolutions, Xfce will automatically scale down.
 `/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/displays.xml`
 .
 Installs VirtualBox guest additions if package
 `virtualbox-guest-additions-iso` is installed if environment variable
 `dist_build_virtualbox=true` or if running inside VirtualBox.
 (`systemd-detect-virt` returning `oracle`)
 `/usr/bin/vbox-guest-installer`
Description-md5: 09e095e928a4c962e728f72d712b4c34

Package: vm-config-dist
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 133
Maintainer: Patrick Schleizer <adrelanos@kicksecure.com>
Architecture: all
Version: 3:10.5-1
Replaces: power-savings-disable-in-vms, shared-folder-help
Depends: sudo, adduser, p7zip-full
Conffiles:
 /etc/dracut.conf.d/30-vm-config-dist.conf 4b17a68bed81773993a0c46d79148986
 /etc/gdm3/daemon.conf.dist b1f35c9655abcc3171af5c10ce4d8292
 /etc/profile.d/20_kde_screen_locker_disable_in_vms.sh e45dd471bc555b906c6c04b208f4066b
 /etc/profile.d/20_power_savings_disable_in_vms.sh bfef62e0edc770197204884b9fc3baea
 /etc/profile.d/20_software_rendering_in_vms.sh 32d99ab4948878c5c790145bdafa88ea
 /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/displays.xml 573a4880ca28e8e094ea78fa76fb875e
Description: usability enhancements inside virtual machines
 Sets environment variable `QMLSCENE_DEVICE=softwarecontext` as workaround for
 "Automatic fallback to softwarecontext renderer".
 .
 It is not useful to open a screensaver or to power down the desktop for
 operating systems that are run inside VMs. There is no real display that could
 be saved and no real power that could be saved. From usability perspective it
 also is counter intuitive when looking at the VM window and only seeing a
 black screen. Therefore it makes sense to disable power savings in VMs.
 `/etc/X11/Xsession.d/20_kde_screen_locker_disable_in_vms.sh`
 `/etc/profile.d/20_power_savings_disable_in_vms.sh`
 `/etc/X11/Xsession.d/20_software_rendering_in_vms.sh`
 `/usr/share/kde-power-savings-disable-in-vms/kdedrc`
 `/usr/share/kde-screen-locker-disable-in-vms/kscreenlockerrc`
 .
 Disables screen locker when running in VMs because that is not useful either.
 .
 Makes setting up a shared folder for virtual machines a bit easier.
 .
  * Creates a folder `/mnt/shared` with `chmod 777`, adds a group
 "vboxsf", adds user "user" to group "vboxsf". Facilitates auto-mounting of
 shared folders.
 .
  * Helps using shared folders with VirtualBox and KVM a bit
 easier (as in requiring fewer manual steps from the user).
 .
  * `/lib/systemd/system/mnt-shared-vbox.service`
  * `/lib/systemd/system/mnt-shared-kvm.service`
 .
 Set screen resolution 1920x1080 by default for VM in VirtualBox and KVM.
 Workaround for low screen resolution 1024x768 at first boot. When using lower
 screen resolutions, Xfce will automatically scale down.
 `/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/displays.xml`
 .
 Installs VirtualBox guest additions if package
 `virtualbox-guest-additions-iso` is installed if environment variable
 `dist_build_virtualbox=true` or if running inside VirtualBox.
 (`systemd-detect-virt` returning `oracle`)
 `/usr/bin/vbox-guest-installer`
Description-md5: 09e095e928a4c962e728f72d712b4c34
Homepage: {{Github_link|repo=vm-config-dist

[user ~]%
<|path=/pre}}>

* SHA256 is OK and matches my locally built package.

<pre>
myfind . | grep vm-config-dist | grep '.deb$' | xargs sha256sum
+ set -e
+ find . -type f -not -iwholename '*.git*'
41fc4cd7e2f97bdcf23ff80b91cbbc339aca3c60445ffaa4725147e4e28d048a  ./genmkfile-packages-result/vm-config-dist_10.5-1_all.deb
41fc4cd7e2f97bdcf23ff80b91cbbc339aca3c60445ffaa4725147e4e28d048a  ./aptrepo_local/kicksecure/pool/main/v/vm-config-dist/vm-config-dist_10.5-1_all.deb
41fc4cd7e2f97bdcf23ff80b91cbbc339aca3c60445ffaa4725147e4e28d048a  ./aptrepo_remote/kicksecure/pool/main/v/vm-config-dist/vm-config-dist_10.5-1_all.deb
</pre>

* The Installed-Size of the package on the VM is listed as one size, but the Packages file in Kicksecure's remote repo lists a different Installed-Size. Thus even though the debs are identical, apt believes the packages are different and wants to update to the remote version of the package as a result. See https://unix.stackexchange.com/questions/581291/why-apt-wants-to-upgrade-already-up-to-date-package. Why this is happening is unclear. Perhaps something is going wrong with using reprepro? See below.

<pre>
# From https://deb.kicksecure.com/dists/bookworm/main/binary-amd64/Packages:
Package: vm-config-dist
...
Installed-Size: 135
...

# From /var/lib/dpkg/status from the linked OVA file:
Package: vm-config-dist
...
Installed-Size: 133
...
</pre>

* I did an OVA build in the background to see what Installed-Size it resulted in, but then accidentally deleted it, I can do redo the build and check it if desired.

== str_replace utf-8 bug ==
<pre>
str_replace %%replace-me-clearnet-replace-me%% kicksecure.com /etc/postfix/header_checks.db
</pre>

<pre>
Traceback (most recent call last):
  File "/usr/bin/str_replace", line 49, in <module>
    main()
  File "/usr/bin/str_replace", line 26, in main
    file_data = source_fh.read()
                ^^^^^^^^^^^^^^^^
  File "<frozen codecs>", line 322, in decode
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8e in position 54: invalid start byte
</pre>

* Low-priority, could be difficult to fix.

== Qubes graphical-session.target missing bug ==
* Which source code file does enable systemd graphical-session.target target on Debian?
* https://github.com/QubesOS/qubes-issues/issues/9576
* Patrick: msgcollector now starts the systemd unit from /etc/xdg/autostart, that is good enough.

== add date and time detection to archive.today frontend ==
* This is necessary for the next task.
* If a link has been archived once in the past, but is severely outdated, we should probably request that archive.today rearchive it. This requires that we know when archive.today archived each page.
* (It might be worthwhile to detect when a link was added to the Wiki and use that as a deciding factor as to whether or not we should archive the link again. Might be doable by using the archive.today backups from Github.)
* We decided to not attempt re-archiving already archived content, thus this is no longer needed for now.

== mediawiki bot setup ==
* no wiki mass editing required for now
* will be required for mediawiki mass editing
* https://www.kicksecure.com/wiki/Special:BotPasswords
* https://www.kicksecure.com/wiki/Special:BotPasswords/botname
* https://www.whonix.org/wiki/Special:BotPasswords
* https://www.whonix.org/wiki/Special:BotPasswords/botname
* note: replace <code>botname</code> with actual name of bot

== rootless X11 ==
* only if doable with low effort such as just changing some configs (such as in lightdm config) or changing some installed packages
* Would require switching away from LightDM or enabling rootless X11 support in LightDM, thus moving to backlog.

== power9 RAM encryption research ==
* todo

== auto-detect, prompt for potential root devices in case the root= device is misconfigured or missing ==
* https://github.com/dracutdevs/dracut/issues/2589
* if doable with reasonable effort please send a pull request to dracut-'''ng'''
* Pull request: https://github.com/dracut-ng/dracut-ng/pull/694
* update: as discussed, low priority if effort is too high

== dracut add support for undeclared CDLABEL ==
as discussed

== live-build - Retry button in derivative-maker doesn't work ==
* low priority, move to backlog please

== live-build - remove trailing spaces ==
* can be done when upstream review queue of live-build has more room

= Footnotes =
<references />
{{Footer}}