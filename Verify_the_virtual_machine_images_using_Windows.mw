{{Header}}
{{Title|title=
Verify {{project_name_long}} Virtual Machine Images in Windows
}}
{{#seo:
|description=Instructions for OpenPGP Verification of {{project_name_long}} Images using Windows
|image=Approved-29149640.png
}}
[[image:Approved-29149640.png|250px|thumb]]
[[image:Windows_logo_-_2012.svg.png|thumb]]
{{intro|
Instructions for OpenPGP Verification of {{project_name_long}} Images using Windows
}}
= Introduction =
{{always_verify_signatures_reminder}}

[https://gnupg.org/ GnuPG] is a complete and free implementation of [[OpenPGP]] that allows users to encrypt and sign data and communications. [https://www.gpg4win.org/ Gpg4win] is a graphical front end for GnuPG that is used for file and email encryption in Windows. The verification process for the {{project_name_long}} images begins with securely downloading and verifying the <code>gpg4win</code> package. Once completed GPG can be used from the command-line to verify the {{project_name_long}} images.

The following guide provides steps to:

# Install SignTool.
# Download and verify GPG4win.
# Download the {{project_name_long}} signing key.
# Verify the {{project_name_long}} images.

= Verify {{project_name_long}} Images in Windows using Gpg4win =
== Download and Verify Gpg4win ==
{{Box|text=
'''1.''' ''Prerequisite: SignTool''

Before proceeding, ensure you have <code>SignTool</code> installed. It's used to verify the authenticity of the <code>gpg4win</code> package. For installation instructions, refer to [[Authenticode#Install_SignTool|Authenticode - Windows Digital Software Signatures chapter Install SignTool]].

'''2.''' ''Download the <code>gpg4win</code> Package:''

* Visit https://files.gpg4win.org.
* Find and download the most recent version of <code>gpg4win</code> and its corresponding signature. (As of August 2020, the latest version was <code>gpg4win-3.1.12.exe</code>).
* '''Tip''': To simplify the SignTool verification, download the <code>gpg4win</code> package directly to the Downloads directory.

'''3.''' ''Verify the Package using SignTool:''

Open the command prompt from the Windows Start Menu:

{{CodeSelect|code=
cmd.exe
}}

Change to the Downloads directory:

{{CodeSelect|code=
cd C:\Users\<your_user_name>\Downloads
}}

Run SignTool to verify the <code>gpg4win</code> package:

{{CodeSelect|code=
signtool verify /pa gpg4win-3-1.12.exe
}}

Upon successful verification, the following output will appear:

'''Figure:''' ''Successful Verification''

[[image:signtool_verify_gpg4win_success.png]]

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = '''Warning:''' Should the verification fail, delete the downloaded <code>gpg4win</code> package. Afterwards, re-download and verify again.
}}

'''4.''' ''Completion:''

You've successfully verified the Gpg4win package.
}}

== Download the {{project_name_long}} Signing Key ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = This entry is strongly related to the [[Trust|Placing Trust in {{project_name_long}}]] page.
}}

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = This entry is for Download the {{project_name_long}} Signing Key on the Windows platform. Includes Windows specifics such as file paths. This chapter might be out of date. In case of questions, see the [[Signing Key|{{project_name_short}} Signing Key]] page first which takes presedence.
}}

Since all {{project_name_long}} releases are signed with the same key, it is unnecessary to verify the key every time a new release is announced. Trust in the key might gradually increase over time, but cryptographic signatures must still be verified every time a new release is downloaded.

<u>Note</u>: With the exception of step 1 all commands should be run from <code>C:\Users\<user_name\Downloads</code>

{{Box|text=
'''1.''' If not already completed, have GnuPG initialize your user data folder.

{{CodeSelect|code=
gpg --fingerprint
}}

'''2.''' Download [[Patrick Schleizer]]'s (adrelanos') [[OpenPGP]] key. <ref>
{{CodeSelect|code=
curl --tlsv1.3 --proto =https --max-time 180 --output derivative.asc https://www.whonix.org/derivative.asc
}}
</ref>

{{signing_key_main}}

Store the key as <code>C:\Users\<user_name>\Downloads\derivative.asc</code>

'''3.''' Change to the <code>C:\Users\<user_name>\Downloads\</code> directory.

{{CodeSelect|code=
cd C:\Users\<user_name>\Downloads\
}}

'''4.''' Check fingerprints/owners without importing anything.

{{CodeSelect|code=
gpg --keyid-format long --with-fingerprint derivative.asc
}}

'''5.''' Verify the output.

The most important check is confirming the key fingerprint <u>exactly</u> matches the output below. <ref>
Minor changes in the output such as new uids (email addresses) or newer expiration dates are inconsequential.
</ref>

<pre>
      Key fingerprint = 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
</pre>

The message <code>gpg: key 8D66066A2EEACCDA: 104 signatures not checked due to missing keys</code> is related to the [[OpenPGP#The_OpenPGP_Web_of_Trust|The OpenPGP Web of Trust]]. Advanced users can learn more about this [[Main/Project Signing Key#OpenPGP_Web_of_Trust|here]].

'''6.''' Import the key.

{{CodeSelect|code=
gpg --import derivative.asc
}}

The output should include the key was imported.

<pre>
gpg: Total number processed: 1
gpg:               imported: 1
</pre>

''If the {{project_name_long}} signing key was already imported in the past'', the output should include the key is unchanged.

<pre>
gpg: Total number processed: 1
gpg:              unchanged: 1
</pre>

If the following message appears at the end of the output.

<pre>
gpg: no ultimately trusted keys found
</pre>

This extra message does not relate to the {{project_name_long}} signing key itself, but instead usually means the user has not created an OpenPGP key yet, which is of no importance when verifying virtual machine images.

Analyze the other messages as usual.
}}

== Verify the {{project_name_long}} Images ==
{{Box|text=
'''1.''' If <i>not</i> already completed, download both <code>Whonix.ova</code> images and the corresponding OpenGPG signature which will be used to verify the image.

Both the signature and .ova image should be downloaded into the same directory.

* Download the {{project_name_long}} VM image and signature from [[VirtualBox|VirtualBox Table]]; or
* Download the {{project_name_long}} VM Image and Signature from [[VirtualBox|VirtualBox Table]].

'''2.''' Start the cryptographic verification; this process can take several minutes.

At the Windows command prompt, change to the directory with the <code>Whonix.ova</code> and corresponding signature file.

{{CodeSelect|code=
cd C:\Users\<user_name>\<directory_name>
}}

'''3.''' Verify the <code>Whonix.ova</code> image.

{{CodeSelect|code=
gpg --verify-options show-notations --verify Whonix*.ova.asc Whonix*.ova
}}

If the Virtual Machine image is correct the output will tell you that the signature is good.

{{CodeSelect|code=
gpg: Signature made Mon 19 Jan 2015 11:45:41 PM CET using RSA key ID 77BB3C48
gpg: Good signature from "Patrick Schleizer <adrelanos@whonix.org>" [unknown]
gpg: Signature notation: issuer-fpr@notations.openpgp.fifthhorseman.net=6E979B28A6F37C43BE30AFA1CB8D50BB77BB3C48
gpg: Signature notation: file@name={{project_name_short}}-{{VersionNew}}.ova
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
     Subkey fingerprint: 6E97 9B28 A6F3 7C43 BE30  AFA1 CB8D 50BB 77BB 3C48
}}

This might be followed by a warning saying:
{{Template:GnuPG-Warning}}

{{gpg_signature_timestamp}}
The first line includes the signature creation timestamp. Example.

<pre>
gpg: Signature made Mon 19 Jan 2015 11:45:41 PM CET using RSA key ID 77BB3C48
</pre>

{{GnuPG_file_names}}

To help users confirm that the file name has not been tampered with, beginning with {{project_name_long}} version 9.6 and above the {{Code2|file@name}} OpenPGP notation includes the file name.

{{do_not_continue_on_gpg_verification_errors}}

'''4.''' When {{project_name_long}} verification is complete, continue with the [[VirtualBox|VirtualBox]] installation.
}}

= Troubleshooting =
== Encountering GPG Errors ==

When a GPG error is encountered, first try a web search for the relevant error. The [https://security.stackexchange.com security stackexchange website] can also help to resolve GPG problems. Describe the problem thoroughly, but be sure it is GPG-related and not specific to {{project_name_long}}.

More help resources are available on the [[Support]] page.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]