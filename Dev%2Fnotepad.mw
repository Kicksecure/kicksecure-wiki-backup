<pre>
AVC apparmor="DENIED" operation="open" profile="/usr/bin/tor-circuit-established-check" name="/proc/1/cmdline" comm="ps" requested_mask="r" denied_mask="r"


   Mar 18 07:09:30 localhost kernel: pinctrl core: failed to create debugfs directory
Mar 18 07:09:30 localhost kernel: zswap: debugfs initialization failed
Mar 18 07:09:30 localhost kernel: tirdad: module verification failed: signature and/or required key missing - tainting kernel
Mar 18 07:10:07 localhost NetworkManager[978]:   [1742296207.0568] failed to open /run/network/ifstate
Mar 18 07:10:08 localhost wireplumber[1229]: Failed to set scheduler settings: Operation not permitted
Mar 18 07:10:08 localhost wireplumber[1229]: GetManagedObjects() failed: org.freedesktop.DBus.Error.NameHasNoOwner
Mar 18 07:10:08 localhost sdwdate[1152]: __ ### END: ### Exiting with exit_code '1' indicating 'wait, show error icon and retry.'.
Mar 18 07:10:08 localhost sdwdate[1152]: 2025-03-18 11:10:08 - sdwdate - INFO - PREPARATION RESULT: onion-time-pre-script detected a known permanent (until the user fixes it) error status. Consider running systemcheck for more information.
Mar 18 07:10:43 localhost polkit-agent-helper-1[2345]: pam_exec(polkit-1:auth): /usr/libexec/security-misc/pam_faillock_not_if_x failed: exit code 1
Mar 18 07:10:43 localhost polkit-agent-helper-1[2345]: pam_exec(polkit-1:auth): /usr/libexec/security-misc/pam_faillock_not_if_x failed: exit code 1
Mar 18 07:13:57 localhost sdwdate[11796]: __ Tor reports: ERROR: Could not connect to privleapd!
</pre>

* killall VBoxSVC
* killall VBoxXPCOMIPCD

<pre>
virtualbox-installer-cli: [WARN]: \033[4mVirtualBox Kernel Module Loaded Test Result\033[24m: 'no' - file /dev/vboxdrv does not exist. This probably means that the vboxdrv kernel module has not been load yet.
virtualbox-installer-cli: [WARN]: \033[4mVirtualBox Kernel modprobe output\033[24m: 'modprobe: ERROR: could not insert 'vboxdrv': Key was rejected by service'
</pre>

<pre>
Setting up virtualbox-7.1 (7.1.4-165100~Debian~bookworm) ...
addgroup: The group `vboxusers' already exists as a system group. Exiting.
vboxdrv.sh: failed: 

System is running in Secure Boot mode, however your distribution
does not provide tools for automatic generation of keys needed for
modules signing. Please consider to generate and enroll them manually:

    sudo mkdir -p /var/lib/shim-signed/mok
    sudo openssl req -nodes -new -x509 -newkey rsa:2048 -outform DER -addext "extendedKeyUsage=codeSigning" -keyout /var/lib/shim-signed/mok/MOK.priv -out /var/lib/shim-signed/mok/MOK.der
    sudo mokutil --import /var/lib/shim-signed/mok/MOK.der
    sudo reboot

Restart "rcvboxdrv setup" after system is rebooted
.

There were problems setting up VirtualBox.  To re-start the set-up process, run
  /sbin/vboxconfig
as root.  If your system is using EFI Secure Boot you may need to sign the
kernel modules (vboxdrv, vboxnetflt, vboxnetadp, vboxpci) before you can load
them. Please see your Linux system's documentation for more information.
</pre>

sudo apt install --reinstall virtualbox-7.1
not required

<pre>
ii  grub-live                                     3:5.8-1                              all          grub live boot menu entry
ii  grub-live-dracut                              3:5.8-1                              all          grub live dracut dependencies
</pre>

<pre>
NetworkManager[672]:   [1726561197.0596] failed to open /run/network/ifstate

pinctrl core: failed to create debugfs directory

zswap: debugfs initialization failed
</pre>

<pre>
torbrowser 
Crash Annotation GraphicsCriticalError: |[0][GFX1-]: glxtest: ManageChildProcess failed
 (t=1.24591) [GFX1-]: glxtest: ManageChildProcess failed

Crash Annotation GraphicsCriticalError: |[0][GFX1-]: glxtest: ManageChildProcess failed
 (t=1.24591) |[1][GFX1-]: No GPUs detected via PCI
 (t=1.24597) [GFX1-]: No GPUs detected via PCI
</pre>

curl "https://api.github.com/orgs/QubesOS/repos?page=1&per_page=100" | grep -e 'clone_url*' | cut -d \" -f 4 | xargs -L1 git clone
curl "https://api.github.com/orgs/QubesOS/repos?page=2&per_page=100" | grep -e 'clone_url*' | cut -d \" -f 4 | xargs -L1 git clone