{{Header}}
{{title|
title=Open Source Business Models
}}
{{#seo:
|description=Overview of Open Source Business Models, their issues, common misconceptions.
}}
{{intro|
Overview of Open Source Business Models, their issues, common misconceptions.
}}

= Issues =
* [https://web.archive.org/web/20230709161203/https://www.ianbicking.org/blog/2019/03/open-source-doesnt-make-money-by-design.html Open Source Doesn’t Make Money Because It Isn’t Designed To Make Money]
* opensource.com article [https://opensource.com/article/20/6/sell-open-source-software How to sell open source software] is not really about selling Open Source but complementary business models.

https://plausible.io/blog/open-source-licenses

= Business Models =
== User Contribution Based Models ==
=== Donations Model ===
Relies on voluntary financial contributions from users or supporters.

https://www.youtube.com/watch?v=bZudGJw3Ck0
10:10

[https://gitlab.com/ gitlab]:

{{quotation
|quote=ice cream money, $ 7 USD / month 
|context=[https://www.youtube.com/watch?v=G6ZupYzr_Zg Keynote: Commercial Open Source Business Models - Sid Sijbrandij, Co-founder & CEO, GitLab]
}}

{{quotation
|quote=up to $ 1000 USD / month
|context=Same as above.
}}

[https://github.com/zloirock/core-js core-js]:

{{quotation
|quote=I'm fucking tired. Free open-source software is fundamentally broken. I could stop working on this silently, but I want to give open-source one last chance.
|context=[https://github.com/zloirock/core-js/blob/master/docs/2023-02-14-so-whats-next.md core-js post about Open Source having a broken / challenging business model]
}}

{{quotation
|quote=This JavaScript library is EVERYWHERE. Its maintainer is broke
|context=https://www.thestack.technology/core-js-maintainer-denis-pusharev-license-broke-angry/
}}

Better success examples:

* [https://grapheneos.org/ GrapheneOS]
** https://github.com/sponsors/thestinger
* [https://joinmastodon.org/ Mastodon]
** https://www.patreon.com/mastodon

=== Pay What You Want Model ===
Allows users to pay any amount they wish for the software or service.

Pay what you want (or PWYW).

Similar to [[#Donations]].

Examples:

* [https://elementary.io/ elementary OS]

=== Crowd Funding Model ===
Utilizes platforms to raise small amounts of money from a large number of people to fund a project.

Similar to [[#Donations]].

== Software Sales Model ==
Selling Copies. Other synonyms are <code>Selling the Ready-to-Run Program</code> or more technical, <code>selling precompiled binary builds</code>.

While most Open Source software is available for free, some projects do charge users for access to pre-compiled binary versions or offer them under a commercial license, even though the source code is freely available. By comparison, selling copies (licensing fees) is one of the main business models for propriety, closed source software.

Note, that Free, Libre and Open Source (FLOSS) software must be free in price a a myth. See [[#Free and Open Source Software should be Free in Price|common misconception: Free and Open Source Software should be Free in Price]].

Selling Copies is rarely used Open Source business model. Only very few examples could be found under the criteria. <ref>
Example AI search query:

<pre>
Ardour is open source, but one must pay to download the compiled program. Are there other open-source programs that require payment for download? Please exclude examples like the Blender cloud service, as that is not a downloadable program, and Unreal Engine, as it is source-available and not Open Source. Additionally, exclude Open Source business models such as hosting, support, open core, SaaS, and dual licensing. List only examples where payment is required for downloads, and where there is only one version available for download—excluding lite/pro/professional versions. Software released under OSI and/or FSF approved licenses only.
</pre>
</ref> There are many reasons for this.

* '''Payment Circumvention Issue:''' The fundamental rights Open Source license permit third parties to legally distribute compiled binaries, thereby circumventing any payment mechanisms put in place by the original developers. This is due to the inherent liberties granted by Open Source licenses, which always allow for free redistribution of the software. This poses a significant challenge to enforcing a Software Sales Model, as it creates an environment where sustaining profitability through direct software sales is inherently complex and unreliable. Users who are unwilling to pay can easily access the software through alternate channels provided by those who are willing to share the compiled versions. It be argued that proprietary, paid software has the same issue for some users circumventing payments through use of piracy / warez. This is being addressed in chapter [[#The Impact of Open Source and Proprietary Models on Business Revenue|The Impact of Open Source and Proprietary Models on Business Revenue]].
* '''Ethos of Freedom and Accessibility:''' The ethos of Freedom Software primarily revolves around the notion of freedom and accessibility, where software, is readily available to anyone free of charge. Selling copies / charging for downloads / licensing fees might seem to contradict this foundational principle, as it limits the accessibility of the compiled software to those willing or able to pay. The Open Source community often values contribution, collaboration, and the democratization of software, and models that appear to create barriers to access can be less appealing to both creators and users.
* '''Source Code Availability:''' The widespread availability of source code enables adept users to compile the software themselves, bypassing the need to purchase precompiled binary builds. This factor can significantly limit the market for selling copies, making it a less viable model for generating substantial revenue in the Open Source ecosystem.
* '''Competing Business Models:''' In addition, with the advent and prevalence of other Open Source business models like SaaS, Dual Licensing, and Support and Services, which align more harmoniously with open source values, the Software Sales Model has been further overshadowed. These models allow developers to generate revenue while maintaining an ethos of open collaboration and community-driven development.

However, it is essential to note that despite its rarity and the challenges associated with it, the Software Sales Model can still be a viable approach for some projects. The key is to strike a balance between maintaining the Open Source ethos and creating a sustainable revenue stream, ensuring the continued development and success of the project.

Examples:

* [https://zorin.com/os/ Zorin OS] ([https://en.wikipedia.org/wiki/Zorin_OS Wikipedia]) is offering a paid pro version
* [https://conversations.im/ Conversations], Jabber/XMPP client for Android
** {{quotation|quote=Conversations is entirely open source and licensed under GPLv3. So if you are a software developer, you can check out the sources from Codeberg and use gradle to build your APK file.}}
** {{quotation|quote=The more convenient way — which not only gives you automatic updates but also supports the further development of Conversations — is to buy the App in the Google Play Store.}}
* [https://ardour.org/ Ardour]'s ([https://en.wikipedia.org/wiki/Ardour_(software) Wikipedia]) [https://community.ardour.org/download download page].
** https://discourse.ardour.org/t/ardour-and-money-2014-edition/78520
** https://discourse.ardour.org/t/ardour-and-money-early-2018-edition/78585
** https://discourse.ardour.org/t/ardour-daw-open-source-and-you-must-pay-for-a-it/84624
** [https://discourse.ardour.org/t/the-paywall-and-related-matters/105989 Third-party making Ardour download available for free, not well received by the Ardour lead developer].
*** Note: This link is added to point to the discussion only. It is not meant as a value judgement or help to download Ardour without payment. If the Ardour developer wanted, the developer could have deleted the download link from the Ardour forums.
*** Warning: Builds by (anonymous) third-parties might also include [[Malware]].
* {{quotation|quote=Get Ardour}}
** {{quotation|quote=Would you like to download the program or the source code?}}
** {{quotation|quote=Ready-to-Run Program: Just download and run Ardour on your Linux, macOS or Windows computer.}}
** {{quotation|quote=Source Code: You'll need to build this yourself. That can be a challenging and complex process, especially on Windows and macOS. We don't provide help for this process, and we can't support the end result. But if you're hoping to modify Ardour or get involved in our development process, this is where to start.}}
** [https://ardour.org/faq.html Ardour FAQ]
*** {{quotation|quote=our Linux users generally get Ardour without payment via their distributions' repositories.}}
* Red Hat Enterprise Linux
** https://www.redhat.com/en/store/linux-platforms
** megacorporation, Red Hat is owned by IBM
* SUSE Linux Enterprise Server
** https://www.suse.com/products/server/

=== Subscription Model ===
* Examples:
** Ardour is selling subscriptions. However, even if the subscription is canceled or expired, Ardour will keep functioning.

No other examples could be found. <ref>
* Ghost
** [https://ghost.org/pricing/ Ghost cloud hosted], or
** [https://ghost.org/docs/install/local/ Ghost local], therefore
** belong to the hosting model category rather than subscription model.
* AI search term:
<pre>
Could you provide examples of Open Source software that utilize the Subscription Business Model? Please list only examples of software that run locally and require a subscription, excluding those offering support and services, hosting, SaaS, cloud, web-based solutions, and extra tools. The software listed should be under licenses approved by OSI or FSF, i.e., it should be Open Source or Free Software.
</pre>
</ref>

== Service Based Models ==
=== Software as a Service - SaaS Model ===
SaaS stands for "Software as a Service." It is a cloud computing model in which software applications are hosted and provided to customers over the internet on a subscription basis. Instead of downloading and installing software on individual computers or servers, users can access and use the software through a web browser or API. 

Examples:

* [https://plausible.io/ plausible]
** https://plausible.io/self-hosted-web-analytics
*** {{quotation
|quote=We released our code on GitHub and made it easy to self-host on principle, not because it’s good business.
}}
* https://plausible.io/about
* https://plausible.io/blog/building-open-source

=== Hosting Model ===
Providing server space for users to run the software.

Example:

* wordpress.com hosting of the wordpress.org software

=== Education and Certification ===
Offering courses, training, or certification related to the software or related skills.

Examples:

* [https://www.kali.org/ Kali Linux]
** https://www.offsec.com/courses/pen-200/
** https://portal.offsec.com/library/all
** https://kali.training/

=== Support and Services Model ===
Providing technical support, consulting, or other services related to the software.

The disadvantage of support based business models is perverse incentives. The better the documentation becomes, the less technical support can be sold. This creates an incentive to take documentation down or keep it in a non-ideal state.

Competition with core development. Time spent on support and custom development cannot be spent on core development.

Examples (neutral, without judgement on their documentation quality):

* RedHat - owned by IBM - megacorporation

Business models successfully used by megacorporations with a lot investor are difficult to reproduce for small projects.

== Open Core Model ==
Offering a basic, Open Source version of the software alongside a proprietary version with additional features.

Similar to freemium.

Examples:

* [https://about.gitlab.com/ gitlab]
* [https://itextpdf.com/ iText]

== Grants Model ==
Conditional sponsoring.

Disadvantages:

* Sponsors might get influence over the project's priorities.
* Developers spend time on tasks which sponsors prefer over tasks which developers think are more important.

== Dual Licensing Model ==
Providing the software under both an open source license and a proprietary license.

* MySQL - owned by Oracle - megacorporation

== Partnership Based Models ==
=== Advertising Model ===
Displaying ads within the software or on associated websites.

Examples:

* Adblock Plus's Acceptable Ads Program.
* Brave Browser
* sourceforge
** {{quotation|quote=SourceForge is a web service that offers software consumers a centralized online location to control and manage open-source software projects}}
** [https://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/ sourceforge started bundling installers with advertisements and got heavily criticized for that by many]

=== Marketplace Model ===
Acts as a platform where third-party developers can sell products or services.

* Ubuntu's Software Center
* Ubuntu including Amazon search results in the Unity Dash search feature in the past which caused a [https://www.theregister.com/2012/10/02/ubuntu_12_10_beta_2_review/ controversy].

=== Data Monetization Model ===
Utilizes user data to generate revenue, typically through analysis, insights, or advertising.

No known Open Source examples.

=== Search Partnership Model ===
Forms partnerships with search providers to share advertising revenue generated from search traffic.

Example:

* Firefox receiving most of its funding from Google, thereby becoming dependent on Google and unable to seriously tackle data mining issues.

== Uncategorized Models ==
* Mullvad VPN local client software (Open Source) uses Mullvad's VPN servers.
** Not really the hosting model similar to wordpress.com hosting wordpress.org since the Mullvad VPN application to the knowledge of the user only interfaces with Mullvad VPN servers which the user cannot self-host.
** Also not Open Core since the Mullvad VPN client isn't useful without a subscription by itself.

= Conclusion =
Using licensing fees as a business model is tough for Open Source projects. See [[#Software Sales Model|Software Sales Model]] for more detail.

Open Source projects can use a range of business models, but so can proprietary software.

Developers and companies that use the Open Source development approach need to offer extra value, like better support, warranties, or more features, to encourage users to donate or buy value-added services. This support helps keep the project sustainable and ongoing. Basically, the success of Open Source software depends on finding the right balance between Open Source principles and added value to make sure users see the benefit and want to support the project.

Finding sustainable business models is more challenging for Open Source projects.

= Invalid Examples =
== source-available software ==
=== Unreal Engine ===
[https://www.unrealengine.com Unreal Engine] ([https://en.wikipedia.org/wiki/Unreal_Engine Wikipedia]) is [https://en.wikipedia.org/wiki/Source-available_software source-available software], not [https://en.wikipedia.org/wiki/Open_source Open Source.] Therefore cannot be an example for an Open Source business model. Only for a source-available software business model.

{{quotation
|quote=A 5% royalty is due only if you are distributing an off-the-shelf product that incorporates Unreal Engine code (such as a game). Provided that you notify us on time using the Release Form, you will only owe royalties once the lifetime gross revenue from that product exceeds $1 million USD; in other words, the first $1 million will be royalty-exempt.
|context=[https://www.unrealengine.com/en-US/faq Unreal Engine FAQ]
}}

=== Grayjay ===
[https://grayjay.app/ Grayjay] 

* [https://www.youtube.com/watch?v=5DePDzfyWkw&t=473 said "Open Source"] but should have said "source-available" because [https://gitlab.futo.org/videostreaming/grayjay/-/blob/master/LICENSE Grayjay is not Open Source]. 
* [https://www.reddit.com/r/revancedapp/comments/17ag7jc/comment/k5dckin/ rationale for the propriety license]
* infinite trialware

== proprietary software ==
Infinity for Reddit

{{quotation
|quote=
The project will remain open-source, no matter if Infinity is sustainable or not, but the code related to Google Play billing and API key will not be published on GitHub.
|context=https://www.reddit.com/r/Infinity_For_Reddit/comments/147bhsg/the_future_of_infinity/
}}

Any closed source parts of an otherwise mostly Open Source software make it nonetheless proprietary.

= Misconceptions =
== Free and Open Source Software should be Free in Price ==
Free, Libre and Open Source Software (FLOSS) movements primarily focus on the freedom to use, modify, and distribute software, rather than on the economic aspects such as the cost or revenue generation. However, these movements do not inherently oppose the idea of earning money through software; instead, they encourage the community to benefit from shared knowledge and collaboration.

The ethos of the Free Software movement acknowledges and supports the legitimacy of generating revenue through software distribution and services. As clarified by the GNU Project:

{{quotation
|quote=Many people believe that the spirit of the GNU Project is that you should not charge money for distributing copies of software, or that you should charge as little as possible—just enough to cover the cost. This is a misunderstanding.

Actually, we encourage people who redistribute free software to charge as much as they wish or can. If a license does not permit users to make copies and sell them, it is a nonfree license. If this seems surprising to you, please read on.
|context=GNU Project: [https://www.gnu.org/philosophy/selling.en.html Selling Free Software]
}}

“Free” in Free Software refers to freedom, not price. FLOSS can and does coexist with commercial elements, and it is available for commercial use, development, and distribution. The GNU Project further elucidates:

{{quotation
|quote=Free software can be commercial

“Free software” does not mean “noncommercial.” On the contrary, a free program must be available for commercial use, commercial development, and commercial distribution. 
|context=GNU Project: [https://www.gnu.org/philosophy/free-sw.en.html#:~:text=to%20that%20plan.-,Free%20software%20can%20be%20commercial,could%20not%20achieve%20its%20aims. What is Free Software?]
}}

Moreover, David A. Wheeler’s essay substantiates that Free-Libre / Open Source Software (FLOSS) is intrinsically commercial software, indicating that commercialization is not antithetical to the principles of open source and free software.

[https://dwheeler.com/essays/commercial-floss.html Free-Libre / Open Source Software (FLOSS) is Commercial Software].

== Non-commercial Licenses ==
While all FLOSS approved licenses allow commercial use, there are licenses that permit free use and distribution but explicitly prohibit commercial exploitation. One such example is the Creative Commons Attribution-NonCommercial (CC BY-NC) license. These licenses are typically chosen by developers who wish to restrict the commercial use of their creations while keeping them open and freely available for non-commercial purposes.

FLOSS license approval institutions never approved non-commercial licenses.

Non-commercial licenses are not FLOSS licenses.

== Commercial FLOSS ==
The Free, Libre and Open Source Software movements advocate for software freedom and openness, focusing on user rights and collaborative development. The notion that FLOSS should be devoid of monetary involvement is a misconception. In reality, FLOSS embraces the coexistence of software freedom and commercial utilization, allowing developers, distributors, and users to benefit mutually from both the ethical and economic aspects of software development.

Also called Commercial Open Source Software (COSS).

== The Impact of Open Source and Proprietary Models on Business Revenue ==
Unreal Engine (UE) is renowned software used for developing video games and simulations, owned by Epic Games. It operates on a source-available model, enabling developers to access and read its entire source code. However, this accessibility comes with financial obligations. Developers profiting more than 1 million USD from software developed using Unreal Engine are mandated to pay a 5% royalty to Epic Games.

The notion that transitioning Unreal Engine to an Open Source model holds a 0% chance of income loss for Epic Games is overly optimistic and overlooks the inherent financial structures in place. Open Sourcing Unreal Engine would inevitably lead to a forfeiture of licensing fees, causing a direct impact on Epic Games' revenue streams from those fees.

Privacy and licensing agreement violations are predominantly non-concerns, considering that the main clientele of Unreal Engine are companies with a general adherence to legal and contractual obligations.

For instance, EA Sports WRC, a game by EA Games, leverages Unreal Engine for its development. A shift to an Open Source model would inherently grant EA Games, along with other developers, the liberty to abstain from paying licensing fees to Epic Games.

Indeed, while piracy and the unauthorized distribution of software (warez) can significantly impact the revenues of developers relying on software licensing fees, it doesn’t render the model obsolete or entirely unviable. A substantial number of individuals and companies avoid using pirated software due to legal and ethical considerations, the challenges and risks associated with circumventing payment systems, and concerns about malware and other security risks. According to a [https://www.wired.com/2009/10/report-41-percent-of-personal-computing-software-is-pirated/ report by Wired], 41% of personal computing software is pirated, implying that a majority, 59%, is properly licensed.

These percentages can fluctuate widely depending on the software type and user demographic. For instance, specialized software like tax accounting tools used by large corporations is less likely to be pirated due to the legal repercussions and the high value placed on reliability and support.

= See Also =
* https://xkcd.com/2347/

https://dwheeler.com/essays/floss-license-slide.html

= Footnotes =
{{reflist|close=1}}
{{Footer}}
[[Category:Development]]