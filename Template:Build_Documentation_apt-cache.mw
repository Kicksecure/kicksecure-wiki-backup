<noinclude>{{Header}}</noinclude>

<div class="toccolours mw-collapsible mw-collapsed">
Using an apt cache will greatly improve build speed when building several times in a row (e.g. when debugging, during development).

If you are interested, click on Expand on the right.
<div class="mw-collapsible-content">
{{Box|text=
'''torified apt-cacher-ng'''

The following torified apt-cacher-ng setup only has to be applied, if you are building using onion apt sources using <code>--connection onion</code>.

However, if you are building behind a Tor transparent proxy such as {{project_name_gateway_long}}, you can use the simpler clearnet apt-cacher-ng instructions below instead.

{{Box|text=
{{mbox
| image   = [[File:Ambox_notice.png|40px]]
| text    =
If you skip these steps of setting up a torified apt-cacher-ng, you must below drop and not use <code>REPO_PROXY=http://127.0.0.1:3142</code>.
}}

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    =
Note, this neither torifies all of the build script's connections nor hides Tor from your ISP!
}}

Install apt-cacher-ng-, torsocks and tor.

<pre>
sudo apt install apt-cacher-ng torsocks tor
</pre>

Create folder apt-cacher-ng systemd drop-in folder <code>/lib/systemd/system/apt-cacher-ng.service.d</code>.

<pre>
sudo mkdir -p /lib/systemd/system/apt-cacher-ng.service.d
</pre>

{{Open with root rights|
filename=/lib/systemd/system/apt-cacher-ng.service.d/50_user.conf
}}

Add.

<pre>
[Service]
ExecStart=torsocks /usr/sbin/apt-cacher-ng SocketPath=/run/apt-cacher-ng/socket -c /etc/apt-cacher-ng ForeGround=1
</pre>

Save.

Reload systemd.

<pre>
sudo systemctl daemon-reload
</pre>

Restart apt-cacher-ng.

<pre>
sudo systemctl apt-cacher-ng restart
</pre>
}}
}}

{{Box|text=
'''clearnet apt-cacher-ng'''

{{Box|text=
<pre>
sudo apt install apt-cacher-ng
</pre>

Be sure to have a firewall, so the whole internet can not use the apt-cacher-ng service.

Prepend <code>REPO_PROXY=http://127.0.0.1:3142</code> before the build command.

<pre>
sudo REPO_PROXY=http://127.0.0.1:3142 ./derivative-maker ...
</pre>

When building inside a non-Whonix VM, an apt cache can be used on the host. In that case, adjust the IP accordingly and manually test that it is reachable. When building inside a ({{project_name_long}}) VM, just install the apt cache inside the VM and point to a localhost apt cache.

From 14.0.1.0.7-developers-only and above Whonix automatically uses apt-cacher-ng.
}}
}}
</div>
</div>

<noinclude>{{Footer}}</noinclude>