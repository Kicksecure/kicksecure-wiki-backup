{{Header}}
{{title|title=
ToDo for {{project_name_long}} Wiki Devs
}}
{{#seo:
|description=Website Enhancements Planning
}}
{{devwiki}}
{{intro|
Website Enhancements Planning
}}
= TODO: ADMIN - SOON =
= TODO: ADMIN - DELAYED =
== new thank you donation message ==
1) CORS issues are fixed now? (Patrick attempted to fix these.)

2) explain Patrick how to draft a HTML e-mail with text-only fallback in Thunderbird

3) Possible to have a plaintext fallback if HTML is disabled by the e-mail client?

4) e-mail for

* Kicksecure
* Whonix

5) bug?

This page is in Quirks Mode. Page layout may be impacted. For Standards Mode use “<!DOCTYPE html>”.

https://developer.mozilla.org/docs/Web/HTML/Quirks_Mode_and_Standards_Mode

Valid HTML better / good idea for best e-mail reader compatibility?

'''DEV'''

# How can I check CORS issues?
# In thunderbird multipart email can be accomplised by going to "Options > Sending Format" and choose "Both HTML and Plain Text"
## This Sending Format however only seems to take effect if the mail is truly sent. So saving it as a draft and then "saving as" .eml does work but does not create a multipart email
## So maybe admin should send the email to his own email address and then save the .eml file
## However this eml file needs to be modified for each recipient, so there needs to be more work done
## May another mail software needs to be involved
# The plaintext fallback is exactly what we want to accomplish with multipart
# What is meant with task 4?
# Maybe live discussion is needed

== mediawiki-extensions-Purge ==
todo: discuss

What does https://github.com/AlPha5130/mediawiki-extensions-Purge/blob/master/resources/ext.purge.js (15 lines only) do?

Probably would have little effect for our wiki because of our custom skin? Does this functionality seem useful?

'''DEV'''
* The development of this extension seems pretty interesting
* The new extension (from pseudonym dev) is not much different from the original and seems to fix a faulty behavior of the original extension
* Both versions consist of 2 parts: ext.purge.js and Hooks.php
** In Hooks.php in every page (without our skin) there is a link added to call the purge page (which is not part of the extension but of mediawiki itself)
** This is just a convenience shortcut, but useful - even for us. Because if a dev is already on the edit page then our purge via super menu is not available. Removing this extension however would not be a terrible loss but a small convenience downgrade
** In ext.purge.js the convenience is even more improved for Javascript users only. Because then the link does not open the purge-page but is stopped and instead the purge action is instantly performed without going to the purge page
* Both versions are not perfect
** The original version fails to prevent the link to be augmented by Javascript. This might be due to it being loaded to early or other factors
** The newer version fixes this behavior but also prevents nojs users to use this button at all. It will be there but non-functional
* Suggestion (in order of preferability from Dev's perspective)
*# However because it would be mainly for our convenience I suggest use the newer version
*# If not then use the older version
*# If not then write our own fork which would be the perfect solution
*# Another option would be to just add our own purge button via a simple Javascript file on pages that don't have the skin. That would also be a ONLY-JS solution but it would be a bit quicker than the "perfect fork" solution
*# If not then don't use at all, because we have instant access to purge via our skin

Patrick:

* Do we even need the purge button still?
** Only for template changes?
** Otherwise cache invalidation is stable nowadays?
* Weird anyhow that non-admins can clear cache.
* MediaWiki's solution prevents crawlers from accidentally pressing that button.
* noJS support not required.
** JS-only solution good enough.
* Could we make it login-only or admin only?

== add querystring to Headscript ==
purpose: invalidate browser cache on css changes

* append querystring to our custom css/js
* append to fontawesome etc too?
* read version number from a local file in /srv/shared/cssversion/version-file
* sanity tests
** check it is a real number
** check string length maximum
* fall back to querystring=error if local file is missing or has invalid contents

how do we update the version number? options:

* hardcoded in headscript
* manually on file
* manually in MediaWiki:cssversion
* mw-combine can bump the version number but that might run too frequently (by the server, for testing, could be changed but non-ideal)
* by Patrick writing a script that checks if contents of mw-autogen folder changed (counting all file names and hashing all files)

Alternative considered <code>Cache-Control</code> HTTP header <code>stale-while-revalidate</code>:

* Would result in lots of <code>If-None-Match</code> requets and <code>304</code> responses.

== Upgrade mw-multi-wiki - delete deleted files ==

'''DEV'''

* I suggest upgrading mw-multi-wiki
* Currently it is the case that files which are deleted are not updated during mw-multi-wiki deploy
* This means that a dev would have to delete the other files manually and keep track somewhere which files to delete later
* This is a problem because sometimes files should not be deleted before everything is finished and admin has approved development. And it also cannot be deleted before because then the wiki which is not updated yet would not function anymore
* So I suggest admin upgrades the mw-multi-wiki script and checks for formerly Category:MultiWiki files that are now deleted and delete them too
* Or maybe find another solution

Patrick:

* How mw-multi-wiki could detect deleted files from Category:MwDeleteMe?
** Currently mw-multi-wiki uses MediaWiki API to look at https://www.kicksecure.com/wiki/Category:MultiWiki
** Once a page is deleted, it vanishes from the Category:MultiWiki page. Therefore mw-multi-wiki "forgets" about its existence.
* '''A)''' mw-multi-wiki could be stateful and "remember" which pages were ever in mw-multi-wiki but that's ugly because then an idempotent, clean script would be dependent on remembering the state in some state file. The state would be difficult to share among developers.
* '''B)''' A Category:MwDeleteMe could be invented. Delete all contents from the page and add that Category. Then mw-multi-wiki could remove it first from slave and eventually form the master wiki. Also non-ideal because not an intuitive process as it requires the developer to remember this because it's not a simple as using as using the wiki's internal deletion feature.
* '''C)''' Deletion log https://www.kicksecure.com/wiki/Special:Log/delete doesn't contain categories.
** Parsing the deleted revision for Category:MultiWiki might be error prone (if a wiki page was MultiWiki in the past but then it was only a comment).

status:

Patrick asked on the MediaWiki mailing list. https://lists.wikimedia.org/hyperkitty/list/mediawiki-l@lists.wikimedia.org/thread/DIREH7YFVQPYHIJFFUXNBE6PVJ6OSMUX/

new idea: diff the categories in the different wikis

report only

== Logos Misc TODO ==
TODO:

* github sponsors credit card
* Content in Kicksecure wiki and Whonix wiki
* wiki text inconsistencies
** Chapter "Definitions" currently shows:
*** Logo - seems to unspecific
*** Landscape logo
*** Text logo
*** Icon logo
** Chapter "Current Kicksecure logos" uses a different language.
** Chapter "Current Whonix logos" uses a different language.
* logo consistent naming
* projectname-logo-definition
** <code>example</code>: kicksecure-logo-rectangular
** rename File, [[Special:ReplaceText]] to update old references

== misc ==
* https://phabricator.wikimedia.org/T333357
* https://www.speedcurve.com/
* https://developer.chrome.com/docs/devtools/application/back-forward-cache/
* https://www.mediawiki.org/wiki/Snippets/Load_an_additional_JavaScript_or_stylesheet_file_on_all_pages
* https://marketingpipeline.github.io/CSS-Image-Loader/index.html
* https://requestly.io/
* https://medium.com/free-code-camp/using-svg-as-placeholders-more-image-loading-techniques-bed1b810ab2c
* https://github.com/fogleman/primitive
* https://github.com/kizule/mediawiki-extensions-Kicksecure
* https://textoptimizer.com/
* https://github.com/vozlt/nginx-module-vts

== MultiWiki: Think about PHP files ==

* For the workflow it would be good to not only deploy the js and css files to the "slave" wikis, but also the php-scripts for combined and headscript content
* Pro: if there are more than 2 wikis (which are not at the moment) then it's way easier to manage
* Con: At the moment it's not necessary. And we would need to be very careful with who gets the rights

== Stage Server as Master ==

* MultiWiki feature requests:
** The idea is the separate MultiWiki files into "code" (js, css files) and "content" (content pages)
** pull code (CSS, JS, widgets) from Kicksecure stage server
*** How about templates such as [[Template:Header]]?
**** These need to be in a special category to be recognized as code?
* stage server feature request:
** The stage server becomes the master server for code files. That way new scripts can be developed and tested on the stage server without disrupting the normal production use of the public wikis. Once a new feature is ready it can be multiwiki deployed from the stage server (master) to the slave wikis
* For content pages the Kicksecure wiki might still be the master however

== Newsletter Widget ==
* Widget here means "widget" generally as in a box with a special feature.
** Not necessarily a MediaWiki widget.
** Is there a better terminology than widget to avoid confusion?
* features:
** subscribe
** unsubscribe
** add the newsletter subscribe/unsubscribe to homepage
** the widget should be re-usable in other places in the wiki
** Ideally noJS compatible.
** Just two (subscribe/unsubscribe) POST submit boxes.
** The backend on the server could be a simple PHP script that just appends the e-mail address to a file subscribe.txt / unsubscribe.txt.
*** The PHP script should reject invalid e-mail address formats (such as with spaces in the middle or missing @ sign)
*** The PHP script would return "Success. Thanks for signing up!" or "Failure to sign-up. Please report this bug in the forums."
* non-features:
** double opt-in (this will be done manually at a later stage before sending any e-mails)
* TODO: discuss

'''DEV'''
* Topic was discussed. Script should be simple and at best not using a database
* Dev did newsletter research. Conclusions
** Most scripts are paid and proprietary, e. g. https://www.formget.com/newsletter-php-script/
** Most scripts are rather complex
** Most scripts use MySQL
* Options
** We could write a completely new scripts
** We could base a widget on the research by admin: https://github.com/rodhilton/maillister (an old script)
** We could by a modern script and set it up with mysql
* Admin said he will do script research again

== FlaggedRevisions CacheClear Workaround ==
TODO

= TODO DEV =
== video production: discuss don't trust screenshots of videos #2 ==

* check script again
* shorten if needed
* short check by Patrick (notify mobile)
* production
* https://www.kicksecure.com/wiki/Dev/videos#Don%E2%80%99t_ever_blindly_trust_screenshots_[YT_short]
'''DEV'''
* Production v1 complete

Patrick:

* all good
* please finalize, upload

== code ==
=== thumbnail content shift bug ===
* thumbnails on mobile seem to have a content shift
* only happening on mobile
* this didn't happen in the past
* please compare with mediawiki / wikipedia upstream
* the content shift is not registered on pagespeed insights
* the "jumping" effect would be nice if it could be fixed
* see video
* example page in video used: https://www.kicksecure.com/wiki/Basic_Security_Guide_Introduction
* Could this be caused by any of our thumbnail related changes?

=== bullet point showing a blockquote ===
bug: The following looks weird.

* <blockquote>1) test blockquote</blockquote>
* another test: <blockquote>2) 123</blockquote>

In case of 1), there is too much white space between the bullet point and the line to mark the quote. In case of 2), not as much of an issue. But no need to have two different cases. Can be a one fix for both cases?

== content ==
=== Download choice improvement #2 ===
https://www.kicksecure.com/

* on mobile, please sort these options
** most important on the top: hardware
** less important: VM
** least important: special
* hardware options should be next to each other. Perhaps boxed in some way?
* Imagine being a first time visitor.
** Are the download options clear?
** The Debian logo might be confusing.
*** on wiki/Download Patrick changed from "Linux" to "Kicksecure ™ for VirtualBox Linux installer".
*** on wiki/Download Patrick changed from "Debian" to "Install Kicksecure on Debian (transform Debian into Kicksecure)"

== mediawiki bug reports ==
=== bug report for mediawiki bullet point HTML generation ===
'''DEV'''

* Documentation: [[Dev/mediawiki#VideoLink_.28Template.29]]
* Dev however recommends moving it to a widget
* Because it does not work in lists, example {{VideoLink
|videoid=6nHufztdkUI
|text=OOPS! They tricked me to install MALWARE! Clipboard Hidden Text Attacks explained
}}
* Dev considers this a bug / feature of Mediawiki. It seems that if mediawiki evaluates HTML constructions it forcefully moves "wrong" constructions out of their context. This does not happen with widgets. Below you see how it should look like
{{VideoLink
|videoid=6nHufztdkUI
|text=OOPS! They tricked me to install MALWARE! Clipboard Hidden Text Attacks explained
}}

Patrick:

* Please write a bug report draft for mediawiki upstream.
** nice title

=== Total Blocking Time ===
Total Blocking Time went up on google pagespeed for mobile. Ideas why? Anything changed? Related to uglifyjs?

'''DEV'''

* Research was conducted on possible issues
* Source maps could not be found in research to cause performance issues
* Really hard to find out, because it seems kind of a black box
* However: page map was not the problem. It was activated and deactivated without much difference
* 4 testing pages were compared and tested twice
** OLD: https://www.kicksecure.com/test/font-awesome-test-01-normal.html
** NEW: https://www.kicksecure.com/test/kicksecure-test_2023-03-28_homepage.html
** NEW_NoUserScripts: https://www.kicksecure.com/test/kicksecure-test_2023-03-28_homepage_without-scipts.html
** NEW_NoNewUserScripts: https://www.kicksecure.com/test/kicksecure-test_2023-03-28_homepage_without-new-scipts.html

<div class="scroll-table">
{| class="wikitable"
! Cat !! OLD !! NEW !! NEW_NUS !! NEW_NNUS
|-
| First Contentful Paint || 1.6s / 1.7s || 1.1s / 1.2s || 1.1s / 1.2s || 1.1s / 1.1s
|-
| Total Blocking Time || 50ms / 70ms || 370ms / 580ms || 110ms / 220ms || 370ms / 210ms
|-
| Speed Index || 1.8s / 1.9s || 1.9s / 1.9s || 1.6s / 1.4s || 1.7s / 1.5s
|-
| Largest Contentful Paint || 3.3s / 3.4s || 3.0s / 3.6s || 3.4s / 3.7s || 3.4s / 3.0s
|}
</div>

** Analysis
*** It seems the only metric truly affected IS total blocking time, the rest is pretty much the same
*** It seems also obvious that the new scripts - prism and instant page - have a significant impact on TBT, but are NOT the only reason because without scripts (meaning also without combined.min.js) it's still not as fast as before
*** Dev did a diff of OLD and NEW and saw some differences and found that in flyinnotification the image should be decoding="async" loading="lazy" which was already fixed too but didn't change much for pagespeed
*** Dev also thinks it's possible that deferring Javascript leads to a worse TBT, because [Total blocking time] = [Time to interactive] minus [First contentful paint] → so the longer JS is deferred the longer it might take to reach time to interact. That is however just a speculation. This page here is a great overview over the topic https://www.fasterize.com/en/blog/understand-and-improve-the-time-to-interactive/ - not that this page states '''"It is important to specify that Time To Interactive is not a standardized indicator. It may therefore evolve. Note also that, although Google has included this metric in the calculation of the Lighthouse and PageSpeed Insights score, its weight has decreased during recent changes in the calculation of the score, to the point that it seems to be bound to disappear eventually."'''
*** Here is some more explanation for total blocking time and suggestions to improve and possible reasons why it might have increased in our development https://calibreapp.com/blog/total-blocking-time
** How to proceed
*** Dev suggests admin to define a course: Invest more time into improving this metric or waiting for this metric to phase out?
*** Because - this was not mentioned before - there were also tests done with gtmetrics which gave very good results and slightly worse results when the "connection" was heavily throttled, indicating that maybe only server speed or dome size could be improved

Patrick:

* also happens with mediawiki therefore probably a pagespeed bug or less likely a mediawiki issue
* compare with a few other popular websites if they also have this issue now (which might be just a pagespeed bug)
** therefore not much time need to be used to analyze if we're causing the issue ourselves
* check with chromium 112 with built in lighthouse in chromium developer toolbar
** Lighthouse 10 will be available in Chrome 112, currently scheduled for release on March 29, 2023.
* please write a bug report draft for mediawiki upstream (even if we don't know what is causing this then it's just a simple bug report without analysis)

== discuss Browser ddos vulnerabilities ==

* Can browser be frozen by heavy Javascript as an attack
* Other vulnerabilites? - Pleasen
* What happens if Javascript is constantly fetched or if the dom is 1 GB large?

== code ==
=== Whonix homepage - Form elements do not have associated labels ===
https://pagespeed.web.dev/ shows some suggestions:

Form elements do not have associated label

Labels ensure that form controls are announced properly by assistive technologies, like screen readers. Learn more. https://dequeuniversity.com/rules/axe/4.4/label

Failing Elements

<pre>
div.section-banner > div.inner-wrapper > div.overview-image-and-video-player > input#hide-overview-image
<input type="checkbox" id="hide-overview-image">
</pre>

* Patrick fixed a similar warning here: https://www.kicksecure.com/w/index.php?title=Widget%3ADonation_Panel&type=revision&diff=66939&oldid=58997
* TODO: Only fix for our custom HTML/CSS/JS. We didn't invent many forms anyhow? [[homepage]], [[about]], [[donate]]
** Kicksecure
** Whonix

=== Heading elements are not in a sequentially-descending order ===
* Heading elements are not in a sequentially-descending order
** Heading elements in order is a very impractical metric which probably very few websites adhere to. Headline levels are very rarely used structurally (exception example MediaWiki and similar), but often rather as style choices. Especially smaller headlines which are very rarely used anyways h4-h6 are often used exclusively as style elements. For our project that would be possible especially if it's limited to few sites. But it would mean changing HTML as well as CSS
** TODO: discuss

'''DEV'''
* I would say this is very difficult because headlines are not only used by us but by mediawiki itself or extension in the "wrong order"

TODO:

* write bug report draft for phabricator.wikimedia.org if issue can be reproduced on mediawiki.org (or wikipedia.org)
* document this was discussed on dev/mediawiki

'''DEV'''
* This "bug" is not due to mediawiki
* As documented here this CAN be solved on our part https://vaihe.com/quick-seo-tips/tip-for-fixing-heading-elements-order/
* However this might be time consuming to find ALL pages where the headlines are not in correct order
* Maybe admin can create a list of pages that he really wants to be fixed in this regard (important pages). Then dev can fix those pages in a reasonable time frame.

Patrick:

* no local fixes
* important thing is only that upstream bug report exists or is going to be created

'''DEV'''
* I mean that this might be "our fault"
* So mediawiki might not have "bugs" in this regard, but it was just our practice before to use these headlines in the wrong context
* So this is not a workaround, but just fixing our own code
* So a bug report would not be justified

Patrick:

* upstream https://m.mediawiki.org/wiki/MediaWiki has the same bug when testing with pagespeed insights

=== homepage html optimizations ===
For Kicksecure and Whonix homepage. To reduce DOM size.

Something doable, useful here?

Instead of using this code;

<pre>
<div id = ”navigation-main”>

    <ul>

            etc ..

    </ul>

</div>
</pre>

It would be better to use this other one;

<pre>
<ul id = ”navigation-main”>

    etc ..

</ul>
</pre>

=== Defer Upstream MediaWiki JavaScript ===
now:

<pre>
<script async="" src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
</pre>

Patrick could server side easily rewrite that to:

<pre>
<script defer src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
</pre>

(Nobody uses <code>script async=""</code> (not a syntax error - asked upstream). This is easily string replaced to <code>script async</code> using nginx.)

== Progressive Web App PWA ==
resources:

* https://www.mediawiki.org/wiki/Extension:PWA
* https://github.com/Wikimedica/mediawiki-extensions-PWA
* https://phabricator.wikimedia.org/T282500

You can find the site.webmanifest here:

* <code>mediawiki-customized-dist</code>: <code>public/favicons-kicksecure/site.webmanifest</code>
* <code>mediawiki-customized-dist</code>: <code>public/favicons-whonix/site.webmanifest</code>

todo:

* discuss: do we need the extension or do we create our own 
* read https://web.dev/progressive-web-apps/
* use Lighthouse (integrated in chromium developer console)
** <blockquote>Content is not sized correctly for the viewport

The viewport size of 396px does not match the window size of 360px.

If the width of your app's content doesn't match the width of the viewport, your app might not be optimized for mobile screens. Learn more. https://web.dev/content-width/</blockquote>
* <blockquote>Manifest doesn't have a maskable icon

A maskable icon ensures that the image fills the entire shape without being letterboxed when installing the app on a device. Learn more. https://developer.chrome.com/docs/lighthouse/pwa/maskable-icon-audit/</blockquote>

== critical css test ==

info:

* https://web.dev/codelab-extract-and-inline-critical-css/

goals:

* A simplified test if critical CSS inclusion into the head results in faster website speed at all.

non-goals:

* Making mediawiki use critical CSS. How to integrate this with mediawiki will be considered at a later time in a separate task.

tools:

* https://www.sitelocity.com/critical-path-css-generator
* https://jonassebastianohlsson.com/criticalpathcssgenerator/
* https://www.corewebvitals.io/tools/critical-css-generator
* https://web.dev/codelab-extract-and-inline-critical-css/

todo:

* 1) Use a browser where you are logged out and have no cookies. This is because cookies and being logged in has an influence on the HTML provided by mediawiki.
* 2) on /test/ add Kicksecure homepage with the normal HTML document that we have now: <code>kicksecure-hp-normal-not-critical-css.html</code>. This will be needed for speed comparison.
* 3) create a copy <code>kicksecure-hp-critical-css.html</code>
* 4) use some tool to extract the critical css. add the critical css to the head. (https://web-dev.imgix.net/image/admin/RVU3OphqtjlkrlAtKLEn.png)
* 5) out-comment all other CSS for a simple test. Search the HTML document for <code>stylesheet</code>. (CSS load with <code>media="print" onload="this.media='all'"</code> can and probably should be ignored and left enabled as it already loads async.)
* 6) load all other CSS async
* 7) compare speed of the two different HTML documents

== Wiki Content ==
=== Whonix-Host ===

https://www.whonix.org/wiki/Whonix-Host

TODO:

* improve introduction, consider using font awesome using widget:Icon_Bullet_List if sensible
* How understandable is https://www.whonix.org/wiki/Whonix-Host#Terminology ? Please suggest improvements.
* https://www.whonix.org/wiki/Whonix-Host improvements:
* that page needs to be properly contextualized (Whonix-Host in development, volunteer help welcome, Whonix live available already anyhow)
* goal of page: illustrate goal, ask for contributions (very much worthwhile. The current progress as of now is for large part based on contributions.)

=== Features ===
todo

* general review
* content improvement

soft todo:

* note: Whonix wiki/Features nicely shows a table when googleing for "Whonix features"
** Therefore keep/improve "Whonix ™ Soft Features" table

'''DEV'''

* irritating: The features listed here have other names and other profiles than the features listed on Homepage -> Somehow rename the page or chapter to make that better or other suggestions=
* Anonymous Browsing and Anonymous Communications, Hosting and Publishing seem to be more like use cases than features -> OK.
* Platform Flexibility
** What does "based on" have to do with flexibility? -> See chapter [[About#Based_on_Debian]]. In short: anything possible with the things its based on should work with Whonix too. No artificial restrictions or limitations which are often falsely assumed.
** What does "Free, Open Source, Libre, Freedom Software." have to do with flexibility? -> Customization is possible and relatively simple.
** What is "Virtual machine images with Type I or 2 hypervisors." ? -> https://www.techtarget.com/searchitoperations/tip/Whats-the-difference-between-Type-1-vs-Type-2-hypervisor Why is that mentioned? Shows that Whonix is flexible enough to be ported to different hypervisors.
* Pre-installed software - why are there not all apps mentioned like on the homepage? -> Please update any missing ones. On wiki/Features it can be more use case based and more elaborated.
* What is "torification" for the uninformed user? -> Torification means the process of routing traffic over Tor.
* Security and Anonymity Protection: They are not real sentences. And it's highly technical. The reader does not know what is even meant by most of this -> True. Can be elaborated?
* Tor Network / Torification
** The text consists of sentences but is a pretty cold start. "Most applications can be" - where in Whonix or elsewhere? What is Tor? -> ""Most applications can be" - applies anywhere. Outside and inside of Whonix. But in that chapter, it's probably best to talk about Whonix. If mentioning the outside Whonix use case, then that there is a much higher risk for leaks. Related to https://www.whonix.org/wiki/About#Security_by_Isolation
** "Both, pre-installed and custom installed applications can be use" - does this have anything to do with tor? -> Related to flexibility of Whonix. Some people assume only pre-installed applications can be used. This is false. Also most custom installed applications can be installed. That should me mentioned somehow.
** This whole chapter seems like a technical documentation, not like a promotion. -> Good if it's both?
* Tunnel and Chaining Support: Very little explanation. Unintelligeble for non-technical users -> True. Please add more context.
* Tunnel Other Anonymizing Networks: like Tunnel and Chaining Support
* Tunnel Support: Very technical sentence and even more technical table
* Whonix ™ Soft Features: Explanations are mid-technical and rather "lifeless" -> True.

=== Mobile_Phone_Security wiki page content enhancements ===
TODO:

* read https://www.kicksecure.com/wiki/Mobile_Phone_Security
* keep notes about the most shocking security and privacy issues, these will be needed for the summary chapter that is to be invented
* summary: on the very top, add a new chapter "Summary", write a summary on top why securing a smartphone and not being spied on is doable in theory but in practice pretty much unfeasible for most users.
* add a few more bulletpoints on the very top (currently there is only "Massive Data Harvesting by Most Phones." and "There are backdoors in most mobile devices."
* add introduction chapter on the very top?
* advice on a better page title as well as
** SEO description
** find/create better illustrative image
* other content suggestions?

== Whonix Homepage Image Fixes ==
* any illustrative images looking non-ideal and should be replaced?

== Kicksecure illustrative images ==
* any illustrative images looking non-ideal and should be replaced?

== illustrative images creation ==
Implementation probably needs discussion.

* Hiding your identity is harder than just hiding your IP.
* You can't be anonymous without being secure.
* your Whonix with Tor versus your IP without Whonix
* route randomization
* Ask yourself - privacy by design / privacy by policy
* freedom / freedom security / security
* why security matters
* why anonymity matters

= WAITING ON =

= REVIEW PLEASE =

== video script: IDN Homograph Attacks [YT short] #2 ==

* as YouTube Short
* based on https://www.kicksecure.com/wiki/Social_Engineering#IDN_Homograph_Attacks
* https://www.kicksecure.com/wiki/Dev/videos#IDN_Homograph_Attacks
* check the revised script, improve
* decide if still a short or normal video
'''DEV'''
* Please check this script again
* There were some updates / changes
** Some rearrangement and some shortening to make it more clear.
** punicode was changed to "punycode"
** The explanation of punycode was also changed to be more accurate. Please check if satisfactory.
** The mention of "proxying" was crossed out. This technique could not be found by Dev. Proxy mirrors could be found but it works a little bit differently. Dev would just omit this small part. More info here: https://f5-studio.com/articles/how-to-protect-your-website-from-proxy-mirrors/
** The copy-paste method was preferred, because it is more convenient and practical
** In the summary sentences were struck out because it's too long and the viewer just heard about it.

Patrick:

* <blockquote>If you come across a suspicious URL in an email, chat, or website, don't click on it. Instead, copy and paste it manually into the browser's address bar. You will see the punycode version and know it's a fake.</blockquote>

== content ==

=== TestersOnly Version if-clause ===
Dev:

* As a sidenote on [[VirtualBox_Testers_Only_Version]] Dev finds it confusion that there is written: "There is currently NO testers-only version of Kicksecure" - maybe there should be an if-clause? - If no version then the following is not shown? - Or at least the text should state that below is the "normal" current version?

Patrick:

* Yes.
* If possible, please make a wiki template that expresses:
** "If [[Template:VersionTesters]] is lower or equal than [[Template:VersionNew]], then show only There is currently NO testers-only version of Kicksecure. Instead, you can find the stable version here. Check back later."
* MultiWiki please.

'''DEV'''
* Done. But it has limits
* The version numbers are first compacted, replacing the dots "." with nothing "", so they are comparable. Without this step Mediawiki strangely compares only up to before the second point, e.g. "16.1.0" is different than "16.2.0" but not different from "16.1.1"
* Unfortunately version numbers are compared as numbers using #ifexpr from the Mediawiki ParseFunctions.
** If they are compared as numbers then 2010 is less then 19110. So if the version jumps from 19.11.0 to 20.1.0 then 19.11.0 would be greater than 20.1.0 which is wrong
** With #ifeq they could be compared as strings but then there is not greater or less than
* This means that we only compare for equality not for greater / lesser then
* If admin wants we can still compare for greater / lesser then. The advantage is that this might be 95% correct. Only in 5% of the cases we might have a false positive
* As requested by admin, [[Template:VersionNew]] has a very visible reminder to also change Template:VersionTesters

= DONE / Log of DevSprint since 2021-12 =

* 2023-04-19
** Windows Installer Dev Coop
** YT shorts rules research
** Video screenshots rewrite 30% less text (to fit shorts criteria)
** Video Homograph rewrite
** Video short about Screenshots production

* 2023-04-18
** Whonix Windows Installer Design analysis + suggestions + Call
** Mediawiki Testers Version If-Clause
** Multiwiki-Deploy + Testing
** code-box fixes
** thumbnail fixes mobile
** /wiki/Download upgrade + homepage

* 2023-04-14
** Mw-collapsible patch review
** tab content controller white border style + dark class + new function data-tcc-url + documentation
** Discussion Todo
** [[Linux]] on Kick + multiwiki
** mininav upgrade mn-dark + documentation
** icon bullet list comma bugfix

* 2023-04-12
** Template Upstream Wiki upgrade
** improved template Archive Link
** Self Support First Policy Page + Template
** Upgrade Mbox template
** New template: introlike

* 2023-04-11
** FlyInNotification mobile links + dark mode close
** Thumb bugfixes
** VideoLink Widget upgrade
** Virtualbox Templates + Redirect + ReplaceLinks
** flatpak-install page fix

* 2023-04-06
** Marketing strategy suggestions
** flyinnotification bug review + little design improvement + headline link
** Video link template
** Virtualbox CLI and XFCE unification
** Flatpak install unification

* 2023-04-05
** Self Support First Policy suggestions
** Donation strategy analysis

* 2023-04-04
** Discussion ToDo
** Video short url impersonation punycode script
** Video short mistrust screenshots script
** flyinbanner link + documentation
** thumb improvements
** Pull request helper-scripts
** Suggestions for "Free Tools marketing strategy"

* 2023-04-01
** Todo updated
** grep-find-unicode-wrapper new version as scan-text-file
** Unicode dangerous characters research
** Video hidden attacks revisions + video description

* 2023-03-31
** FlyInNotification mobile small version
** Bug report answer Collapsible Elements
** Video Hidden Text Attacks production + title image
** Thumbs double border improvements

* 2023-03-29
** Video Hidden Text Attacks production

* 2023-03-28
** Whonix wiki/Linux content fix
** Pagespeed improvements
*** Headline research
*** Research “Links are not crawlable”
*** Total blocking time research and testing

* 2023-03-25
** Donate pages improvements text image design
** Content fix Whonix Linux installer page
** Discussion ToDo
** PayviaPaypal change amount on interval change
** "Time to Interactive" performance research
** Software pitch

* 2023-03-24
** PayViaPaypal upgrades usability, simple design
** FlyinNotification upgrades functionality, design, smallery file size
** Strategy discussion

* 2023-03-22
** mwcombine source maps + uglify syntax + documentation
** Discussion ToDo
** PayViaPaypal redesign (guardian) + cleanup

* 2023-03-21
** Video Kicksecure 001 script
** Cookie warning bug analysis
** Pagespeed optimizations
** mwcombine error output + add source map for custom js

* 2023-03-15
** Discussion Todo
** Image optimization SVG and hero + analysis
** Improved Whonix Linux installer page
** Repo web interface research

* 2023-03-14
** Instantpage documentation
** purge extension and fork analysis
** Donors page thumbnail
** multipart email thunderbird research
** Discussion instantpage and multipart email

* 2023-03-11
** Discussion Todo
** mw-combine upgrade feature justcopy + refactoring + documentation
** DonorCard.css upgrade + DonorTestpage link threshold correction (only s and higher examples)
** Integration and testing instantpage.js
** Headscript refactoring
** Thumbs design fix for gallery thumbs

* 2023-03-10
** Design fixed KS Trust page + Whonix HP
** Discussion ToDo
** BackToTopButton mobile fadeout
** Responsive Thumbnails + docu
** Source map research

* 2023-03-08
** Discussion Todo, DonorCard etc
** Donor cards feature + design upgrade + documentation update
** Donors and Testpage Donors texts
** Template intro thumbnail fixes + notpageimage research
** Content attribution, Design improvements
** Extension:Popup reference preview research and suggestions

* 2023-03-07
** Bugfix PayViaPayPal + upgrade design
** Research image thumb generation mediawiki
** [[Template:intro]] CSS Firefox fix + upgrade hidden thumbnail thumb parameter + documentation [[Dev/mediawiki#Intro_paragraph]]
** Donors Wiki page related tasks

* 2023-03-04
** Discussion ToDo
** new [[Template:DonorCard]] design + 5 levels and anon + Link feature and link indicator + documentation [[Dev/mediawiki#DonorCard]]
** new [[Testpage_Donors]]
** new [[Donors]] page
** [[Template:Intro]] visual improvements

* 2023-03-03
** Bugfix Kicksecure homepage overview-image
** Bugfix newline bug in HeaderMultiWiki
** Sitenotice close button upgrade optically and functionally
** Check image quality
** PagePreview / TextExtracts bugfix on some pages
** [[Template:intro]] upgrade + documentation
** Fontawesome preloading
** Donor Page card design

* 2023-03-01
** Banner bigger close + cookie bugfix
** Discussion CSS optimization and CSS extension
** Banner rewrite with new method and documentation
** Multiwiki deploy and testing

<div class="info-box mw-collapsible mw-collapsed">
Archive
<div class="mw-collapsible-content">


* 2023-02-28
** Image optimization + metatag Research + new helper program
** Codeselect upgrade optional img lazy load + docu
** extension:pagePreviews broken fixes
** intro template and css upgrade

* 2023-02-27
** Discussion ToDo
** ShareTooltip regexp-bugfix + new mediawiki share logo
** Textextracts extension research
** Footer fixing
** Reduce warnings of w3c validator
** Banner slim variants
** short debugging discussion mw-combine error

* 2023-02-22
** Bugfix for mobile back button broken
** Bugfix fors Anchors missing
** Discussion Todo
** Fixed Kicksecure Badge svg file
** Banner dev wanted for Kicksecure was created
** New banners were uploaded and installed

* 2023-02-15
** Creation of 5 banners
** Discussion donor recognition

* 2023-02-14
** MiniModal upgrade all modals close on back button + documentation
** MwCombineWrapper refactoring
** Whonix Kicksecure HP minor fixes
** optimized SVG versions for some logo images
** coming soon sign

* 2023-02-13
** Discussion ToDo
** PageHomepage
*** Modals share anchors introduced
*** Text can now again be marked and individually copied
*** Highlighting of selected card via url hash + extending hidden areas if needed + open modal if available + back button can be used to return from modal
*** CSS reduction + Firefox fixes
*** MiniModal upgrades + documentation [[Dev/mediawiki#Mini_Modal]]

* 2023-02-06
** Discussion ToDo
** CodeSelect highlight language extension variable externalization
** Minify JS-HTML suggestion
** mw-combine sanity test and conditional folder creation for src-copy + documentation
** forums year end banner repair
** Page editing via header super menu oldid fix
** Removed nojs.css mentions and updated documentation
** fonts.css relevance checked and deleted on all wikis
** multi-wiki-deploy, tests and small bugfixes

* 2023-02-04
** CodeSelect Highlight upgrades: less code, better usage, bugfix + documentation
** Optimization mw-combine: better naming, spacing, formatting, usage

* 2023-02-03
** Discussion Todo highlight / prism, discussion strategy
** Replaced highlight-js with prism-js for CodeSelect + new tests on Testpage + feature target highlight + prevent highlight for CodeSelect icon form for speed optimization
** Nojs.css deleted and purged from build.json + styles moved to other style files (closer to nojs styles
** mw-combine improved: folder sanity check, array check for build.json categories

* 2023-02-02
** Discussion Todo
** Research highlight js libs, removed Highligh extension, installation of highlight.js
** CodeSelect integration of deferred highlight.js + new Feature "lang" to control highlight language or set to auto / none
** CodeSelect examples were created [[Testpage1]]
** CodeSelect documentation was updated [[Dev/mediawiki#CodeSelect]]

* 2023-01-31
** Code review for link-to-archive
** CodeSelect review research + rewrites + new feature "target" + nojs adjustments + template lang research + documentation

* 2023-01-30
** discuss codeselect / JavaScript security
** TOCLevelSwitcher upgrade no content shift + documentation
** Sitenotice new functionality was added (data-banner-expires)
** Sitenotice end of year now uses the normal functionality
** Sitenotice thorough documentation [[Dev/mediawiki#SiteNotice_End_Of_Year_Banner]] and [[Dev/mediawiki#SiteNotice_Info_and_Donation_Banners]]

* 2023-01-27
** push to the mediawiki-extensions-CookieToBodyClass git repository
** headscript fail open investigation, research, testing
** New Feature SiteNotice replacement for DismissableSitenotice + documentation [[Dev/mediawiki#SiteNotice_Donation_Banner]]

* 2023-01-26
** Tor Browser noscript optical bug fix + documentation
** Hide banners cleanup
** New Mediawiki Extension CookieToBodyClass + documentation
* 2023-01-25
** Header Donate designfix
** Login image bug and localWiki option concept
** Reproduce attempt for wide resolution bug
** Simplify hide_all_banners + documentation
** Discussion ToDo
** Whonix outreach communication
** Kicksecure vector text convert to path
** About / FAQ mininav unification
** Mediawiki extension research

* 2023-01-24
** Todo discussion
** Footer QR Modal empty img to JS + Testing
** Header Refinement images + multiwiki deploy
** Homepages shaking hands bugfix
** main mw-combine js defer
** fontawesome experiments and research

* 2023-01-23
** Kicksecure and Whonix homepage and footer image optimization including link rewrites to thumbs, lazy loading async decoding and re-uploads of images which are too small. Also documentation: [[Dev/website#Images.2C_Files_and_usage_of_thumb]] and some style upgrades
** Kicksecure Header mobile bugfix
** Mobile bars logo for Kicksecure and Whonix headers. Also 4 main images in header given width and height

* 2023-01-21
** Installation wiki on local Kicksecure VM
** Documentation
** Mediawiki thumb research

* 2023-01-20
** Another test and testing with google pagespeed and gtmetrix + documentation
** Documentation about deferrable js scripts
** new feature: pageRefToLinks + documentation,
** Whonix and Kicksecure HP replace background images with images (for good page metrics)
** multiwiki-deploy and review

* 2023-01-19
** Principle research on mediawiki extensions and review of DismissableSitenotice extension
** Installation local wiki vm und and ssh keygen
** Scrollindicator desktop fix + documentation
** loading eager lazy research with admnin
** Created multiple test cases for loading with google pagespeed under /test

* 2022-12-28
** end-of-year donation banner fix
** broken PayPal donate button investigation

* 2022-12-22
** srcset discussion
** Whonix homepage replace all background images with foreground + give alt attributes
** Kicksecure homepage last images from background to foreground
** srcset sizes research
** full local file CSS JS documentation

* 2022-12-21
** Deactivation and replacement of Bootstrap on Kicksecure and Whonix
** upgrade MiniModal (retain dom events in content, esp. for CodeSelect)
** Sitenotice exclude from search
** Duplicate footer fixed
** Kicksecure homepage head area + no background images + alt attributes

* 2022-12-20
** Discussion page speed
** Search engine bots no index for functional components
** Kicksecure homepage: logo as svg + overview image preload blur
** Whonix homepage slogan and call to action + overview image preview blur
** mediawiki common.js event alternative

* 2022-12-19
** Research Blurhash srcset
** Mediawiki new version CSS and JS fixes: Search + Editor Fullscreen + all pages, nocache cookie, reduced dependencies
** SVGs for Kicksecure logos
** Research hiding repetetive text parts from search bots
** DebugViaUrlModal upgrades

* 2022-12-09
** Outreach thank you mail HTML and mail body + send security discussion

* 2022-12-08
** Discussion thank you message
** Research Multipart-Mime Emails Research + Discussion + Technology outline
** Outreach thank you mail template

* 2022-12-07
** Whonix Exposé 100%
** Outreach communication
** ShareTooltip Markdown bugfix
** Thank you message research

* 2022-12-06
** Video via nginx discussion
** research combine CSS/JS or not
** CSS column bugfix
** Real World attacks page
** Whonix Exposé 60%

* 2022-12-05
** Prevent Enhance Headlines feature + Template + documentation
** HTML5 video on demand HLS DASH etc discussion
** Preloading fonts in Headscript
** HTML5 video play (speed) bug fix
** Templates tcc bug examination
** Page_homepage.css loading discussion

* 2022-12-02
** Whonix Youtube channel go live
** strategy discussion
** Footer Youtube and Invidious buttons
** Whonix Homepage Play button

* 2022-12-01
** Whonix outreach communication
** Whonix 003 Video final render

* 2022-11-30
** Whonix 003 Video review + improvements + title image
** Whonix outreach communication
** deep exif and ffprobe checks for all videos
** Kicksecure welcome page all resolutions
** HTML5-Video research
** Strategy discussion
** created Bitchute channel

* 2022-11-29
** Whonix 003 Video Cut 100%

* 2022-11-28
** Tab Controller new Feature nested tabs
** Outreach artist reviews and communication
** Elementary IO compare HP search for our own communication improvements
** Outreach strategy discussion
** Page speed analysis and improvement suggestions
** Outreach video pre-production

* 2022-11-25
** Odysee and Rumble accounts created
** Footer improvement discussion
** ShareTooltip alt attr improvements
** outreach video script upgrade and discussion
** Whonix outreach communication
** Replace vm and host live mode links
** Analysed Whonix Host page

* 2022-11-24
** Bugfix EOY donation banner contentforSlideserror + refactoring + deploy to Kicksecure and Whonix
** Whonix outreach communication
** Bugfix: Kicksecure Welcome page long screen bug + Whonix checkup for bug (no problems) + newest version EOY donation banner + close button bugfix
** Whonix Forum Post count CSS fix
** Kicksecure + Whonix Donate pages now  MultiWiki
** Share Tooltip Selector Bugfix

* 2022-11-23
** Whonix outreach communication
** Forums End of year banner + onion compatible + tor testing
** HTML/CSS validate errors fixed (there was a W3C error)
** Whonix Forum Search bar Support Link via JS
** Sitenotice Speedup Kicksecure + Whonix + performance test + documentation
** Dispora link for Whonix footer
** Whonix Live Mode page 50%

* 2022-11-22
** Forums CORS Research together with admin
** mw-combine now copies the src files to "src-copy" folder too for different use cases
** Whonix forum: mixed content error research
** archive link selector bugfix
** Forum end of year banner 50%
** wiki end of year banner performance testing
** Whonix welcome page static HTML end of year banner
** Wiki End of year banner Page speed-up research

* 2022-11-18
** Local Browser HP
*** Play button bugfix
*** Payment-links fix
*** Tor Research solution attempts
*** Fix cookie by using localstorage
*** jquery depedency from debian package
*** Documentation

* 2022-11-17
** Mediaviewer CSS fix
** Preparation Whonix Live page

* 2022-11-16
** EndOfYear for local welcome pages 100%
*** deploy to Whonix and Kicksecure
*** Date limit, not shown after 2022-12-31
*** Move whonix local welcome page endofyear library source to kicksecure local welcome page
*** Dismiss close animation
*** documentation [[Dev/mediawiki#SiteNotice_End_Of_Year_Banner]]
** Whonix outreach communication

* 2022-11-15
** Whonix outreach communication
** EndOfYear finalization, smooth fadeIn, customizable title, nojs, deployed to Wikis
** Changed Whonix forums search text
** Changed Whonix and Kicksecure navigation
** EndOfYear for Kicksecure local HP 30%

* 2022-11-14
** Whonix Forum Archive symbol fix
** EndOfYear crypto-adresses, donate-button-mobile, cookie for dismissing, make it param-generic, content shift prevention, tests and preparation to deploy to forums

* 2022-11-12
** Grub-live and USB_installation pages improvements
** EndOfYear Banner 95%
** PayViaPaypal as jQueryExtention
** Whonix forums topics mobile design bugfix
** Donate page panel mobile + learn more

* 2022-11-11
** Whonix outreach + donations discussion
** EndOfYear Banner 30%

* 2022-11-10
** Kicksecure [[Live_Mode]] page creation 100% done
** fontsize CSS helper classes + documentation
** [[Grub-live]] page revision 100% done
** [[:Template:live]] navigation update and redirects from former VM_Live_Mode and Host_Live_Mode pages
** Kicksecure [[USB_Installation]] page review 100%

* 2022-11-09
** Discussion LiveMode and Marketing
** Kicksecure new Live Mode page 30%

* 2022-11-08
** Whonix outreach communication
** Possible shop research and discussion
** Kicksecure GUI images
** Discourse No Jump + Mobile fixes + documentation
** Live Mode content review

* 2022-11-07
** Encrypted Support v1.1 deploy attemps
** Kicksecure Logo Telegram fix
** Discourse forums documentation
** Discourse forums footer + research

* 2022-11-04
** Encrypted support v1.1 - 100%
** https://www.whonix.org/wiki/DoNot - complete content review and many user friendly rewrites

* 2022-11-03
** Kicksecure Forum new images + new categoris
** Kicksecure and Whonix forums legal banner
** Kicksecure and Whonix forums Nojs research and solution
** Encrypted support v1.1 - 20%

* 2022-11-02
** Virtualbox transfer to Whonix
** Forum improvements for Kicksecure and Whonix
** new Whonix forum category images
** Kicksecure logo re-imagining suggestions

* 2022-11-01
** Hidden text danger demonstration Nojs fix
** [[VirtualBox]] page improvements
** Content discussions and improvements
** [[VirtualBox]] page improvements
** General print version improvements of Whonix and Kicksecure
** mw-combine improvements
** Newsletter research
** Whonix outreach voice actor research

* 2022-10-31
** Whonix FAQ improvements, analysis of texts and rewrites

* 2022-10-28
** Integration of Whonix new tor explainer images
** Kicksecure Livemode promo image + HP integration
** Whonix About page improvements
** LeftRightImage Feature promo style
** LeftRightImage Feature imagelink + documentation
** mw-multi-wiki deploy
** Content and examples for [[Shell]]

* 2022-10-27
** Kicksecure internal welcome page image attribution
** skin pref admin documentation
** hide-all-banners noscript research
** CodeSelect insert-html-mode feature, see [[Dev/mediawiki#CodeSelect]]
** Whonix new tor explainer images

* 2022-10-26
** Kicksecure internal welcome page + CC search
** set-up of git repositories (especially new dark mode fork)

* 2022-10-25
** Dark Mode Firefox and Tor Browser research and suggestions
** Virtualbox and Whonix testing on Ubuntu
** Stage Server discussion
** Git deploy call
** Dark Mode Extension Fork + documentation [[Dev/mediawiki#Extension_Dark_Mode_.28Fork.29]]

* 2022-10-24
** Multiwiki/LocalWiki refactoring + documentation
** EditorMultiwikiNotice new + onion feature + documentation see [[Dev/mediawiki#EditorMultiwikiNotice]]
** Whonix wiki old mw-combine quickfix, later revert to stable
** Whonix outreach campaign communication

* 2022-10-23
** Sitenotice mobile scaling bugfix
** Multiwiki/LocalWiki refactoring + documentation

* 2022-10-22
** Mw-combine php notice fix
** new feature TabContentController js, css, nojs, content shift prevention and documentation [[Dev/mediawiki#Tab_Content_Controller]]
** Refactoring of [[Template:VirtualBox_Host_Software_Installation]] with TabContentController

* 2022-10-21
** ShareToolTip markdown/phpbb anchor upgrades bugfixes testing documentation
** Custom footer research + overlay fix
** Footer Randomnews replacement
** Dark mode button for custom footer
** CSS fixes for editorautobackup
** Multiwiki deploy of new features to Whonix and testing

* 2022-10-20
** ShareToolTip upgrade + Clipboard options
** Dark Mode bugfix research + fix
** Footer overlays important review tools research and solution suggestions
** Whonix outreach campaign communication

* 2022-10-19
** Whonix outreach campaign communication
** prevent Sitenotice Content Shift banner and documentation, see [[Dev/mediawiki#SiteNotice_Donation_Banner]]
** CodeSelect Image Button Version and documentation, see [[Dev/mediawiki#CodeSelect]]
** Multiwiki deploy of new features to Whonix and testing

* 2022-10-15
** Research on how to prevent content jumps for Sitenotice. New documentation in [[Dev/mediawiki#SiteNotice_Donation_Banner]] under "Sitenotice display cycle"
** Pageload timing method and pageload url param in [[MediaWiki:MwCombineJsWrapper.js]]
** Performance testing documentation: [[Dev/mediawiki#Performance_Testing]]
** Whonix outreach campaign communication

* 2022-10-14
** Kicksecure + Whonix 2 new HP features
** SiteNotice Layout Shift research and suggestion
** Performance Tests Page [[PerformanceTests]] created
** 2 JS Performance fns created in [[MediaWiki:JsPerformanceTests.js]]

* 2022-10-13
** Kicksecure homepage updated like Whonix HP (structure, css, fns, content)
** added Kicksecure HP Features
** changed Kicksecure HP cumulative changed metric from 0.24 → 0.02 by predictable image sizes
** seo images research

* 2022-10-12
** ShareTooltip new Sharing Options
** Whonix HP content shift reduction and speed optimizations
** Kicksecure HP Features + Upgrade 50%

* 2022-10-11
** new Debug via URL Modal, see [[Dev/mediawiki#Debug-via-url-modal]] + documentation
** porting to Whonix
** mw-combine finalization and dontload options
** new [[MediaWiki:MwCombineJsWrapper.js]] for mw-combine. For user transparency
** Updated Javascript documentation [[Dev/mediawiki#Javascript_specific]]

* 2022-10-10
** Review outreach storyboard and corrections
** new landing page feature cards
** mw-combine more dontload options
** landing page pagespeed optimizations

* 2022-10-09
** Meeting pagespeed analysis and optimization + documentation

* 2022-10-08
** Headline Bug (hidden behind padding)
** gtmetrix / pagespeed analysis – performance test strategy
** new image for everything Tor

* 2022-10-07
** ShareTooltip upgrade as jQuery Extension
** CodeSelect upgrade as jQuery Extension
** Creation EnhanceHeadlines
** Deployment to Kicksecure and Whonix
** Testing
** Documentation
** Homepage new features cards and images

* 2022-10-01
** realization contractor communication, negotiation and clarification

* 2022-09-30
** Script 003 outreach improvements and realization contractor research and communication

* 2022-09-29
** Script 003 outreach preproduction: storyboard (incl. texts, images, restructuring)

* 2022-09-28
** Shortened rewrite Script 003 outreach
** discussion privacy first mobile operating systems
** small bugfix leftRightImage

* 2022-09-23
** Script 003 outreach
** Whonix installation and virtualbox testing
** documentation

* 2022-09-22
** ShareTooltip further upgrades and finalization
** user group promo texts and images collage

* 2022-09-21
** outreach artwork finalization
** ShareTooltip, bugfix, documentation and deployment

* 2022-09-20
** ShareTooltip upgrades and revisions
** outreach artwork reviews

* 2022-09-19
** Introduction of ShareTooltip component
** work on social media strategy

* 2022-09-16
** User Groups concept images
** coordination with artist 
** Homepage new image Linux account separation research
** Homepage tooltip upgrade
** Homepage link symbol repositioning

* 2022-09-15
** review and improvement Main_Page
** new [[Template:LeftRightImageText]] + documentation
** upgrade [[Widget:Download_Button]] (scalable by fontsize) + documenation
** review of About, Features, FAQ and more

* 2022-09-13
** Homepage clickable boxes logos
** Homepage apps Section alignment
** improved intro paragraph

* 2022-09-12
** Download page optimization
** video content script and review
** new feature Left-Right Image Text

* 2022-09-09
** video content script
** video content banner

* 2022-09-08
** video content logo, setup, texts

* 2022-09-07
** bugfix Modal Search
** bugfix EditorSave
** video content production

* 2022-09-06
** new promo images
** MiniModal vertical cut fix
** video content production

* 2022-09-02
** Homepage fixes
** new promo images

* 2022-09-01
** Homepage content review
** new promo images
** improved modals
** mobile fix for section press

* 2022-08-31
** Upgraded [[Dev/mediawiki#Mini_Modal]]
** Upgraded [[Dev/mediawiki#Editor_SaveAndContinue]]
** created new Element Col Container see [[Dev/mediawiki#Col_Container]]
** Improved Whonix Homepage

* 2022-08-30
** Improved Whonix Homepage
** Improved images
** Improved Whonix Main_Page

* 2022-08-29
** new tool Icon-Bullet-List widget, CSS and documentation
** new CSS feature Color Schemes + documentation
** new feature vspacer
** improved Download Button onion link
** Fixed hidden banner issue

* 2022-08-25
** Whonix content production

* 2022-08-24
** Whonix content production
** table icon improvements: Whonix comparison with VPNs

* 2022-08-23
** New tool: info-tooltip
** added new nojs-classes
** new [[Mediawiki:Pages.js]]
** table improvements: Whonix comparison with VPNs

* 2022-08-22
** Whonix webpage improvement, table Whonix comparison with VPNs

* 2022-08-20
** Whonix content production

* 2022-08-18
** Whonix content production

* 2022-08-17
** Content Review
** improved https://www.whonix.org/wiki/Contribute
** Mininav upgrade for external links
** reverted Download-Button back to widget
** converted Responsive Thumbnail into template
** created intro paragraph design class

* 2022-08-16
** Content Review

* 2022-08-15
** CSS and JS validation and review with linters
** reviewed and changed mobile.js
** improved hide-enlarge

* 2022-08-05
** Improvement on Whonix Homepage

* 2022-08-04
** Javascript Dom Timing bug research
** Mediawiki Newline Bug research and report

* 2022-08-03
** Improved mw-combine allow comments in build.js and docu
** changed from Widget to Template Download-button
** Kicksecure HP mobile fixes
** TOC level switcher upgrade
** MediaWiki newline bug research
** small Headscript content upgrades

* 2022-08-02
** Fix Sitenotice only visible on pages with localSkin
** small Homepage fix
** Thumbnails fix
** Deploy Fixing
** CSS Refactoring
** Headscript content upgraded

* 2022-08-01
** HeadScript Upgrade nojs.css
** headscript-upgrade nojs.css
** Template Header minified
** CSS Extension review
** Kicksecure Footer fix
** Documentation of new include concept

* 2022-07-30
** HeadScript Upgrade mw-autogen
** mw-combine.php
** headscript-content.php
** refactored existing JS files

* 2022-07-29
** Javascript research and development of new include concept with autogenerated JS and CSS

* 2022-07-28
** [[Dev/mediawiki#Wiki_Js_Loader]] - wikiJsLoader 100%, debug feature and documentation
** New design and level dependence feature for [[Dev/mediawiki#TOC_Level_Switcher]]
** [[Dev/mediawiki#Archive_link]] nofollow feature for onion links
** [[Dev/mediawiki#SearchModal]] was created to outsource the SearchModal from the Header
** [[Dev/mediawiki#Mini_Modal]] was upgraded with throwing new events

* 2022-07-27
** [[Dev/mediawiki#Wiki_Js_Loader]] - wikiJsLoader 95% and documentation

* 2022-07-26
** Fix [[Template:Box]] and [[Template:Mbox]] if-clauses
** Checked Whonix wiki exports all present in Kicksecure wiki
** Created Ahmia logo https://www.whonix.org/wiki/File:Search-ahmia.png

* 2022-07-25
** MultiWiki refactoring
** info-box improvement thumbs

* 2022-07-22
** Fix Vector 22 search mobile
** MultiWiki Restructure plan and Doc
** MiniModal Navi Fix
** EditorAutoBackup V2 plan

* 2022-07-21
** Docu Flagged Revisions
** Research, analysis, docu for skins
** Fix search for Vector 2022 skin
** Fix burger menu for Vector 2022 skin

* 2021-07-20
** Fix EditorAutoBackup all buttons working
** Fix and document Revision Bottom bar, see [[Dev/mediawiki#MediaWiki_limitations]]

* 2022-07-18
** restructuring of [[Dev/mediawiki]] finalization
** new module MiniModal
** new module EditorAutoBackup

* 2022-07-16
** Research regarding wgCanonicalNamespace
** restructuring of [[Dev/mediawiki]]

* 2022-07-15
** Whonix BIMI Logo SVG fix
** FlyInNotification converted to MultiWiki
** General MultiWiki conversion

* 2022-07-14
** Created badge and seal "Hardened by Kicksecure" [[Dev/Logo#Badge]] and [[Dev/Logo#Seal]]
** Fixed [[Signing_Key]] on Mobile
** Whonix BIMI Logo SVG created
** Finalized [[Homepage]]
** Long lines fix https://www.whonix.org/wiki/Onionizing_Repositories#Footnotes
** Fixed Snowden Images https://github.com/EgoBits1/Whonix-Website/issues/2

* 2022-07-13
** Continued and finished work on [[Homepage]].

* 2022-07-12
** og:image on all pages
** image for chroot
** fixed Kicksecure Text Logo
** improved [[Download]], [[Donate]]
** Kicksecure BIMI Logo SVG created
** improved Header and Header Menu
** created [[Homepage]] and style first and second section

* 2022-07-11
** use-2-column class + documentation + already applied to https://www.kicksecure.com/w/index.php?title=Mobile_Phone_Security&stable=0#Espionage_Data_Harvesting
** Repaired "based on Kicksecure" image to fit frame on https://www.whonix.org/wiki/Homepage
** Design fix: Whonix News in Footer
** Design upgrade: TM and C symbols as images in Whonix Footer, R symbol prepaired in code to replace TM in the future
** Whonix Facebook Profile: Upgrade to 400x400px
** Updated [[Template:Supported Platforms Icons]] with new images
** New OG:images for Facebook, Twitter, Reddit, Github. New OG:images for Download sub pages
** Deployed images on Download subpages

* 2022-03-23
** Tried to separate data of [[Mediawiki:FlyInNotification.js]] into separate JSON file. Failed because of insufficient Mediawiki Javascript content and data access API

* 2022-03-19
** Kicksecure new logo finalization
** data export to Kicksecure

* 2022-03-18
** Kicksecure logo new design

* 2022-03-17
** Welcome page finalization
** new improved version of Whonix concept image

* 2022-03-16
** Redesign Welcome page part 1
** FlyInNotification improvements
** Upgrade of [[Template:Box]]

* 2022-03-15
** FlyInNotification finalization
** predictable column break classes für 3-column areas

* 2022-03-10
** creation of module FlyInNotification

* 2022-03-09
** Redesign of Homepage amendments

* 2022-03-07
** Redesign of Homepage finalization and made responsive

* 2022-03-05
** Redesign of Homepage part 2

* 2022-03-04
** Redesign of Homepage part 1

* 2022-03-03
** DownloadButton now responsive
** NoJS version of ExpandAll
** Mobile scrollbars

* 2022-03-01
** Make page responsive [[VirtualBox]]
** improved manually place anchors [[Template:Anchor]]
** fixed: header overlaps direct links
** Expand/Collapse All button beautified, improved functionality and Javascript rewritten
** beautified: [[Documentation]], [[Advanced Documentation]] and [[Design]]
** introduced: class "use-3-columns" and subclass "keep-together" [[Dev/mediawiki#class_use-3-columns]]

* 2022-02-28
** improved [[Template:Box]] and [[Template:Mbox]], see [[Dev/mediawiki#Box_and_MBox]]
** improved [[Template:DownloadTableUnified]]
** improved [[VirtualBox]]

* 2022-02-26
** improved [[Donate/Affiliate_Link]]
** introduced thumbs without enlarge Button
** improved Expand/Collapse button

* 2022-02-25
** [[Dev/wiki#JavaScript_vs_no-JavaScript|JavaScript vs no-JavaScript div tags]]
** improved [[Donate/PayPal]]
** improved design details of payment pages

* 2022-02-24
** images (.thumb, .thumbinner) made responsive, examples see [[Warning]]
** Donation panel, mininav, EUR page improvements
** Download_Button redirect feature

* 2022-02-23
** Improved donation panel: Payment links, design
** Improved our Extension:CSS fork, alternative inclusion method for local CSS
** further new Vector skin fixes: min-width

* 2022-02-22
** new Vector skin activated, resulting problems fixed
** 10 year banner: close improved, scaling for mobile

* 2022-02-21
** 10 year banner created
** SiteNotice improvements and fixes
** Php Notice Undefined Index fixes

* 2022-02-12
** realization PayPal module, see [[Dev/mediawiki#PayViaPaypal_module]]

* 2022-02-11
** donation panel Nojs solution
** donation panel realization and images for other payments

* 2022-02-10
** improved FullScreenEditor for CodeMirror
** improved donation panel

* 2022-02-09
** new NoJS classes available: [[Dev/mediawiki#NoJS-Only_classes]]

* 2022-02-08
** donation panel crypto section finished
** donation panel paypal section design finished

* 2022-02-07
** development start of donation panel
** creation of original QR logo

* 2022-02-05
** improved Header overlap: no found occurrences anymore. Plus documentation: [[Dev/mediawiki#Fixed_Header_Overlap_for_anchors]]
** improved Mininav style when item stack and for smaller displays
** research and documentation about DismissableSitenotice
** research and documentation about GDPR CookieWarning

* 2022-02-04
** SiteNotices beautified, enhanced via JS and documented
** Footnotes Newline in the normal html way again, <code><nowiki><br></nowiki></code> for newline
** BackToTopButton documentation
** Mediawiki notifications (e. g. "Your edit was saved") beautified for whonix theme and placed visibly below header

* 2022-02-03
** SaveAndContinue-Button: Modal improvement
** Back to Top Button introduced
** Rejected: Scrollable Table Bugfix - this is a result of the table being hidden in an invisible element, so not a bug. If the table is hidden is has no dimension and so it cannot "know" if its content is oversize
** Footnotes always respect newlines setting and discussion (later reverted)
** [[Widget:Download_Button]]: responsive for small displays (under 450px)

* 2022-02-02
** mini navigation (buttons on top of some pages) visually enhanced
** wiki edit preview our-footer overlaps save bar bugfix
** Archive_link: explained wrong "<code><nowiki>|onion={{QubesOS_onion}}</nowiki></code>" vs correct use "<code><nowiki>|onion=http://{{QubesOS_onion}}</nowiki></code>"

* 2022-01-31
** RandomNews for footer shortened and improved
** TOC hide/show improved

* 2022-01-20
** tables oversize solution introduced, also for mobile swipe indicator for oversize
** Download Page, supported icons improved

* 2022-01-19
** improvements for mediawiki search
** new mono font introduced
** pre alternative for special cases introduced
** table of contents jump paddings corrected

* 2022-01-18
** improved styles for tables, lists, blockquotes, pre, code etc

* 2022-01-17
** codeSelect Bugfixes and style improvements

* 2022-01-15
** Development of Extension:CSS fork with new functionality
** Header improved for JS users

* 2022-01-14
** Header overlapping jump targets fixed
** Vector Skin remove external link symbols
** Editor Fullscreen Feature for editor added
** Header made responsive down to 370px and optimized for mobile usability
** CodeSelect Nojs style fix + new parameter inline so multiple instances can be combined in one line {{CodeSelect|code=--target virtualbox|inline=true}}, {{CodeSelect|code=--target qcow2|inline=true}}, and {{CodeSelect|code=--target raw|inline=true}}

* 2022-01-13: Completely new Header developed and installed
** Header is inserted as a Template and fixed to top
** Header features like the header form 2022-01-09
** Completely Nojs and Mobile friendly

* 2022-01-11: SaveAndContinue-Button: New JS-Feature for faster Development

* 2022-01-10: Creation of BodyScript2 Mediawiki Extension

* 2022-01-09: New Header developed
** Restructuring via Sidebar
** unifying all menus in one supermenu
** replacement of donate button
** Main Logo links to whonix.org
** nice hover effects
** Search in modal instead of box (for js users, else go to search page)

* 2022-01-08: Nojs.css incorporated - styles exclusively for Nojs visitors

* 2022-01-06: New footer incorporated
** new Style, better layout and ordering
** Bootstrap modals for content
** engaging action buttons
** Integration of whonix news

* 2022-01-06: Bugfix Archive_link Onionshare mishandling (eg https://flathub.org/apps/details/org.onionshare.OnionShare), Bugfix Archive_link CSS not loaded in Tor browser. Other bugfixes. Subdomain_link improved.

* 2022-01-03: Crypto address templates unified and Crypto address images unified

* 2021-12-31: Footer RandomNews. Solution: RandomNews template was not available in Footer2 widget (because: widget), so RandomNews was called in Footer2-Template. In template it is hidden by CSS and the whonix random news section in footer is filled with generic text. If JS is available RandomNews are moved to Footer (true HTML widget area)

* 2021-12-31: CodeSelect Improvements, Refinements #3. Green color and check mark if copy is clicked

* 2021-12-30: CodeSelect Improvements
** after clicking the copy symbol, the copy symbol changes into a green checkmark, later changes back
** CodeSelect can be called as a template but also simply by <pre><div class="code-select">code</div></pre> - essential for usage in Widgets

* 2021-12-29: Footer subdomain fixes by protocol and apex domain for forums subdomain (whonix.org and .onion)

* 2021-12-28: Footer redesigned

* 2021-12-24: Template [[Template:Subdomain_link]] and [[Widget:Subdomain_link]] created (ability to link without knowing the website context)

* 2021-12-23: CodeSelect further improved: less white space, more compact, better nojs-version, better js-animation

* 2021-12-23: Combi task: External Links / Template + Widget Archive-Link
** Improved Mediawiki Extension "Link to archive"
*** differentiate automatically between normal link, onion-link and link to web.archive.org
*** Show logos instead of long "[archive]" text
*** logo / title attribute / logo link href according to linked url: normal → archive symbol + archive link / onion → onion logo and onion link / archive link → archive logo and same link
**  Template [[Template:Archive_link]] and [[Widget:Archive_link]] and [[MediaWiki:Archive Link.css]] created: Similar to "Link to archive", but you can choose if you want an archive link, onion link or both

* 2021-12-21: Whonix Logo Format: discussed: jpeg and png specific use cases. And logo-text and logo delivered without padding

* 2021-12-21: Whonix Logo finished
** last revision of logo submitted and accepted
** export accordning to guidelines: https://www.whonix.org/wiki/Dev/Logo
** no problems reported by reviewer

* 2021-12-20: mediawiki skin selection
** Whonix? -> Keeping mediawiki skin Foreground and adding CSS fixes later.
** Kicksecure: Which skin should be used as foundation? -> Same but with different CSS to have distinctive styles/colors.

* 2021-12-19: Colored Platform Icons, 500px*500px
** some icons pulled from web in better solution
** apple logo rights research. Seems using the logo is in most of the world public domain and in copyrighted jurisdictions logo is considered fair use and used by open source projects (means no licence)
** kvm logo complete redesign
** review/improve colored symbols for [[Template:Supported_Platforms_Icons]] since these are used on [[Download]] and whonix.org homepage

* 2021-12-18: Whonix old logo refinement, old text removed, text "Whonix" redrawn

* 2021-12-17: CodeSelect finished
** HTML restructured, Style improved
** direct copy button added, info tooltip added
** modernized und documented JS mechanic
** improved upon old mechanic with sidescrolling
** Non-JS compatible with similar style

* 2021-12-16: Update Download Button VirtualBox wiki page Download Button: prettify and easier functionality

* 2021-12-14: invoice template improvements

* 2021-12-13: discuss (easy, not important): cannot click inspect on other websites

* 2021-12-13 CSS very basic review. Answers for the following questions are desired:
** Is Whonix wiki currently using [[MediaWiki:Foreground.css]]? Yes.
** Is [[MediaWiki:Common.css]] currently in use? Also Yes.
** Advantages and disadvantages of merging these pages? -> No. Keep and [[MediaWiki:Common.css]] and [[MediaWiki:Foreground.css]] separate. Split into essentials (CSS for CodeSelect in [[MediaWiki:Common.css]]) and skin (Foreground) ([[MediaWiki:Foreground.css]]) specific.
</div>
</div>

= Footnotes =
{{reflist|close=1}}
[[Category:Development]]
{{Footer}}