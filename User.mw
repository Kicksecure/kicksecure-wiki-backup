{{Header}}
{{title|title=
User Management
}}
{{#seo:
|description=Guide to managing users, including creating new users, assigning permissions, and switching between user accounts in {{project_name_short}}.
|image=User-management12312.jpg
}}
{{passwords_mininav}}
[[File:User-management12312.jpg|thumb]]
{{intro|
This guide provides step-by-step instructions for managing user accounts in {{project_name_short}}, enhancing system security and facilitating multi-user environments.
}}

= Add a New User =
Optional!

To create a new user account named <code>user2</code>, execute the following command:

Note: Replace <code>user2</code> with the desired username for the new account.

{{CodeSelect|code=
sudo adduser user2
}}

This command will prompt you to set a password and fill in additional information for the new user. Ensuring each user has a unique account helps maintain system security and organizes user-specific configurations.

= Allow New User to Login to Virtual Console =
Optional!

This step is necessary only if the new user account should have access to the [[Desktop#Virtual_Consoles|Virtual Console]] for direct system interaction without a graphical interface. This can be useful for users that will also be members of the <code>sudo</code> group for purposes of [[recovery]].

(This is related to security feature [[Dev/Strong_Linux_User_Account_Isolation#Console_Lockdown|Console Lockdown]].)

{{CodeSelect|code=
sudo adduser user2 console
}}

= Allow New User Sudo Access =
Optional!

If you want <code>user2</code> to perform administrative tasks with elevated privileges, add them to the <code>sudo</code> group.

See also [[Root|Safely Use Root Commands]] for best practices when executing commands as root.

{{CodeSelect|code=
sudo adduser user2 sudo
}}

Adding <code>user2</code> to the <code>sudo</code> group enables them to execute commands with root privileges by prefacing commands with <code>sudo</code>. Use this responsibly to prevent unintended system changes.

= Switch User =
To switch to the new user account, follow these steps:

Start menu &rarr; <code>Log Out</code> or <code>Switch User</code> &rarr; login

* '''Username''': <code>user2</code>
* '''Password''': The password set during the creation of <code>user2</code>.

See also:

* [[Login]]
* [[Root#Substitute_User_.28su.29_Command|Substitute User (<code>su</code>) Command]]

= User Restrictions =
TODO: document topics not covered yet

* restricted shell (any secure available?)
* libpam-chroot (might be weak?)
* /etc/security/limits.conf
* file system quotas
* snoopy
* Logging off idle users

= Meanings of Special Characters in the Password Field of /etc/shadow File =

In case you are not using {{ project_name_long }}, it is advisable to consult your OS documentation, as special characters might be different and have different meanings depending on the OpenSSH server build flags passed by the package maintainer or yourself.

The shadowed password file has fields delimited by <code>:</code>. The file stores user <u>passwords</u> in the <u>second field</u>, almost always hashed unless the user set the password manually with a tool that doesn't hash the password.

Behind the scenes, <u>shadow(5)</u> interacts with <u>crypt(3)</u> for password manipulation. <u>crypt(3)</u> generates the hashed password, which is always entirely printable ASCII and does not contain whitespace, <code>!</code>, <code>*</code>, <code>:</code>, <code>;</code>, or <code>\</code>. These characters are reserved for special meanings to be used by interacting tools such as <u>passwd(5)</u> and <u>shadow(5)</u>. The usage of <code>;</code> and <code>\</code> in the shadow password field is undocumented and possibly dependent on the <u>passwd(5)</u> implementation; using them is discouraged, as programs that read the hashed password, such as SSH, might not understand their meaning.

'''Note:''' Do not edit the <code>/etc/shadow</code> file directly. Instead, use proper tools to interact with it, such as <code>adduser</code> and <code>passwd</code>. Note that not all tools allow setting arbitrary special characters or modifying the password after creation.

== Tools with Options Discouraged from Being Used ==

'''<code>usermod</code>:'''
* <code>-p, --password PASSWORD</code>: Expects the password to be already encrypted.

'''<code>useradd</code>:'''
* <code>-p, --password PASSWORD</code>: Expects the password to be already encrypted.
* Cannot modify passwords of already existing users.

== Recommended Usage ==

'''<code>usermod</code>:'''
* <code>-L, --lock</code>: Locks the password.
* <code>-U, --unlock</code>: Unlocks the password.

'''<code>passwd</code>:'''
* <code>-l, --lock</code>: Locks the password.
* <code>-u, --unlock</code>: Unlocks the password.

'''<code>adduser</code>:'''
* <code>--disabled-login</code>: Locks the password (but may also change the shell to <code>/usr/sbin/nologin</code> if <code>--system</code> is used).
* <code>--disabled-password</code>: Disables the password.

== Table: <code>/etc/shadow</code> Special Characters Comparison Table ==

{| class="wikitable"
|+ Special Characters in the Password Field
! Symbol <!-- Special symbol -->
! Field <!-- Which field it is in -->
! Meaning <!-- What it indicates -->
! Explanation <!-- Details -->
|-

| <!-- Symbol --> <code>!</code>
| <!-- Field --> First character
| <!-- Meaning --> Locked password
| <!-- Explanation --> When <code>!</code> appears in the aforementioned field, the account is locked, and the user cannot authenticate using a password.
|-

| <!-- Symbol --> <code>*</code>
| <!-- Field --> First character or after <code>!</code>
| <!-- Meaning --> Disabled password
| <!-- Explanation --> When <code>*</code> appears in the aforementioned field, the account is disabled, and the user cannot authenticate using a password.
|-

| <!-- Prefix --> <code>$PREFIX$PASS</code>
| <!-- Field --> Last field
| <!-- Meaning --> Hashing scheme and hashed passphrase
| <!-- Explanation --> The example uses <code>PREFIX</code> for the hashing prefix and <code>PASS</code> for the hashed passphrase. Nothing prevents a user from adding a plain-text password that follows the same syntax.
|-

|}

Fields can coexist, and enforcement of character meanings is done left to right. Here are some examples:

{{CodeSelect|code=
!               # password locked
!!              # password never set (Red Hat syntax), unlocked
!*              # password locked and disabled
*               # password disabled
$PREFIX$PASS    # password set
!$PREFIX$PASS   # password set, locked
!*$PREFIX$PASS  # password set, locked and disabled
*$PREFIX$PASS   # password set, disabled
}}

<code>!</code> is locked from SSH when using <code>UsePAM no</code>, while <code>*</code> is not because:

* <code>*</code> is <code>--disabled-password</code>.
* It is not <code>!</code> (<code>--disabled-login</code>).

= Attribution =
{{sdebian
|link=https://www.debian.org/doc/manuals/securing-debian-manual/ch04s11.en.html#user-limits
|text=Limiting resource usage: the limits.conf file
}}

{{sdebian
|link=https://www.debian.org/doc/manuals/securing-debian-manual/ch04s11.en.html#user-restrict
|text=Restricting users's access
}}

{{sdebian
|link=https://www.debian.org/doc/manuals/securing-debian-manual/ch04s11.en.html#idm1440
|text=User auditing
}}

{{sdebian
|link=https://www.debian.org/doc/manuals/securing-debian-manual/ch04s17.en.html
|text=File system limits and control, Using quotas
}}

{{reflist|close=1}}
{{Footer}}
[[Category:Documentation]]