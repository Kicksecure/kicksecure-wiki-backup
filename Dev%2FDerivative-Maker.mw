{{Header}}
{{title|title=
Derivative-Maker - Debian based Linux Derivative Maker
}}
{{#seo:
|description=Can build Debian Derivatives such as Kicksecure and Whonix.
}}
{{intro|
[https://github.com/derivative-maker/derivative-maker Derivative-Maker] can build Debian Derivatives such as Kicksecure and Whonix.
}}
= Introduction =
* https://www.whonix.org/wiki/Dev/Porting#Porting_Simplicity
* https://www.whonix.org/wiki/Dev/Virtualization_Platform#Other_Virtualization_Platforms

= Existing Derivative-Maker Features =
== Essential Derivative-Maker Features ==

* '''[functionality]''' build Kicksecure VM images
* '''[functionality]''' build Whonix-Gateway VM images
* '''[functionality]''' build Whonix-Workstation VM images
* '''[functionality]''' download newer packages from third-party repositories such as The Tor Project APT repository and the VirtualBox APT repository
* '''[functionality]''' install Tor Browser by default inside Whonix-Workstation
* '''[functionality]''' supports using APT Cache to speed up builds
* '''[functionality]''' <code>--target virtualbox</code> build VirtualBox ova images
** '''[functionality]''' custom VirtualBox VM settings (<code>VBoxManage modifyvm "$VMNAME" --synthcpu on</code> etc.)
* '''[functionality]''' <code>--target qcow2</code> build KVM images
** '''[functionality]''' <code>xz</code> archive creation
** '''[functionality]''' adding <code>libvirt</code> <code>xml</code> files to the <code>xz</code>
* '''[functionality]''' default login user account creation, user <code>user</code> / password <code>changeme</code>
* '''[stability]''' strict errot handling, exit code checking everywhere
* '''[security]''' does not use non-deterministic binary base boxes (VM images) (which if compromised would compromise the resulting VM image)
* '''[security]''' all digital software signatures are verified
* '''[future-proof]''' prospective support to create deterministic images (once this is generally possible, Derivative-Maker can also learn this)

== Non-Essential Derivative-Maker Features ==

* '''[easy-of-development]''' step based, build steps case be run manually to speed up development
* '''[easy-of-development]''' injection of custom build steps
* '''[customization]''' building VM images that do not come with a desktop environment

flavor

* '''[customization]''' building VM images that do not come with derivative default applications

== Undecided Priority Derivative-Maker Features ==

* '''[functionality]''' automatically installs all required build dependencies on the host system
* '''[functionality]''' <code>--arch</code> parameter support (<code>--arch amd64</code> or <code>--arch i386</code>), probably soon arm64
* '''[functionality]''' <code>--kernel</code> and <code>--headers</code> parameter support (<code>--kernel linux-image-amd64</code> <code>--headers linux-headers-amd64</code>)
* '''[functionality]''' install derivative packages from own custom remote repository
* '''[functionality]''' interactive error handler to repeat commands, open a shell or ignore them
* '''[functionality]''' <code>--target root</code> (for physical isolation)
* '''[functionality]''' <code>--target raw</code> build raw images
* '''[functionality]''' install different packages for VirtualBox (<code>virtualbox-guest-x11</code>) and kvm (spice...)
* '''[functionality]''' Separate VirtualBox / KVM builds <ref>
https://forums.whonix.org/t/non-qubes-whonix-13-0-0-1-0-x-issues/2443/4
</ref> using <code>--target virtualbox</code> or <code>--target qcow2</code>.
* '''[security]''' build from local self-built apt repository rather than from binary remote repository

from "source code"

* '''[security]''' creation of hash sum verification and gpg signatures
* '''[security]''' build images that never had the derivative's remote/binary repository enabled
* '''[security]''' build and install all derivative packages during derivative image build
* '''[security]''' use onion apt sources for building
* '''[stability]''' protection from bad build surprises
** '''[stability]''' break or do not break when uncommitted changes are found
** '''[stability]''' break or do not break from non-tag
* '''[customization]''' <code>--confdir /path/to/config/dir</code>
* '''[customization]''' <code>--tb none|closed|open</code>
** '''[customization]''' none: Do not install Tor Browser.
** '''[customization]''' closed: Fail closed if Tor Browser cannot be installed.
** '''[customization]''' open: Fail open if Tor Browser cannot and installed.
* '''[customization]''' custom VM settings during build (these can of course be manually changed by the user anyhow), supported parameters with examples:
** '''[customization]''' <code>--vmram 128</code>
** '''[customization]''' <code>--vram 12</code>
** '''[customization]''' <code>--vmsize 200G</code>
* '''[easy-of-development]''' easy to implement creating other image types (raw images etc.)
* '''[easy-of-development]''' cleanup command removing temporary files and/or images
* '''[easy-of-development]''' optional build step skipping feature

= Footnotes =
<references />
[[Category:Design]] [[Category:Development]]
{{Footer}}